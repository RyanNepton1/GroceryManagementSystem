Reusing configuration cache.
> Task :processResources UP-TO-DATE
> Task :processTestResources UP-TO-DATE
> Task :compileJava UP-TO-DATE
> Task :classes UP-TO-DATE
> Task :compileTestJava
> Task :testClasses

> Task :test

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Successfully create an order > Create and delete orders - Successfully create an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Successfully create an order - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully create an order                         [90m# CreateDeleteOrder.feature:47[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | pending            |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
    items being added to order set to pending
    [1] Starting cost calculation...
    [1] Same-day delivery selected. Adding fee of 500 cents.
    [1] Processing item: Eggs
    [1]   Unit price (cents): 549
    [1]   Quantity: 2
    [1]   Discount multiplier: 950
    [1]   Discounted item cost (cents): 1043
    [1]   Running total cost (cents): 1543
    [1] Total cost set to: 1543 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
    Order #5 created successfully.
      [32mWhen [0m[32m[0m[32m[1m"obiwan212"[0m[32m attempts to create an order with deadline [0m[32m[1m"SameDay"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.attempts_to_create_an_order_with_deadline(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32m[0m[32m[1m"obiwan212"[0m[32m shall have a new order[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.shall_have_a_new_order(java.lang.String)[0m
    Expected deadline: SameDay
    Actual deadline: SameDay
    Order details: ca.mcgill.ecse.grocerymanagementsystem.model.Order@4a9f80d3[orderNumber:5,errorMsg:null,hasErrorMsg:false,pointsUsed:0,totalCost:0,pricePaid:0]
      datePlaced=null
      deadline=SameDay
      groceryManagementSystem = 35beb15e
      orderPlacer = 41fe9859
      orderAssignee = null
      [32mAnd [0m[32mthe newly-created order shall have deadline [0m[32m[1m"SameDay"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_newly_created_order_shall_have_deadline(java.lang.String)[0m
      [32mAnd [0m[32mthe newly-created order shall have [0m[32m[1m0[0m[32m items[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_newly_created_order_shall_have_items(java.lang.Integer)[0m
      [32mAnd [0m[32mthe newly-created order shall not have been placed[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_newly_created_order_shall_not_have_been_placed()[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m5[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Successfully create an order > Create and delete orders - Successfully create an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Successfully create an order - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Successfully create an order > Create and delete orders - Successfully create an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Successfully create an order - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully create an order                          [90m# CreateDeleteOrder.feature:48[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | pending            |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
    items being added to order set to pending
    [6] Starting cost calculation...
    [6] Same-day delivery selected. Adding fee of 500 cents.
    [6] Processing item: Eggs
    [6]   Unit price (cents): 549
    [6]   Quantity: 2
    [6]   Discount multiplier: 950
    [6]   Discounted item cost (cents): 1043
    [6]   Running total cost (cents): 1543
    [6] Total cost set to: 1543 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
    Order #10 created successfully.
      [32mWhen [0m[32m[0m[32m[1m"obiwan212"[0m[32m attempts to create an order with deadline [0m[32m[1m"InOneDay"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.attempts_to_create_an_order_with_deadline(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32m[0m[32m[1m"obiwan212"[0m[32m shall have a new order[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.shall_have_a_new_order(java.lang.String)[0m
    Expected deadline: InOneDay
    Actual deadline: InOneDay
    Order details: ca.mcgill.ecse.grocerymanagementsystem.model.Order@31024624[orderNumber:10,errorMsg:null,hasErrorMsg:false,pointsUsed:0,totalCost:0,pricePaid:0]
      datePlaced=null
      deadline=InOneDay
      groceryManagementSystem = 25bcd0c7
      orderPlacer = 32cb636e
      orderAssignee = null
      [32mAnd [0m[32mthe newly-created order shall have deadline [0m[32m[1m"InOneDay"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_newly_created_order_shall_have_deadline(java.lang.String)[0m
      [32mAnd [0m[32mthe newly-created order shall have [0m[32m[1m0[0m[32m items[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_newly_created_order_shall_have_items(java.lang.Integer)[0m
      [32mAnd [0m[32mthe newly-created order shall not have been placed[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_newly_created_order_shall_not_have_been_placed()[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m5[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Successfully create an order > Create and delete orders - Successfully create an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Successfully create an order - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Successfully create an order > Create and delete orders - Successfully create an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Successfully create an order - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully create an order                           [90m# CreateDeleteOrder.feature:49[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | pending            |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
    items being added to order set to pending
    [11] Starting cost calculation...
    [11] Same-day delivery selected. Adding fee of 500 cents.
    [11] Processing item: Eggs
    [11]   Unit price (cents): 549
    [11]   Quantity: 2
    [11]   Discount multiplier: 950
    [11]   Discounted item cost (cents): 1043
    [11]   Running total cost (cents): 1543
    [11] Total cost set to: 1543 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
    Order #15 created successfully.
      [32mWhen [0m[32m[0m[32m[1m"anakin501"[0m[32m attempts to create an order with deadline [0m[32m[1m"InTwoDays"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.attempts_to_create_an_order_with_deadline(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have a new order[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.shall_have_a_new_order(java.lang.String)[0m
    Expected deadline: InTwoDays
    Actual deadline: InTwoDays
    Order details: ca.mcgill.ecse.grocerymanagementsystem.model.Order@63cd604c[orderNumber:15,errorMsg:null,hasErrorMsg:false,pointsUsed:0,totalCost:0,pricePaid:0]
      datePlaced=null
      deadline=InTwoDays
      groceryManagementSystem = 40dd3977
      orderPlacer = 3a4e343
      orderAssignee = null
      [32mAnd [0m[32mthe newly-created order shall have deadline [0m[32m[1m"InTwoDays"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_newly_created_order_shall_have_deadline(java.lang.String)[0m
      [32mAnd [0m[32mthe newly-created order shall have [0m[32m[1m0[0m[32m items[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_newly_created_order_shall_have_items(java.lang.Integer)[0m
      [32mAnd [0m[32mthe newly-created order shall not have been placed[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_newly_created_order_shall_not_have_been_placed()[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m5[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Successfully create an order > Create and delete orders - Successfully create an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Successfully create an order - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Successfully create an order > Create and delete orders - Successfully create an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Successfully create an order - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Successfully create an order                         [90m# CreateDeleteOrder.feature:50[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | pending            |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
    items being added to order set to pending
    [16] Starting cost calculation...
    [16] Same-day delivery selected. Adding fee of 500 cents.
    [16] Processing item: Eggs
    [16]   Unit price (cents): 549
    [16]   Quantity: 2
    [16]   Discount multiplier: 950
    [16]   Discounted item cost (cents): 1043
    [16]   Running total cost (cents): 1543
    [16] Total cost set to: 1543 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
    Order #20 created successfully.
      [32mWhen [0m[32m[0m[32m[1m"alice"[0m[32m attempts to create an order with deadline [0m[32m[1m"InThreeDays"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.attempts_to_create_an_order_with_deadline(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have a new order[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.shall_have_a_new_order(java.lang.String)[0m
    Expected deadline: InThreeDays
    Actual deadline: InThreeDays
    Order details: ca.mcgill.ecse.grocerymanagementsystem.model.Order@6a1d204a[orderNumber:20,errorMsg:null,hasErrorMsg:false,pointsUsed:0,totalCost:0,pricePaid:0]
      datePlaced=null
      deadline=InThreeDays
      groceryManagementSystem = 62dae245
      orderPlacer = 4b6579e8
      orderAssignee = null
      [32mAnd [0m[32mthe newly-created order shall have deadline [0m[32m[1m"InThreeDays"[0m        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_newly_created_order_shall_have_deadline(java.lang.String)[0m
      [32mAnd [0m[32mthe newly-created order shall have [0m[32m[1m0[0m[32m items[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_newly_created_order_shall_have_items(java.lang.Integer)[0m
      [32mAnd [0m[32mthe newly-created order shall not have been placed[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_newly_created_order_shall_not_have_been_placed()[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m5[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Successfully create an order > Create and delete orders - Successfully create an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Successfully create an order - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to create an invalid order > Create and delete orders - Try to create an invalid order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to create an invalid order - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to create an invalid order                  [90m# CreateDeleteOrder.feature:59[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | pending            |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
    items being added to order set to pending
    [21] Starting cost calculation...
    [21] Same-day delivery selected. Adding fee of 500 cents.
    [21] Processing item: Eggs
    [21]   Unit price (cents): 549
    [21]   Quantity: 2
    [21]   Discount multiplier: 950
    [21]   Discounted item cost (cents): 1043
    [21]   Running total cost (cents): 1543
    [21] Total cost set to: 1543 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
      [32mWhen [0m[32m[0m[32m[1m"NULL"[0m[32m attempts to create an order with deadline [0m[32m[1m"SameDay"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.attempts_to_create_an_order_with_deadline(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"customer is required"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m4[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to create an invalid order > Create and delete orders - Try to create an invalid order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to create an invalid order - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to create an invalid order > Create and delete orders - Try to create an invalid order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to create an invalid order - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to create an invalid order                                         [90m# CreateDeleteOrder.feature:60[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | pending            |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
    items being added to order set to pending
    [25] Starting cost calculation...
    [25] Same-day delivery selected. Adding fee of 500 cents.
    [25] Processing item: Eggs
    [25]   Unit price (cents): 549
    [25]   Quantity: 2
    [25]   Discount multiplier: 950
    [25]   Discounted item cost (cents): 1043
    [25]   Running total cost (cents): 1543
    [25] Total cost set to: 1543 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
      [32mWhen [0m[32m[0m[32m[1m"nonexistent"[0m[32m attempts to create an order with deadline [0m[32m[1m"SameDay"[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.attempts_to_create_an_order_with_deadline(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no user with username \"nonexistent\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m4[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to create an invalid order > Create and delete orders - Try to create an invalid order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to create an invalid order - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to create an invalid order > Create and delete orders - Try to create an invalid order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to create an invalid order - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Try to create an invalid order                                   [90m# CreateDeleteOrder.feature:61[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | pending            |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
    items being added to order set to pending
    [29] Starting cost calculation...
    [29] Same-day delivery selected. Adding fee of 500 cents.
    [29] Processing item: Eggs
    [29]   Unit price (cents): 549
    [29]   Quantity: 2
    [29]   Discount multiplier: 950
    [29]   Discounted item cost (cents): 1043
    [29]   Running total cost (cents): 1543
    [29] Total cost set to: 1543 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
      [32mWhen [0m[32m[0m[32m[1m"ghost"[0m[32m attempts to create an order with deadline [0m[32m[1m"SameDay"[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.attempts_to_create_an_order_with_deadline(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no user with username \"ghost\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m4[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to create an invalid order > Create and delete orders - Try to create an invalid order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to create an invalid order - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to create an invalid order > Create and delete orders - Try to create an invalid order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to create an invalid order - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Try to create an invalid order                    [90m# CreateDeleteOrder.feature:62[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | pending            |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
    items being added to order set to pending
    [33] Starting cost calculation...
    [33] Same-day delivery selected. Adding fee of 500 cents.
    [33] Processing item: Eggs
    [33]   Unit price (cents): 549
    [33]   Quantity: 2
    [33]   Discount multiplier: 950
    [33]   Discounted item cost (cents): 1043
    [33]   Running total cost (cents): 1543
    [33] Total cost set to: 1543 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
      [32mWhen [0m[32m[0m[32m[1m"bob"[0m[32m attempts to create an order with deadline [0m[32m[1m"SameDay"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.attempts_to_create_an_order_with_deadline(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"\"bob\" is not a customer"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m4[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to create an invalid order > Create and delete orders - Try to create an invalid order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to create an invalid order - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to create an invalid order > Create and delete orders - Try to create an invalid order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to create an invalid order - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Try to create an invalid order                        [90m# CreateDeleteOrder.feature:63[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | pending            |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
    items being added to order set to pending
    [37] Starting cost calculation...
    [37] Same-day delivery selected. Adding fee of 500 cents.
    [37] Processing item: Eggs
    [37]   Unit price (cents): 549
    [37]   Quantity: 2
    [37]   Discount multiplier: 950
    [37]   Discounted item cost (cents): 1043
    [37]   Running total cost (cents): 1543
    [37] Total cost set to: 1543 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
      [32mWhen [0m[32m[0m[32m[1m"alice"[0m[32m attempts to create an order with deadline [0m[32m[1m"NULL"[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.attempts_to_create_an_order_with_deadline(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"delivery deadline is required"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m4[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to create an invalid order > Create and delete orders - Try to create an invalid order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to create an invalid order - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Successfully delete an order > Create and delete orders - Successfully delete an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Successfully delete an order - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully delete an order           [90m# CreateDeleteOrder.feature:73[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
      [32mAnd [0m[32mthe following customers exist in the system[0m        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | pending            |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
    items being added to order set to pending
    [41] Starting cost calculation...
    [41] Same-day delivery selected. Adding fee of 500 cents.
    [41] Processing item: Eggs
    [41]   Unit price (cents): 549
    [41]   Quantity: 2
    [41]   Discount multiplier: 950
    [41]   Discounted item cost (cents): 1043
    [41]   Running total cost (cents): 1543
    [41] Total cost set to: 1543 cents
      [32mAnd [0m[32mthe following items are part of orders[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
    Order #41 deleted successfully.
      [32mWhen [0m[32mthe user attempts to delete the order with ID [0m[32m[1m"a"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_delete_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mno order shall exist with ID [0m[32m[1m"a"[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.no_order_shall_exist_with_id(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m3[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Successfully delete an order > Create and delete orders - Successfully delete an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Successfully delete an order - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Successfully delete an order > Create and delete orders - Successfully delete an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Successfully delete an order - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully delete an order           [90m# CreateDeleteOrder.feature:74[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
      [32mAnd [0m[32mthe following customers exist in the system[0m        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | pending            |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
    items being added to order set to pending
    [45] Starting cost calculation...
    [45] Same-day delivery selected. Adding fee of 500 cents.
    [45] Processing item: Eggs
    [45]   Unit price (cents): 549
    [45]   Quantity: 2
    [45]   Discount multiplier: 950
    [45]   Discounted item cost (cents): 1043
    [45]   Running total cost (cents): 1543
    [45] Total cost set to: 1543 cents
      [32mAnd [0m[32mthe following items are part of orders[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
    Order #47 deleted successfully.
      [32mWhen [0m[32mthe user attempts to delete the order with ID [0m[32m[1m"c"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_delete_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mno order shall exist with ID [0m[32m[1m"c"[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.no_order_shall_exist_with_id(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m3[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Successfully delete an order > Create and delete orders - Successfully delete an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Successfully delete an order - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to delete an order that doesn't exist > Create and delete orders - Try to delete an order that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to delete an order that doesn't exist - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to delete an order that doesn't exist                         [90m# CreateDeleteOrder.feature:84[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | pending            |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
    items being added to order set to pending
    [49] Starting cost calculation...
    [49] Same-day delivery selected. Adding fee of 500 cents.
    [49] Processing item: Eggs
    [49]   Unit price (cents): 549
    [49]   Quantity: 2
    [49]   Discount multiplier: 950
    [49]   Discounted item cost (cents): 1043
    [49]   Running total cost (cents): 1543
    [49] Total cost set to: 1543 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
      [32mWhen [0m[32mthe user attempts to delete the non-existent order with order number [0m[32m[1m9999999[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_delete_the_non_existent_order_with_order_number(java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no order with number \"9999999\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno order shall exist with order number [0m[32m[1m9999999[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.no_order_shall_exist_with_order_number(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m4[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to delete an order that doesn't exist > Create and delete orders - Try to delete an order that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to delete an order that doesn't exist - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to delete an order that doesn't exist > Create and delete orders - Try to delete an order that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to delete an order that doesn't exist - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to delete an order that doesn't exist                           [90m# CreateDeleteOrder.feature:85[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | pending            |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
    items being added to order set to pending
    [53] Starting cost calculation...
    [53] Same-day delivery selected. Adding fee of 500 cents.
    [53] Processing item: Eggs
    [53]   Unit price (cents): 549
    [53]   Quantity: 2
    [53]   Discount multiplier: 950
    [53]   Discounted item cost (cents): 1043
    [53]   Running total cost (cents): 1543
    [53] Total cost set to: 1543 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
      [32mWhen [0m[32mthe user attempts to delete the non-existent order with order number [0m[32m[1m123456789[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_delete_the_non_existent_order_with_order_number(java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no order with number \"123456789\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno order shall exist with order number [0m[32m[1m123456789[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.no_order_shall_exist_with_order_number(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m4[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to delete an order that doesn't exist > Create and delete orders - Try to delete an order that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to delete an order that doesn't exist - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to delete an order that's already been placed > Create and delete orders - Try to delete an order that's already been placed - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to delete an order that's already been placed - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to delete an order that's already been placed                            [90m# CreateDeleteOrder.feature:95[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | pending            |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
    items being added to order set to pending
    [57] Starting cost calculation...
    [57] Same-day delivery selected. Adding fee of 500 cents.
    [57] Processing item: Eggs
    [57]   Unit price (cents): 549
    [57]   Quantity: 2
    [57]   Discount multiplier: 950
    [57]   Discounted item cost (cents): 1043
    [57]   Running total cost (cents): 1543
    [57] Total cost set to: 1543 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
      [32mWhen [0m[32mthe user attempts to delete the order with ID [0m[32m[1m"b"[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_delete_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot delete an order which has already been placed"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32man order shall exist with ID [0m[32m[1m"b"[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.an_order_shall_exist_with_id(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m4[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to delete an order that's already been placed > Create and delete orders - Try to delete an order that's already been placed - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to delete an order that's already been placed - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to delete an order that's already been placed > Create and delete orders - Try to delete an order that's already been placed - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to delete an order that's already been placed - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to delete an order that's already been placed                            [90m# CreateDeleteOrder.feature:96[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | pending            |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
    items being added to order set to pending
    [61] Starting cost calculation...
    [61] Same-day delivery selected. Adding fee of 500 cents.
    [61] Processing item: Eggs
    [61]   Unit price (cents): 549
    [61]   Quantity: 2
    [61]   Discount multiplier: 950
    [61]   Discounted item cost (cents): 1043
    [61]   Running total cost (cents): 1543
    [61] Total cost set to: 1543 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
      [32mWhen [0m[32mthe user attempts to delete the order with ID [0m[32m[1m"d"[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_delete_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot delete an order which has already been placed"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32man order shall exist with ID [0m[32m[1m"d"[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.an_order_shall_exist_with_id(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m4[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete orders > Create and delete orders - Try to delete an order that's already been placed > Create and delete orders - Try to delete an order that's already been placed - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete orders - Try to delete an order that's already been placed - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Create and delete shipments > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete shipments - Successfully create a new shipment STANDARD_OUT

    Scenario: Successfully create a new shipment                     [90m# CreateDeleteShipment.feature:17[0m
    Created shipment: ID=a, Number=1, Date=null
    Created shipment: ID=b, Number=2, Date=null
    Created shipment: ID=c, Number=3, Date=2025-02-24
    Created shipment: ID=d, Number=4, Date=2025-01-01
      [32mGiven [0m[32mthe following shipments exist[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | dateOrdered |
        | a  | NULL        |
        | b  | NULL        |
        | c  | 2025-02-24  |
        | d  | 2025-01-01  |
      [32mWhen [0m[32mthe manager attempts to create a new shipment[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_create_a_new_shipment()[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32ma new shipment shall exist[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.a_new_shipment_shall_exist()[0m
      [32mAnd [0m[32mthe newly-created shipment shall have [0m[32m[1m0[0m[32m items[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_newly_created_shipment_shall_have_items(java.lang.Integer)[0m
      [32mAnd [0m[32mthe newly-created shipment shall not have been ordered yet[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_newly_created_shipment_shall_not_have_been_ordered_yet()[0m
      [32mAnd [0m[32mthe total number of shipments shall be [0m[32m[1m5[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_total_number_of_shipments_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete shipments > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete shipments - Successfully create a new shipment PASSED

CucumberTestRunner > Cucumber > Create and delete shipments > Create and delete shipments - Successfully delete a shipment > Create and delete shipments - Successfully delete a shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete shipments - Successfully delete a shipment - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully delete a shipment               [90m# CreateDeleteShipment.feature:33[0m
    Created shipment: ID=a, Number=6, Date=null
    Created shipment: ID=b, Number=7, Date=null
    Created shipment: ID=c, Number=8, Date=2025-02-24
    Created shipment: ID=d, Number=9, Date=2025-01-01
      [32mGiven [0m[32mthe following shipments exist[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | dateOrdered |
        | a  | NULL        |
        | b  | NULL        |
        | c  | 2025-02-24  |
        | d  | 2025-01-01  |
      [32mWhen [0m[32mthe manager attempts to delete the shipment with ID [0m[32m[1m"a"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_delete_the_shipment_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mno shipment shall exist with ID [0m[32m[1m"a"[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.no_shipment_shall_exist_with_id(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of shipments shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_total_number_of_shipments_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete shipments > Create and delete shipments - Successfully delete a shipment > Create and delete shipments - Successfully delete a shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete shipments - Successfully delete a shipment - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create and delete shipments > Create and delete shipments - Successfully delete a shipment > Create and delete shipments - Successfully delete a shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete shipments - Successfully delete a shipment - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully delete a shipment               [90m# CreateDeleteShipment.feature:34[0m
    Created shipment: ID=a, Number=10, Date=null
    Created shipment: ID=b, Number=11, Date=null
    Created shipment: ID=c, Number=12, Date=2025-02-24
    Created shipment: ID=d, Number=13, Date=2025-01-01
      [32mGiven [0m[32mthe following shipments exist[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | dateOrdered |
        | a  | NULL        |
        | b  | NULL        |
        | c  | 2025-02-24  |
        | d  | 2025-01-01  |
      [32mWhen [0m[32mthe manager attempts to delete the shipment with ID [0m[32m[1m"b"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_delete_the_shipment_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mno shipment shall exist with ID [0m[32m[1m"b"[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.no_shipment_shall_exist_with_id(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of shipments shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_total_number_of_shipments_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete shipments > Create and delete shipments - Successfully delete a shipment > Create and delete shipments - Successfully delete a shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete shipments - Successfully delete a shipment - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Create and delete shipments > Create and delete shipments - Try to delete a shipment that doesn't exist > Create and delete shipments - Try to delete a shipment that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete shipments - Try to delete a shipment that doesn't exist - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to delete a shipment that doesn't exist                                [90m# CreateDeleteShipment.feature:44[0m
    Created shipment: ID=a, Number=14, Date=null
    Created shipment: ID=b, Number=15, Date=null
    Created shipment: ID=c, Number=16, Date=2025-02-24
    Created shipment: ID=d, Number=17, Date=2025-01-01
      [32mGiven [0m[32mthe following shipments exist[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | dateOrdered |
        | a  | NULL        |
        | b  | NULL        |
        | c  | 2025-02-24  |
        | d  | 2025-01-01  |
      [32mWhen [0m[32mthe manager attempts to delete the non-existent shipment with shipment number [0m[32m[1m9999999[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_delete_the_non_existent_shipment_with_shipment_number(java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no shipment with number \"9999999\""[0m       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno shipment shall exist with shipment number [0m[32m[1m9999999[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.no_shipment_shall_exist_with_shipment_number(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of shipments shall be [0m[32m[1m4[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_total_number_of_shipments_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete shipments > Create and delete shipments - Try to delete a shipment that doesn't exist > Create and delete shipments - Try to delete a shipment that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete shipments - Try to delete a shipment that doesn't exist - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create and delete shipments > Create and delete shipments - Try to delete a shipment that doesn't exist > Create and delete shipments - Try to delete a shipment that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete shipments - Try to delete a shipment that doesn't exist - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to delete a shipment that doesn't exist                                  [90m# CreateDeleteShipment.feature:45[0m
    Created shipment: ID=a, Number=18, Date=null
    Created shipment: ID=b, Number=19, Date=null
    Created shipment: ID=c, Number=20, Date=2025-02-24
    Created shipment: ID=d, Number=21, Date=2025-01-01
      [32mGiven [0m[32mthe following shipments exist[0m                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | dateOrdered |
        | a  | NULL        |
        | b  | NULL        |
        | c  | 2025-02-24  |
        | d  | 2025-01-01  |
      [32mWhen [0m[32mthe manager attempts to delete the non-existent shipment with shipment number [0m[32m[1m123456789[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_delete_the_non_existent_shipment_with_shipment_number(java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no shipment with number \"123456789\""[0m       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno shipment shall exist with shipment number [0m[32m[1m123456789[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.no_shipment_shall_exist_with_shipment_number(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of shipments shall be [0m[32m[1m4[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_total_number_of_shipments_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete shipments > Create and delete shipments - Try to delete a shipment that doesn't exist > Create and delete shipments - Try to delete a shipment that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete shipments - Try to delete a shipment that doesn't exist - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Create and delete shipments > Create and delete shipments - Try to delete a shipment that's already been ordered > Create and delete shipments - Try to delete a shipment that's already been ordered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete shipments - Try to delete a shipment that's already been ordered - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to delete a shipment that's already been ordered                            [90m# CreateDeleteShipment.feature:55[0m
    Created shipment: ID=a, Number=22, Date=null
    Created shipment: ID=b, Number=23, Date=null
    Created shipment: ID=c, Number=24, Date=2025-02-24
    Created shipment: ID=d, Number=25, Date=2025-01-01
      [32mGiven [0m[32mthe following shipments exist[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | dateOrdered |
        | a  | NULL        |
        | b  | NULL        |
        | c  | 2025-02-24  |
        | d  | 2025-01-01  |
      [32mWhen [0m[32mthe manager attempts to delete the shipment with ID [0m[32m[1m"c"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_delete_the_shipment_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot delete a shipment which has already been ordered"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32ma shipment shall exist with ID [0m[32m[1m"c"[0m                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.a_shipment_shall_exist_with_id(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of shipments shall be [0m[32m[1m4[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_total_number_of_shipments_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete shipments > Create and delete shipments - Try to delete a shipment that's already been ordered > Create and delete shipments - Try to delete a shipment that's already been ordered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete shipments - Try to delete a shipment that's already been ordered - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create and delete shipments > Create and delete shipments - Try to delete a shipment that's already been ordered > Create and delete shipments - Try to delete a shipment that's already been ordered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete shipments - Try to delete a shipment that's already been ordered - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to delete a shipment that's already been ordered                            [90m# CreateDeleteShipment.feature:56[0m
    Created shipment: ID=a, Number=26, Date=null
    Created shipment: ID=b, Number=27, Date=null
    Created shipment: ID=c, Number=28, Date=2025-02-24
    Created shipment: ID=d, Number=29, Date=2025-01-01
      [32mGiven [0m[32mthe following shipments exist[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | dateOrdered |
        | a  | NULL        |
        | b  | NULL        |
        | c  | 2025-02-24  |
        | d  | 2025-01-01  |
      [32mWhen [0m[32mthe manager attempts to delete the shipment with ID [0m[32m[1m"d"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_delete_the_shipment_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot delete a shipment which has already been ordered"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32ma shipment shall exist with ID [0m[32m[1m"d"[0m                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.a_shipment_shall_exist_with_id(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of shipments shall be [0m[32m[1m4[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_total_number_of_shipments_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create and delete shipments > Create and delete shipments - Try to delete a shipment that's already been ordered > Create and delete shipments - Try to delete a shipment that's already been ordered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create and delete shipments - Try to delete a shipment that's already been ordered - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully add a new item > Create, update, and delete items - Successfully add a new item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully add a new item - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully add a new item                                                                                [90m# CreateUpdateDeleteItem.feature:24[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new [0m[32m[1m"perishable"[0m[32m item with name [0m[32m[1m"Maple syrup"[0m[32m that's worth [0m[32m[1m5[0m[32m points and costs [0m[32m[1m577[0m[32m cents[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_add_a_new_item_with_name_that_s_worth_points_and_costs_cents(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Maple syrup"[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m577[0m[32m cents[0m                                                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"perishable"[0m                                                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m5[0m[32m points[0m                                                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m0[0m                                                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m3[0m                                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully add a new item > Create, update, and delete items - Successfully add a new item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully add a new item - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully add a new item > Create, update, and delete items - Successfully add a new item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully add a new item - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully add a new item                                                                                 [90m# CreateUpdateDeleteItem.feature:25[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new [0m[32m[1m"perishable"[0m[32m item with name [0m[32m[1m"1% milk (1L)"[0m[32m that's worth [0m[32m[1m4[0m[32m points and costs [0m[32m[1m389[0m[32m cents[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_add_a_new_item_with_name_that_s_worth_points_and_costs_cents(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"1% milk (1L)"[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m389[0m[32m cents[0m                                                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"perishable"[0m                                                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m4[0m[32m points[0m                                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m0[0m                                                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m3[0m                                                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully add a new item > Create, update, and delete items - Successfully add a new item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully add a new item - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully add a new item > Create, update, and delete items - Successfully add a new item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully add a new item - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully add a new item                                                                                 [90m# CreateUpdateDeleteItem.feature:26[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new [0m[32m[1m"perishable"[0m[32m item with name [0m[32m[1m"2% milk (2L)"[0m[32m that's worth [0m[32m[1m5[0m[32m points and costs [0m[32m[1m529[0m[32m cents[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_add_a_new_item_with_name_that_s_worth_points_and_costs_cents(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"2% milk (2L)"[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m529[0m[32m cents[0m                                                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"perishable"[0m                                                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m5[0m[32m points[0m                                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m0[0m                                                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m3[0m                                                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully add a new item > Create, update, and delete items - Successfully add a new item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully add a new item - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully add a new item > Create, update, and delete items - Successfully add a new item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully add a new item - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Successfully add a new item                                                                              [90m# CreateUpdateDeleteItem.feature:27[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new [0m[32m[1m"non-perishable"[0m[32m item with name [0m[32m[1m"Beans"[0m[32m that's worth [0m[32m[1m1[0m[32m points and costs [0m[32m[1m179[0m[32m cents[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_add_a_new_item_with_name_that_s_worth_points_and_costs_cents(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Beans"[0m                                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m179[0m[32m cents[0m                                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"non-perishable"[0m                                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m1[0m[32m points[0m                                                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m0[0m                                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m3[0m                                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully add a new item > Create, update, and delete items - Successfully add a new item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully add a new item - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an item with a duplicate name > Create, update, and delete items - Try to add an item with a duplicate name - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an item with a duplicate name - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to add an item with a duplicate name                                                            [90m# CreateUpdateDeleteItem.feature:41[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new [0m[32m[1m"perishable"[0m[32m item with name [0m[32m[1m"Eggs"[0m[32m that's worth [0m[32m[1m5[0m[32m points and costs [0m[32m[1m549[0m[32m cents[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_add_a_new_item_with_name_that_s_worth_points_and_costs_cents(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"an item called \"Eggs\" already exists"[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Eggs"[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m549[0m[32m cents[0m                                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"perishable"[0m                                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m5[0m[32m points[0m                                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m20[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an item with a duplicate name > Create, update, and delete items - Try to add an item with a duplicate name - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an item with a duplicate name - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an item with a duplicate name > Create, update, and delete items - Try to add an item with a duplicate name - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an item with a duplicate name - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to add an item with a duplicate name                                                                           [90m# CreateUpdateDeleteItem.feature:42[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new [0m[32m[1m"perishable"[0m[32m item with name [0m[32m[1m"Chicken noodle soup"[0m[32m that's worth [0m[32m[1m3[0m[32m points and costs [0m[32m[1m199[0m[32m cents[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_add_a_new_item_with_name_that_s_worth_points_and_costs_cents(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"an item called \"Chicken noodle soup\" already exists"[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Chicken noodle soup"[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m179[0m[32m cents[0m                                                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"non-perishable"[0m                                                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m2[0m[32m points[0m                                                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m0[0m                                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an item with a duplicate name > Create, update, and delete items - Try to add an item with a duplicate name - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an item with a duplicate name - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an invalid item > Create, update, and delete items - Try to add an invalid item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an invalid item - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to add an invalid item                                                                      [90m# CreateUpdateDeleteItem.feature:52[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new [0m[32m[1m"perishable"[0m[32m item with name [0m[32m[1m""[0m[32m that's worth [0m[32m[1m1[0m[32m points and costs [0m[32m[1m499[0m[32m cents[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_add_a_new_item_with_name_that_s_worth_points_and_costs_cents(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"name is required"[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m""[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an invalid item > Create, update, and delete items - Try to add an invalid item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an invalid item - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an invalid item > Create, update, and delete items - Try to add an invalid item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an invalid item - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to add an invalid item                                                                             [90m# CreateUpdateDeleteItem.feature:53[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new [0m[32m[1m"perishable"[0m[32m item with name [0m[32m[1m"Chicken"[0m[32m that's worth [0m[32m[1m0[0m[32m points and costs [0m[32m[1m499[0m[32m cents[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_add_a_new_item_with_name_that_s_worth_points_and_costs_cents(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"points must be between one and five"[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"Chicken"[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an invalid item > Create, update, and delete items - Try to add an invalid item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an invalid item - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an invalid item > Create, update, and delete items - Try to add an invalid item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an invalid item - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Try to add an invalid item                                                                              [90m# CreateUpdateDeleteItem.feature:54[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new [0m[32m[1m"perishable"[0m[32m item with name [0m[32m[1m"Chicken"[0m[32m that's worth [0m[32m[1m-1[0m[32m points and costs [0m[32m[1m499[0m[32m cents[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_add_a_new_item_with_name_that_s_worth_points_and_costs_cents(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"points must be between one and five"[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"Chicken"[0m                                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an invalid item > Create, update, and delete items - Try to add an invalid item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an invalid item - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an invalid item > Create, update, and delete items - Try to add an invalid item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an invalid item - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Try to add an invalid item                                                                             [90m# CreateUpdateDeleteItem.feature:55[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new [0m[32m[1m"perishable"[0m[32m item with name [0m[32m[1m"Chicken"[0m[32m that's worth [0m[32m[1m6[0m[32m points and costs [0m[32m[1m499[0m[32m cents[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_add_a_new_item_with_name_that_s_worth_points_and_costs_cents(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"points must be between one and five"[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"Chicken"[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an invalid item > Create, update, and delete items - Try to add an invalid item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an invalid item - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an invalid item > Create, update, and delete items - Try to add an invalid item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an invalid item - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Try to add an invalid item                                                                             [90m# CreateUpdateDeleteItem.feature:56[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new [0m[32m[1m"perishable"[0m[32m item with name [0m[32m[1m"Chicken"[0m[32m that's worth [0m[32m[1m7[0m[32m points and costs [0m[32m[1m499[0m[32m cents[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_add_a_new_item_with_name_that_s_worth_points_and_costs_cents(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"points must be between one and five"[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"Chicken"[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an invalid item > Create, update, and delete items - Try to add an invalid item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an invalid item - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an invalid item > Create, update, and delete items - Try to add an invalid item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an invalid item - Examples - Example #1.6 STANDARD_OUT

    Scenario Outline: Try to add an invalid item                                                                             [90m# CreateUpdateDeleteItem.feature:57[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new [0m[32m[1m"non-perishable"[0m[32m item with name [0m[32m[1m"Beans"[0m[32m that's worth [0m[32m[1m1[0m[32m points and costs [0m[32m[1m0[0m[32m cents[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_add_a_new_item_with_name_that_s_worth_points_and_costs_cents(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"price must be positive"[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"Beans"[0m                                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an invalid item > Create, update, and delete items - Try to add an invalid item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an invalid item - Examples - Example #1.6 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an invalid item > Create, update, and delete items - Try to add an invalid item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an invalid item - Examples - Example #1.7 STANDARD_OUT

    Scenario Outline: Try to add an invalid item                                                                              [90m# CreateUpdateDeleteItem.feature:58[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new [0m[32m[1m"non-perishable"[0m[32m item with name [0m[32m[1m"Beans"[0m[32m that's worth [0m[32m[1m1[0m[32m points and costs [0m[32m[1m-1[0m[32m cents[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_add_a_new_item_with_name_that_s_worth_points_and_costs_cents(java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"price must be positive"[0m                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"Beans"[0m                                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to add an invalid item > Create, update, and delete items - Try to add an invalid item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to add an invalid item - Examples - Example #1.7 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully update item price > Create, update, and delete items - Successfully update item price - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully update item price - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully update item price                      [90m# CreateUpdateDeleteItem.feature:72[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the price of item [0m[32m[1m"Eggs"[0m[32m to [0m[32m[1m599[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_price_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Eggs"[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m599[0m[32m cents[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"perishable"[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m5[0m[32m points[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m20[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully update item price > Create, update, and delete items - Successfully update item price - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully update item price - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully update item price > Create, update, and delete items - Successfully update item price - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully update item price - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully update item price                      [90m# CreateUpdateDeleteItem.feature:73[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the price of item [0m[32m[1m"Eggs"[0m[32m to [0m[32m[1m500[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_price_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Eggs"[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m500[0m[32m cents[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"perishable"[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m5[0m[32m points[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m20[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully update item price > Create, update, and delete items - Successfully update item price - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully update item price - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully update item price > Create, update, and delete items - Successfully update item price - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully update item price - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully update item price                                     [90m# CreateUpdateDeleteItem.feature:74[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the price of item [0m[32m[1m"Chicken noodle soup"[0m[32m to [0m[32m[1m199[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_price_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Chicken noodle soup"[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m199[0m[32m cents[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"non-perishable"[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m2[0m[32m points[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m0[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully update item price > Create, update, and delete items - Successfully update item price - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully update item price - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully update item price > Create, update, and delete items - Successfully update item price - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully update item price - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Successfully update item price                                     [90m# CreateUpdateDeleteItem.feature:75[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the price of item [0m[32m[1m"Chicken noodle soup"[0m[32m to [0m[32m[1m135[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_price_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Chicken noodle soup"[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m135[0m[32m cents[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"non-perishable"[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m2[0m[32m points[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m0[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully update item price > Create, update, and delete items - Successfully update item price - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully update item price - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully update item point value > Create, update, and delete items - Successfully update item point value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully update item point value - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully update item point value                    [90m# CreateUpdateDeleteItem.feature:89[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the point value of item [0m[32m[1m"Eggs"[0m[32m to [0m[32m[1m4[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_point_value_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Eggs"[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m549[0m[32m cents[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"perishable"[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m4[0m[32m points[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m20[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully update item point value > Create, update, and delete items - Successfully update item point value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully update item point value - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully update item point value > Create, update, and delete items - Successfully update item point value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully update item point value - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully update item point value                    [90m# CreateUpdateDeleteItem.feature:90[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the point value of item [0m[32m[1m"Eggs"[0m[32m to [0m[32m[1m3[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_point_value_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Eggs"[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m549[0m[32m cents[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"perishable"[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m3[0m[32m points[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m20[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully update item point value > Create, update, and delete items - Successfully update item point value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully update item point value - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully update item point value > Create, update, and delete items - Successfully update item point value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully update item point value - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully update item point value                                   [90m# CreateUpdateDeleteItem.feature:91[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the point value of item [0m[32m[1m"Chicken noodle soup"[0m[32m to [0m[32m[1m1[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_point_value_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Chicken noodle soup"[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m179[0m[32m cents[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"non-perishable"[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m1[0m[32m points[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m0[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully update item point value > Create, update, and delete items - Successfully update item point value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully update item point value - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully update item point value > Create, update, and delete items - Successfully update item point value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully update item point value - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Successfully update item point value                                   [90m# CreateUpdateDeleteItem.feature:92[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the point value of item [0m[32m[1m"Chicken noodle soup"[0m[32m to [0m[32m[1m3[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_point_value_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Chicken noodle soup"[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m179[0m[32m cents[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"non-perishable"[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m3[0m[32m points[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m0[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully update item point value > Create, update, and delete items - Successfully update item point value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully update item point value - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item that doesn't exist > Create, update, and delete items - Try to update item that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item that doesn't exist - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to update item that doesn't exist                           [90m# CreateUpdateDeleteItem.feature:102[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the price of item [0m[32m[1m"nonexistent"[0m[32m to [0m[32m[1m200[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_price_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no item called \"nonexistent\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"nonexistent"[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item that doesn't exist > Create, update, and delete items - Try to update item that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item that doesn't exist - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item that doesn't exist > Create, update, and delete items - Try to update item that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item that doesn't exist - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to update item that doesn't exist                        [90m# CreateUpdateDeleteItem.feature:103[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the price of item [0m[32m[1m"not real"[0m[32m to [0m[32m[1m200[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_price_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no item called \"not real\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"not real"[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item that doesn't exist > Create, update, and delete items - Try to update item that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item that doesn't exist - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item that doesn't exist > Create, update, and delete items - Try to update item that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item that doesn't exist - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Try to update item that doesn't exist                            [90m# CreateUpdateDeleteItem.feature:104[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the point value of item [0m[32m[1m"nonexistent"[0m[32m to [0m[32m[1m200[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_point_value_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no item called \"nonexistent\""[0m  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"nonexistent"[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item that doesn't exist > Create, update, and delete items - Try to update item that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item that doesn't exist - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item that doesn't exist > Create, update, and delete items - Try to update item that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item that doesn't exist - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Try to update item that doesn't exist                         [90m# CreateUpdateDeleteItem.feature:105[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the point value of item [0m[32m[1m"not real"[0m[32m to [0m[32m[1m200[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_point_value_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no item called \"not real\""[0m  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"not real"[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item that doesn't exist > Create, update, and delete items - Try to update item that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item that doesn't exist - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item with invalid values > Create, update, and delete items - Try to update item with invalid values - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item with invalid values - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to update item with invalid values            [90m# CreateUpdateDeleteItem.feature:119[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the price of item [0m[32m[1m"Eggs"[0m[32m to [0m[32m[1m0[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_price_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"price must be positive"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Eggs"[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m549[0m[32m cents[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"perishable"[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m5[0m[32m points[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m20[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item with invalid values > Create, update, and delete items - Try to update item with invalid values - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item with invalid values - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item with invalid values > Create, update, and delete items - Try to update item with invalid values - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item with invalid values - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to update item with invalid values                            [90m# CreateUpdateDeleteItem.feature:120[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the price of item [0m[32m[1m"Chicken noodle soup"[0m[32m to [0m[32m[1m-1[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_price_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"price must be positive"[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Chicken noodle soup"[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m179[0m[32m cents[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"non-perishable"[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m2[0m[32m points[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m0[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item with invalid values > Create, update, and delete items - Try to update item with invalid values - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item with invalid values - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item with invalid values > Create, update, and delete items - Try to update item with invalid values - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item with invalid values - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Try to update item with invalid values                      [90m# CreateUpdateDeleteItem.feature:121[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the point value of item [0m[32m[1m"Eggs"[0m[32m to [0m[32m[1m-1[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_point_value_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"points must be between one and five"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Eggs"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m549[0m[32m cents[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"perishable"[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m5[0m[32m points[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m20[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item with invalid values > Create, update, and delete items - Try to update item with invalid values - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item with invalid values - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item with invalid values > Create, update, and delete items - Try to update item with invalid values - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item with invalid values - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Try to update item with invalid values                                 [90m# CreateUpdateDeleteItem.feature:122[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the point value of item [0m[32m[1m"Chicken noodle soup"[0m[32m to [0m[32m[1m0[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_point_value_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"points must be between one and five"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Chicken noodle soup"[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m179[0m[32m cents[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"non-perishable"[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m2[0m[32m points[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m0[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item with invalid values > Create, update, and delete items - Try to update item with invalid values - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item with invalid values - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item with invalid values > Create, update, and delete items - Try to update item with invalid values - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item with invalid values - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Try to update item with invalid values                      [90m# CreateUpdateDeleteItem.feature:123[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the point value of item [0m[32m[1m"Eggs"[0m[32m to [0m[32m[1m6[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_point_value_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"points must be between one and five"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Eggs"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m549[0m[32m cents[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"perishable"[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m5[0m[32m points[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m20[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item with invalid values > Create, update, and delete items - Try to update item with invalid values - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item with invalid values - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item with invalid values > Create, update, and delete items - Try to update item with invalid values - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item with invalid values - Examples - Example #1.6 STANDARD_OUT

    Scenario Outline: Try to update item with invalid values                                 [90m# CreateUpdateDeleteItem.feature:124[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to update the point value of item [0m[32m[1m"Chicken noodle soup"[0m[32m to [0m[32m[1m7[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_update_the_point_value_of_item_to(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"points must be between one and five"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32man item shall exist with name [0m[32m[1m"Chicken noodle soup"[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.an_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall cost [0m[32m[1m179[0m[32m cents[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_cost_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe item shall be [0m[32m[1m"non-perishable"[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe item shall be worth [0m[32m[1m2[0m[32m points[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_item_shall_be_worth_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of the item shall be [0m[32m[1m0[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_the_item_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to update item with invalid values > Create, update, and delete items - Try to update item with invalid values - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to update item with invalid values - Examples - Example #1.6 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully delete an item > Create, update, and delete items - Successfully delete an item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully delete an item - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully delete an item         [90m# CreateUpdateDeleteItem.feature:134[0m
      [32mGiven [0m[32mthe following items exist in the system[0m       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to delete the item [0m[32m[1m"Eggs"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_delete_the_item(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"Eggs"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m1[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully delete an item > Create, update, and delete items - Successfully delete an item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully delete an item - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully delete an item > Create, update, and delete items - Successfully delete an item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully delete an item - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully delete an item                        [90m# CreateUpdateDeleteItem.feature:135[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to delete the item [0m[32m[1m"Chicken noodle soup"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_delete_the_item(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"Chicken noodle soup"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m1[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Successfully delete an item > Create, update, and delete items - Successfully delete an item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Successfully delete an item - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to delete an item that doesn't exist > Create, update, and delete items - Try to delete an item that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to delete an item that doesn't exist - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to delete an item that doesn't exist                 [90m# CreateUpdateDeleteItem.feature:145[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to delete the item [0m[32m[1m"Milk"[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_delete_the_item(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no item called \"Milk\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"Milk"[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to delete an item that doesn't exist > Create, update, and delete items - Try to delete an item that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to delete an item that doesn't exist - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to delete an item that doesn't exist > Create, update, and delete items - Try to delete an item that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to delete an item that doesn't exist - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to delete an item that doesn't exist                           [90m# CreateUpdateDeleteItem.feature:146[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
      [32mWhen [0m[32mthe manager attempts to delete the item [0m[32m[1m"Strawberry jam"[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_manager_attempts_to_delete_the_item(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no item called \"Strawberry jam\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"Strawberry jam"[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of items shall be [0m[32m[1m2[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_total_number_of_items_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Create, update, and delete items > Create, update, and delete items - Try to delete an item that doesn't exist > Create, update, and delete items - Try to delete an item that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Create, update, and delete items - Try to delete an item that doesn't exist - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out a bulk order of bananas > Process order - Successfully check out a bulk order of bananas - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out a bulk order of bananas - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully check out a bulk order of bananas [90m# ProcessGroceryOrder.feature:44[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline | customer | assignee | state              |
        | a  | NULL       | InOneDay | alice    | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item   | quantity |
        | a     | Banana | 1        |
    user is checking out!
    [65] Starting cost calculation...
    [65] Processing item: Banana
    [65]   Unit price (cents): 100
    [65]   Quantity: 1
    [65]   Discount multiplier: 1000
    [65]   Discounted item cost (cents): 100
    [65]   Running total cost (cents): 100
    [65] Total cost set to: 100 cents
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"a"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the total cost in the step def check is 100  [32mAnd [0m[32mthe total cost of the order shall be [0m[32m[1m100[0m[32m cents[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_total_cost_of_the_order_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's placer shall be [0m[32m[1m"alice"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_placer_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out a bulk order of bananas > Process order - Successfully check out a bulk order of bananas - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out a bulk order of bananas - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out a bulk order of bananas > Process order - Successfully check out a bulk order of bananas - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out a bulk order of bananas - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully check out a bulk order of bananas [90m# ProcessGroceryOrder.feature:46[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline | customer  | assignee | state              |
        | b  | NULL       | InOneDay | anakin501 | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item   | quantity |
        | b     | Banana | 2        |
    user is checking out!
    [66] Starting cost calculation...
    [66] Processing item: Banana
    [66]   Unit price (cents): 100
    [66]   Quantity: 2
    [66]   Discount multiplier: 950
    [66]   Discounted item cost (cents): 190
    [66]   Running total cost (cents): 190
    [66] Total cost set to: 190 cents
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"b"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the total cost in the step def check is 190  [32mAnd [0m[32mthe total cost of the order shall be [0m[32m[1m190[0m[32m cents[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_total_cost_of_the_order_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's placer shall be [0m[32m[1m"anakin501"[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_placer_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have [0m[32m[1m501[0m[32m points[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out a bulk order of bananas > Process order - Successfully check out a bulk order of bananas - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out a bulk order of bananas - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out a bulk order of bananas > Process order - Successfully check out a bulk order of bananas - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out a bulk order of bananas - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully check out a bulk order of bananas [90m# ProcessGroceryOrder.feature:48[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline  | customer  | assignee | state              |
        | c  | NULL       | InTwoDays | obiwan212 | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item   | quantity |
        | c     | Banana | 3        |
    user is checking out!
    [67] Starting cost calculation...
    [67] Processing item: Banana
    [67]   Unit price (cents): 100
    [67]   Quantity: 3
    [67]   Discount multiplier: 900
    [67]   Discounted item cost (cents): 270
    [67]   Running total cost (cents): 270
    [67] Total cost set to: 270 cents
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"c"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the total cost in the step def check is 270  [32mAnd [0m[32mthe total cost of the order shall be [0m[32m[1m270[0m[32m cents[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_total_cost_of_the_order_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's placer shall be [0m[32m[1m"obiwan212"[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_placer_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"obiwan212"[0m[32m shall have [0m[32m[1m212[0m[32m points[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out a bulk order of bananas > Process order - Successfully check out a bulk order of bananas - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out a bulk order of bananas - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out a bulk order of bananas > Process order - Successfully check out a bulk order of bananas - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out a bulk order of bananas - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Successfully check out a bulk order of bananas [90m# ProcessGroceryOrder.feature:50[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | d  | NULL       | InThreeDays | obiwan212 | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item   | quantity |
        | d     | Banana | 8        |
    user is checking out!
    [68] Starting cost calculation...
    [68] Processing item: Banana
    [68]   Unit price (cents): 100
    [68]   Quantity: 8
    [68]   Discount multiplier: 650
    [68]   Discounted item cost (cents): 520
    [68]   Running total cost (cents): 520
    [68] Total cost set to: 520 cents
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"d"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the total cost in the step def check is 520  [32mAnd [0m[32mthe total cost of the order shall be [0m[32m[1m520[0m[32m cents[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_total_cost_of_the_order_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's placer shall be [0m[32m[1m"obiwan212"[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_placer_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"obiwan212"[0m[32m shall have [0m[32m[1m212[0m[32m points[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out a bulk order of bananas > Process order - Successfully check out a bulk order of bananas - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out a bulk order of bananas - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out a bulk order of bananas > Process order - Successfully check out a bulk order of bananas - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out a bulk order of bananas - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Successfully check out a bulk order of bananas [90m# ProcessGroceryOrder.feature:52[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline  | customer  | assignee | state              |
        | e  | NULL       | InTwoDays | obiwan212 | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item   | quantity |
        | e     | Banana | 9        |
    user is checking out!
    [69] Starting cost calculation...
    [69] Processing item: Banana
    [69]   Unit price (cents): 100
    [69]   Quantity: 9
    [69]   Discount multiplier: 600
    [69]   Discounted item cost (cents): 540
    [69]   Running total cost (cents): 540
    [69] Total cost set to: 540 cents
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"e"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the total cost in the step def check is 540  [32mAnd [0m[32mthe total cost of the order shall be [0m[32m[1m540[0m[32m cents[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_total_cost_of_the_order_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's placer shall be [0m[32m[1m"obiwan212"[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_placer_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"obiwan212"[0m[32m shall have [0m[32m[1m212[0m[32m points[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out a bulk order of bananas > Process order - Successfully check out a bulk order of bananas - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out a bulk order of bananas - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out a bulk order of bananas > Process order - Successfully check out a bulk order of bananas - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out a bulk order of bananas - Examples - Example #1.6 STANDARD_OUT

    Scenario Outline: Successfully check out a bulk order of bananas [90m# ProcessGroceryOrder.feature:54[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline | customer  | assignee | state              |
        | f  | NULL       | InOneDay | obiwan212 | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item   | quantity |
        | f     | Banana | 10       |
    user is checking out!
    [70] Starting cost calculation...
    [70] Processing item: Banana
    [70]   Unit price (cents): 100
    [70]   Quantity: 10
    [70]   Discount multiplier: 550
    [70]   Discounted item cost (cents): 550
    [70]   Running total cost (cents): 550
    [70] Total cost set to: 550 cents
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"f"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the total cost in the step def check is 550  [32mAnd [0m[32mthe total cost of the order shall be [0m[32m[1m550[0m[32m cents[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_total_cost_of_the_order_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's placer shall be [0m[32m[1m"obiwan212"[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_placer_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"obiwan212"[0m[32m shall have [0m[32m[1m212[0m[32m points[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out a bulk order of bananas > Process order - Successfully check out a bulk order of bananas - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out a bulk order of bananas - Examples - Example #1.6 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out an order with multiple items > Process order - Successfully check out an order with multiple items - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out an order with multiple items - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully check out an order with multiple items [90m# ProcessGroceryOrder.feature:77[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline | customer | assignee | state              |
        | g  | NULL       | InOneDay | alice    | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | g     | Eggs                | 1        |
        | g     | Chicken noodle soup | 1        |
    user is checking out!
    [71] Starting cost calculation...
    [71] Processing item: Eggs
    [71]   Unit price (cents): 549
    [71]   Quantity: 1
    [71]   Discount multiplier: 1000
    [71]   Discounted item cost (cents): 549
    [71]   Running total cost (cents): 549
    [71] Processing item: Chicken noodle soup
    [71]   Unit price (cents): 179
    [71]   Quantity: 1
    [71]   Discount multiplier: 1000
    [71]   Discounted item cost (cents): 179
    [71]   Running total cost (cents): 728
    [71] Total cost set to: 728 cents
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"g"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the total cost in the step def check is 728  [32mAnd [0m[32mthe total cost of the order shall be [0m[32m[1m728[0m[32m cents[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_total_cost_of_the_order_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's placer shall be [0m[32m[1m"alice"[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_placer_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out an order with multiple items > Process order - Successfully check out an order with multiple items - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out an order with multiple items - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out an order with multiple items > Process order - Successfully check out an order with multiple items - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out an order with multiple items - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully check out an order with multiple items [90m# ProcessGroceryOrder.feature:81[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline  | customer | assignee | state              |
        | g  | NULL       | InTwoDays | alice    | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | g     | Eggs                | 5        |
        | g     | Chicken noodle soup | 3        |
    user is checking out!
    [72] Starting cost calculation...
    [72] Processing item: Eggs
    [72]   Unit price (cents): 549
    [72]   Quantity: 5
    [72]   Discount multiplier: 800
    [72]   Discounted item cost (cents): 2196
    [72]   Running total cost (cents): 2196
    [72] Processing item: Chicken noodle soup
    [72]   Unit price (cents): 179
    [72]   Quantity: 3
    [72]   Discount multiplier: 900
    [72]   Discounted item cost (cents): 483
    [72]   Running total cost (cents): 2679
    [72] Total cost set to: 2679 cents
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"g"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the total cost in the step def check is 2679  [32mAnd [0m[32mthe total cost of the order shall be [0m[32m[1m2679[0m[32m cents[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_total_cost_of_the_order_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's placer shall be [0m[32m[1m"alice"[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_placer_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out an order with multiple items > Process order - Successfully check out an order with multiple items - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out an order with multiple items - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out an order with multiple items > Process order - Successfully check out an order with multiple items - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out an order with multiple items - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully check out an order with multiple items [90m# ProcessGroceryOrder.feature:82[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer | assignee | state              |
        | g  | NULL       | InThreeDays | alice    | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | g     | Eggs                | 5        |
        | g     | Chicken noodle soup | 3        |
    user is checking out!
    [73] Starting cost calculation...
    [73] Processing item: Eggs
    [73]   Unit price (cents): 549
    [73]   Quantity: 5
    [73]   Discount multiplier: 800
    [73]   Discounted item cost (cents): 2196
    [73]   Running total cost (cents): 2196
    [73] Processing item: Chicken noodle soup
    [73]   Unit price (cents): 179
    [73]   Quantity: 3
    [73]   Discount multiplier: 900
    [73]   Discounted item cost (cents): 483
    [73]   Running total cost (cents): 2679
    [73] Total cost set to: 2679 cents
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"g"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the total cost in the step def check is 2679  [32mAnd [0m[32mthe total cost of the order shall be [0m[32m[1m2679[0m[32m cents[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_total_cost_of_the_order_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's placer shall be [0m[32m[1m"alice"[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_placer_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out an order with multiple items > Process order - Successfully check out an order with multiple items - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out an order with multiple items - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out an order with multiple items > Process order - Successfully check out an order with multiple items - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out an order with multiple items - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Successfully check out an order with multiple items [90m# ProcessGroceryOrder.feature:84[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline | customer | assignee | state              |
        | g  | NULL       | SameDay  | alice    | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | g     | Eggs                | 1        |
        | g     | Chicken noodle soup | 1        |
    user is checking out!
    [74] Starting cost calculation...
    [74] Same-day delivery selected. Adding fee of 500 cents.
    [74] Processing item: Eggs
    [74]   Unit price (cents): 549
    [74]   Quantity: 1
    [74]   Discount multiplier: 1000
    [74]   Discounted item cost (cents): 549
    [74]   Running total cost (cents): 1049
    [74] Processing item: Chicken noodle soup
    [74]   Unit price (cents): 179
    [74]   Quantity: 1
    [74]   Discount multiplier: 1000
    [74]   Discounted item cost (cents): 179
    [74]   Running total cost (cents): 1228
    [74] Total cost set to: 1228 cents
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"g"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the total cost in the step def check is 1228  [32mAnd [0m[32mthe total cost of the order shall be [0m[32m[1m1228[0m[32m cents[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_total_cost_of_the_order_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's placer shall be [0m[32m[1m"alice"[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_placer_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out an order with multiple items > Process order - Successfully check out an order with multiple items - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out an order with multiple items - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out an order with multiple items > Process order - Successfully check out an order with multiple items - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out an order with multiple items - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Successfully check out an order with multiple items [90m# ProcessGroceryOrder.feature:85[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline | customer | assignee | state              |
        | g  | NULL       | SameDay  | alice    | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | g     | Eggs                | 5        |
        | g     | Chicken noodle soup | 3        |
    user is checking out!
    [75] Starting cost calculation...
    [75] Same-day delivery selected. Adding fee of 500 cents.
    [75] Processing item: Eggs
    [75]   Unit price (cents): 549
    [75]   Quantity: 5
    [75]   Discount multiplier: 800
    [75]   Discounted item cost (cents): 2196
    [75]   Running total cost (cents): 2696
    [75] Processing item: Chicken noodle soup
    [75]   Unit price (cents): 179
    [75]   Quantity: 3
    [75]   Discount multiplier: 900
    [75]   Discounted item cost (cents): 483
    [75]   Running total cost (cents): 3179
    [75] Total cost set to: 3179 cents
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"g"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the total cost in the step def check is 3179  [32mAnd [0m[32mthe total cost of the order shall be [0m[32m[1m3179[0m[32m cents[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_total_cost_of_the_order_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's placer shall be [0m[32m[1m"alice"[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_placer_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully check out an order with multiple items > Process order - Successfully check out an order with multiple items - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully check out an order with multiple items - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Process order > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to check out an empty order STANDARD_OUT

    Scenario: Try to check out an empty order                                 [90m# ProcessGroceryOrder.feature:87[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id    | datePlaced | deadline  | customer | assignee | state              |
        | empty | NULL       | InTwoDays | alice    | NULL     | under construction |
    user is checking out!
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"empty"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot check out an empty order"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"under construction"[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to check out an empty order PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Try to check out an order in the wrong state > Process order - Try to check out an order in the wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to check out an order in the wrong state - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to check out an order in the wrong state               [90m# ProcessGroceryOrder.feature:114[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline  | customer  | assignee | state   |
        | badstate | NULL       | InTwoDays | anakin501 | NULL     | pending |
    items being added to order set to pending
    [77] Starting cost calculation...
    [77] Processing item: Eggs
    [77]   Unit price (cents): 549
    [77]   Quantity: 5
    [77]   Discount multiplier: 800
    [77]   Discounted item cost (cents): 2196
    [77]   Running total cost (cents): 2196
    [77] Total cost set to: 2196 cents
    items being added to order set to pending
    [77] Starting cost calculation...
    [77] Processing item: Eggs
    [77]   Unit price (cents): 549
    [77]   Quantity: 5
    [77]   Discount multiplier: 800
    [77]   Discounted item cost (cents): 2196
    [77]   Running total cost (cents): 2196
    [77] Processing item: Chicken noodle soup
    [77]   Unit price (cents): 179
    [77]   Quantity: 2
    [77]   Discount multiplier: 950
    [77]   Discounted item cost (cents): 340
    [77]   Running total cost (cents): 2536
    [77] Total cost set to: 2536 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item                | quantity |
        | badstate | Eggs                | 5        |
        | badstate | Chicken noodle soup | 2        |
    user is checking out!
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"badstate"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"order has already been checked out"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have [0m[32m[1m501[0m[32m points[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Try to check out an order in the wrong state > Process order - Try to check out an order in the wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to check out an order in the wrong state - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Try to check out an order in the wrong state > Process order - Try to check out an order in the wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to check out an order in the wrong state - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to check out an order in the wrong state               [90m# ProcessGroceryOrder.feature:115[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline  | customer  | assignee | state  |
        | badstate | today      | InTwoDays | anakin501 | NULL     | placed |
      [32mAnd [0m[32mthe following items are part of orders[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item                | quantity |
        | badstate | Eggs                | 5        |
        | badstate | Chicken noodle soup | 2        |
    user is checking out!
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"badstate"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"order has already been checked out"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have [0m[32m[1m501[0m[32m points[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Try to check out an order in the wrong state > Process order - Try to check out an order in the wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to check out an order in the wrong state - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Try to check out an order in the wrong state > Process order - Try to check out an order in the wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to check out an order in the wrong state - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Try to check out an order in the wrong state               [90m# ProcessGroceryOrder.feature:116[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline  | customer  | assignee | state          |
        | badstate | yesterday  | InTwoDays | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item                | quantity |
        | badstate | Eggs                | 5        |
        | badstate | Chicken noodle soup | 2        |
    user is checking out!
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"badstate"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"order has already been checked out"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"in preparation"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"bob"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have [0m[32m[1m501[0m[32m points[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Try to check out an order in the wrong state > Process order - Try to check out an order in the wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to check out an order in the wrong state - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Try to check out an order in the wrong state > Process order - Try to check out an order in the wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to check out an order in the wrong state - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Try to check out an order in the wrong state               [90m# ProcessGroceryOrder.feature:117[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline  | customer  | assignee | state              |
        | badstate | yesterday  | InTwoDays | anakin501 | claire   | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item                | quantity |
        | badstate | Eggs                | 5        |
        | badstate | Chicken noodle soup | 2        |
    user is checking out!
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"badstate"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"order has already been checked out"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"claire"[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have [0m[32m[1m501[0m[32m points[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Try to check out an order in the wrong state > Process order - Try to check out an order in the wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to check out an order in the wrong state - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Try to check out an order in the wrong state > Process order - Try to check out an order in the wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to check out an order in the wrong state - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Try to check out an order in the wrong state               [90m# ProcessGroceryOrder.feature:118[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline  | customer  | assignee | state     |
        | badstate | yesterday  | InTwoDays | anakin501 | alice    | delivered |
      [32mAnd [0m[32mthe following items are part of orders[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item                | quantity |
        | badstate | Eggs                | 5        |
        | badstate | Chicken noodle soup | 2        |
    user is checking out!
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"badstate"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"order has already been checked out"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"delivered"[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"alice"[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have [0m[32m[1m501[0m[32m points[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Try to check out an order in the wrong state > Process order - Try to check out an order in the wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to check out an order in the wrong state - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Try to check out an order in the wrong state > Process order - Try to check out an order in the wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to check out an order in the wrong state - Examples - Example #1.6 STANDARD_OUT

    Scenario Outline: Try to check out an order in the wrong state               [90m# ProcessGroceryOrder.feature:119[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline  | customer  | assignee | state     |
        | badstate | yesterday  | InTwoDays | anakin501 | bob      | cancelled |
      [32mAnd [0m[32mthe following items are part of orders[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item                | quantity |
        | badstate | Eggs                | 5        |
        | badstate | Chicken noodle soup | 2        |
    user is checking out!
      [32mWhen [0m[32mthe user attempts to check out the order with ID [0m[32m[1m"badstate"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_check_out_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"order has already been checked out"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"cancelled"[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"bob"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have [0m[32m[1m501[0m[32m points[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Try to check out an order in the wrong state > Process order - Try to check out an order in the wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to check out an order in the wrong state - Examples - Example #1.6 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully pay for an order                                              [90m# ProcessGroceryOrder.feature:148[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline | customer | assignee | state   |
        | eggsoup | NULL       | InOneDay | alice    | NULL     | pending |
        | bananas | NULL       | InOneDay | alice    | NULL     | pending |
        | smol    | NULL       | InOneDay | alice    | NULL     | pending |
    items being added to order set to pending
    [83] Starting cost calculation...
    [83] Processing item: Eggs
    [83]   Unit price (cents): 549
    [83]   Quantity: 1
    [83]   Discount multiplier: 1000
    [83]   Discounted item cost (cents): 549
    [83]   Running total cost (cents): 549
    [83] Total cost set to: 549 cents
    items being added to order set to pending
    [83] Starting cost calculation...
    [83] Processing item: Eggs
    [83]   Unit price (cents): 549
    [83]   Quantity: 1
    [83]   Discount multiplier: 1000
    [83]   Discounted item cost (cents): 549
    [83]   Running total cost (cents): 549
    [83] Processing item: Chicken noodle soup
    [83]   Unit price (cents): 179
    [83]   Quantity: 1
    [83]   Discount multiplier: 1000
    [83]   Discounted item cost (cents): 179
    [83]   Running total cost (cents): 728
    [83] Total cost set to: 728 cents
    items being added to order set to pending
    [84] Starting cost calculation...
    [84] Processing item: Banana
    [84]   Unit price (cents): 100
    [84]   Quantity: 8
    [84]   Discount multiplier: 650
    [84]   Discounted item cost (cents): 520
    [84]   Running total cost (cents): 520
    [84] Total cost set to: 520 cents
    items being added to order set to pending
    [85] Starting cost calculation...
    [85] Processing item: Grain of rice
    [85]   Unit price (cents): 1
    [85]   Quantity: 1
    [85]   Discount multiplier: 1000
    [85]   Discounted item cost (cents): 1
    [85]   Running total cost (cents): 1
    [85] Total cost set to: 1 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 1        |
        | bananas | Banana              | 8        |
        | smol    | Grain of rice       | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"eggsoup"[0m[32m [0m[32m[1m"without using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe final cost of the order, after considering points, shall be [0m[32m[1m728[0m[32m cents[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_final_cost_of_the_order_after_considering_points_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
    expected 2025-04-06 actual 2025-04-06
      [32mAnd [0m[32mthe order's date placed shall be today[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_date_placed_shall_be_today()[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m9[0m[32m points[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m19[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m1[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully pay for an order                                      [90m# ProcessGroceryOrder.feature:149[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline  | customer | assignee | state   |
        | eggsoup | NULL       | InTwoDays | alice    | NULL     | pending |
        | bananas | NULL       | InTwoDays | alice    | NULL     | pending |
        | smol    | NULL       | InTwoDays | alice    | NULL     | pending |
    items being added to order set to pending
    [86] Starting cost calculation...
    [86] Processing item: Eggs
    [86]   Unit price (cents): 549
    [86]   Quantity: 1
    [86]   Discount multiplier: 1000
    [86]   Discounted item cost (cents): 549
    [86]   Running total cost (cents): 549
    [86] Total cost set to: 549 cents
    items being added to order set to pending
    [86] Starting cost calculation...
    [86] Processing item: Eggs
    [86]   Unit price (cents): 549
    [86]   Quantity: 1
    [86]   Discount multiplier: 1000
    [86]   Discounted item cost (cents): 549
    [86]   Running total cost (cents): 549
    [86] Processing item: Chicken noodle soup
    [86]   Unit price (cents): 179
    [86]   Quantity: 1
    [86]   Discount multiplier: 1000
    [86]   Discounted item cost (cents): 179
    [86]   Running total cost (cents): 728
    [86] Total cost set to: 728 cents
    items being added to order set to pending
    [87] Starting cost calculation...
    [87] Processing item: Banana
    [87]   Unit price (cents): 100
    [87]   Quantity: 8
    [87]   Discount multiplier: 650
    [87]   Discounted item cost (cents): 520
    [87]   Running total cost (cents): 520
    [87] Total cost set to: 520 cents
    items being added to order set to pending
    [88] Starting cost calculation...
    [88] Processing item: Grain of rice
    [88]   Unit price (cents): 1
    [88]   Quantity: 1
    [88]   Discount multiplier: 1000
    [88]   Discounted item cost (cents): 1
    [88]   Running total cost (cents): 1
    [88] Total cost set to: 1 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 1        |
        | bananas | Banana              | 8        |
        | smol    | Grain of rice       | 1        |
    [86] Starting cost calculation...
    [86] Processing item: Eggs
    [86]   Unit price (cents): 549
    [86]   Quantity: 1
    [86]   Discount multiplier: 1000
    [86]   Discounted item cost (cents): 549
    [86]   Running total cost (cents): 549
    [86] Processing item: Chicken noodle soup
    [86]   Unit price (cents): 179
    [86]   Quantity: 1
    [86]   Discount multiplier: 1000
    [86]   Discounted item cost (cents): 179
    [86]   Running total cost (cents): 728
    [86] Total cost set to: 726 cents
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"eggsoup"[0m[32m [0m[32m[1m"using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe final cost of the order, after considering points, shall be [0m[32m[1m726[0m[32m cents[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_final_cost_of_the_order_after_considering_points_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
    expected 2025-04-06 actual 2025-04-06
      [32mAnd [0m[32mthe order's date placed shall be today[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_date_placed_shall_be_today()[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m7[0m[32m points[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m19[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m1[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully pay for an order                                              [90m# ProcessGroceryOrder.feature:150[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline    | customer  | assignee | state   |
        | eggsoup | NULL       | InThreeDays | anakin501 | NULL     | pending |
        | bananas | NULL       | InThreeDays | anakin501 | NULL     | pending |
        | smol    | NULL       | InThreeDays | anakin501 | NULL     | pending |
    items being added to order set to pending
    [89] Starting cost calculation...
    [89] Processing item: Eggs
    [89]   Unit price (cents): 549
    [89]   Quantity: 1
    [89]   Discount multiplier: 1000
    [89]   Discounted item cost (cents): 549
    [89]   Running total cost (cents): 549
    [89] Total cost set to: 549 cents
    items being added to order set to pending
    [89] Starting cost calculation...
    [89] Processing item: Eggs
    [89]   Unit price (cents): 549
    [89]   Quantity: 1
    [89]   Discount multiplier: 1000
    [89]   Discounted item cost (cents): 549
    [89]   Running total cost (cents): 549
    [89] Processing item: Chicken noodle soup
    [89]   Unit price (cents): 179
    [89]   Quantity: 1
    [89]   Discount multiplier: 1000
    [89]   Discounted item cost (cents): 179
    [89]   Running total cost (cents): 728
    [89] Total cost set to: 728 cents
    items being added to order set to pending
    [90] Starting cost calculation...
    [90] Processing item: Banana
    [90]   Unit price (cents): 100
    [90]   Quantity: 8
    [90]   Discount multiplier: 650
    [90]   Discounted item cost (cents): 520
    [90]   Running total cost (cents): 520
    [90] Total cost set to: 520 cents
    items being added to order set to pending
    [91] Starting cost calculation...
    [91] Processing item: Grain of rice
    [91]   Unit price (cents): 1
    [91]   Quantity: 1
    [91]   Discount multiplier: 1000
    [91]   Discounted item cost (cents): 1
    [91]   Running total cost (cents): 1
    [91] Total cost set to: 1 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 1        |
        | bananas | Banana              | 8        |
        | smol    | Grain of rice       | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"eggsoup"[0m[32m [0m[32m[1m"without using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe final cost of the order, after considering points, shall be [0m[32m[1m728[0m[32m cents[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_final_cost_of_the_order_after_considering_points_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
    expected 2025-04-06 actual 2025-04-06
      [32mAnd [0m[32mthe order's date placed shall be today[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_date_placed_shall_be_today()[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have [0m[32m[1m508[0m[32m points[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m19[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m1[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Successfully pay for an order                                      [90m# ProcessGroceryOrder.feature:151[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline | customer  | assignee | state   |
        | eggsoup | NULL       | InOneDay | anakin501 | NULL     | pending |
        | bananas | NULL       | InOneDay | anakin501 | NULL     | pending |
        | smol    | NULL       | InOneDay | anakin501 | NULL     | pending |
    items being added to order set to pending
    [92] Starting cost calculation...
    [92] Processing item: Eggs
    [92]   Unit price (cents): 549
    [92]   Quantity: 1
    [92]   Discount multiplier: 1000
    [92]   Discounted item cost (cents): 549
    [92]   Running total cost (cents): 549
    [92] Total cost set to: 549 cents
    items being added to order set to pending
    [92] Starting cost calculation...
    [92] Processing item: Eggs
    [92]   Unit price (cents): 549
    [92]   Quantity: 1
    [92]   Discount multiplier: 1000
    [92]   Discounted item cost (cents): 549
    [92]   Running total cost (cents): 549
    [92] Processing item: Chicken noodle soup
    [92]   Unit price (cents): 179
    [92]   Quantity: 1
    [92]   Discount multiplier: 1000
    [92]   Discounted item cost (cents): 179
    [92]   Running total cost (cents): 728
    [92] Total cost set to: 728 cents
    items being added to order set to pending
    [93] Starting cost calculation...
    [93] Processing item: Banana
    [93]   Unit price (cents): 100
    [93]   Quantity: 8
    [93]   Discount multiplier: 650
    [93]   Discounted item cost (cents): 520
    [93]   Running total cost (cents): 520
    [93] Total cost set to: 520 cents
    items being added to order set to pending
    [94] Starting cost calculation...
    [94] Processing item: Grain of rice
    [94]   Unit price (cents): 1
    [94]   Quantity: 1
    [94]   Discount multiplier: 1000
    [94]   Discounted item cost (cents): 1
    [94]   Running total cost (cents): 1
    [94] Total cost set to: 1 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 1        |
        | bananas | Banana              | 8        |
        | smol    | Grain of rice       | 1        |
    [92] Starting cost calculation...
    [92] Processing item: Eggs
    [92]   Unit price (cents): 549
    [92]   Quantity: 1
    [92]   Discount multiplier: 1000
    [92]   Discounted item cost (cents): 549
    [92]   Running total cost (cents): 549
    [92] Processing item: Chicken noodle soup
    [92]   Unit price (cents): 179
    [92]   Quantity: 1
    [92]   Discount multiplier: 1000
    [92]   Discounted item cost (cents): 179
    [92]   Running total cost (cents): 728
    [92] Total cost set to: 227 cents
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"eggsoup"[0m[32m [0m[32m[1m"using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe final cost of the order, after considering points, shall be [0m[32m[1m227[0m[32m cents[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_final_cost_of_the_order_after_considering_points_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
    expected 2025-04-06 actual 2025-04-06
      [32mAnd [0m[32mthe order's date placed shall be today[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_date_placed_shall_be_today()[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have [0m[32m[1m7[0m[32m points[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m19[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m1[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Successfully pay for an order                                              [90m# ProcessGroceryOrder.feature:153[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline  | customer  | assignee | state   |
        | eggsoup | NULL       | InTwoDays | obiwan212 | NULL     | pending |
        | bananas | NULL       | InTwoDays | obiwan212 | NULL     | pending |
        | smol    | NULL       | InTwoDays | obiwan212 | NULL     | pending |
    items being added to order set to pending
    [95] Starting cost calculation...
    [95] Processing item: Eggs
    [95]   Unit price (cents): 549
    [95]   Quantity: 1
    [95]   Discount multiplier: 1000
    [95]   Discounted item cost (cents): 549
    [95]   Running total cost (cents): 549
    [95] Total cost set to: 549 cents
    items being added to order set to pending
    [95] Starting cost calculation...
    [95] Processing item: Eggs
    [95]   Unit price (cents): 549
    [95]   Quantity: 1
    [95]   Discount multiplier: 1000
    [95]   Discounted item cost (cents): 549
    [95]   Running total cost (cents): 549
    [95] Processing item: Chicken noodle soup
    [95]   Unit price (cents): 179
    [95]   Quantity: 1
    [95]   Discount multiplier: 1000
    [95]   Discounted item cost (cents): 179
    [95]   Running total cost (cents): 728
    [95] Total cost set to: 728 cents
    items being added to order set to pending
    [96] Starting cost calculation...
    [96] Processing item: Banana
    [96]   Unit price (cents): 100
    [96]   Quantity: 8
    [96]   Discount multiplier: 650
    [96]   Discounted item cost (cents): 520
    [96]   Running total cost (cents): 520
    [96] Total cost set to: 520 cents
    items being added to order set to pending
    [97] Starting cost calculation...
    [97] Processing item: Grain of rice
    [97]   Unit price (cents): 1
    [97]   Quantity: 1
    [97]   Discount multiplier: 1000
    [97]   Discounted item cost (cents): 1
    [97]   Running total cost (cents): 1
    [97] Total cost set to: 1 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 1        |
        | bananas | Banana              | 8        |
        | smol    | Grain of rice       | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"bananas"[0m[32m [0m[32m[1m"without using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe final cost of the order, after considering points, shall be [0m[32m[1m520[0m[32m cents[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_final_cost_of_the_order_after_considering_points_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
    expected 2025-04-06 actual 2025-04-06
      [32mAnd [0m[32mthe order's date placed shall be today[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_date_placed_shall_be_today()[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"obiwan212"[0m[32m shall have [0m[32m[1m220[0m[32m points[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m0[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.6 STANDARD_OUT

    Scenario Outline: Successfully pay for an order                                      [90m# ProcessGroceryOrder.feature:154[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline    | customer  | assignee | state   |
        | eggsoup | NULL       | InThreeDays | obiwan212 | NULL     | pending |
        | bananas | NULL       | InThreeDays | obiwan212 | NULL     | pending |
        | smol    | NULL       | InThreeDays | obiwan212 | NULL     | pending |
    items being added to order set to pending
    [98] Starting cost calculation...
    [98] Processing item: Eggs
    [98]   Unit price (cents): 549
    [98]   Quantity: 1
    [98]   Discount multiplier: 1000
    [98]   Discounted item cost (cents): 549
    [98]   Running total cost (cents): 549
    [98] Total cost set to: 549 cents
    items being added to order set to pending
    [98] Starting cost calculation...
    [98] Processing item: Eggs
    [98]   Unit price (cents): 549
    [98]   Quantity: 1
    [98]   Discount multiplier: 1000
    [98]   Discounted item cost (cents): 549
    [98]   Running total cost (cents): 549
    [98] Processing item: Chicken noodle soup
    [98]   Unit price (cents): 179
    [98]   Quantity: 1
    [98]   Discount multiplier: 1000
    [98]   Discounted item cost (cents): 179
    [98]   Running total cost (cents): 728
    [98] Total cost set to: 728 cents
    items being added to order set to pending
    [99] Starting cost calculation...
    [99] Processing item: Banana
    [99]   Unit price (cents): 100
    [99]   Quantity: 8
    [99]   Discount multiplier: 650
    [99]   Discounted item cost (cents): 520
    [99]   Running total cost (cents): 520
    [99] Total cost set to: 520 cents
    items being added to order set to pending
    [100] Starting cost calculation...
    [100] Processing item: Grain of rice
    [100]   Unit price (cents): 1
    [100]   Quantity: 1
    [100]   Discount multiplier: 1000
    [100]   Discounted item cost (cents): 1
    [100]   Running total cost (cents): 1
    [100] Total cost set to: 1 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 1        |
        | bananas | Banana              | 8        |
        | smol    | Grain of rice       | 1        |
    [99] Starting cost calculation...
    [99] Processing item: Banana
    [99]   Unit price (cents): 100
    [99]   Quantity: 8
    [99]   Discount multiplier: 650
    [99]   Discounted item cost (cents): 520
    [99]   Running total cost (cents): 520
    [99] Total cost set to: 308 cents
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"bananas"[0m[32m [0m[32m[1m"using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe final cost of the order, after considering points, shall be [0m[32m[1m308[0m[32m cents[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_final_cost_of_the_order_after_considering_points_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
    expected 2025-04-06 actual 2025-04-06
      [32mAnd [0m[32mthe order's date placed shall be today[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_date_placed_shall_be_today()[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"obiwan212"[0m[32m shall have [0m[32m[1m8[0m[32m points[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m0[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.6 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.7 STANDARD_OUT

    Scenario Outline: Successfully pay for an order                                           [90m# ProcessGroceryOrder.feature:156[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline | customer | assignee | state   |
        | eggsoup | NULL       | InOneDay | alice    | NULL     | pending |
        | bananas | NULL       | InOneDay | alice    | NULL     | pending |
        | smol    | NULL       | InOneDay | alice    | NULL     | pending |
    items being added to order set to pending
    [101] Starting cost calculation...
    [101] Processing item: Eggs
    [101]   Unit price (cents): 549
    [101]   Quantity: 1
    [101]   Discount multiplier: 1000
    [101]   Discounted item cost (cents): 549
    [101]   Running total cost (cents): 549
    [101] Total cost set to: 549 cents
    items being added to order set to pending
    [101] Starting cost calculation...
    [101] Processing item: Eggs
    [101]   Unit price (cents): 549
    [101]   Quantity: 1
    [101]   Discount multiplier: 1000
    [101]   Discounted item cost (cents): 549
    [101]   Running total cost (cents): 549
    [101] Processing item: Chicken noodle soup
    [101]   Unit price (cents): 179
    [101]   Quantity: 1
    [101]   Discount multiplier: 1000
    [101]   Discounted item cost (cents): 179
    [101]   Running total cost (cents): 728
    [101] Total cost set to: 728 cents
    items being added to order set to pending
    [102] Starting cost calculation...
    [102] Processing item: Banana
    [102]   Unit price (cents): 100
    [102]   Quantity: 8
    [102]   Discount multiplier: 650
    [102]   Discounted item cost (cents): 520
    [102]   Running total cost (cents): 520
    [102] Total cost set to: 520 cents
    items being added to order set to pending
    [103] Starting cost calculation...
    [103] Processing item: Grain of rice
    [103]   Unit price (cents): 1
    [103]   Quantity: 1
    [103]   Discount multiplier: 1000
    [103]   Discounted item cost (cents): 1
    [103]   Running total cost (cents): 1
    [103] Total cost set to: 1 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 1        |
        | bananas | Banana              | 8        |
        | smol    | Grain of rice       | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"smol"[0m[32m [0m[32m[1m"without using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe final cost of the order, after considering points, shall be [0m[32m[1m1[0m[32m cents[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_final_cost_of_the_order_after_considering_points_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
    expected 2025-04-06 actual 2025-04-06
      [32mAnd [0m[32mthe order's date placed shall be today[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_date_placed_shall_be_today()[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m3[0m[32m points[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m99[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.7 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.8 STANDARD_OUT

    Scenario Outline: Successfully pay for an order                                   [90m# ProcessGroceryOrder.feature:157[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline  | customer | assignee | state   |
        | eggsoup | NULL       | InTwoDays | alice    | NULL     | pending |
        | bananas | NULL       | InTwoDays | alice    | NULL     | pending |
        | smol    | NULL       | InTwoDays | alice    | NULL     | pending |
    items being added to order set to pending
    [104] Starting cost calculation...
    [104] Processing item: Eggs
    [104]   Unit price (cents): 549
    [104]   Quantity: 1
    [104]   Discount multiplier: 1000
    [104]   Discounted item cost (cents): 549
    [104]   Running total cost (cents): 549
    [104] Total cost set to: 549 cents
    items being added to order set to pending
    [104] Starting cost calculation...
    [104] Processing item: Eggs
    [104]   Unit price (cents): 549
    [104]   Quantity: 1
    [104]   Discount multiplier: 1000
    [104]   Discounted item cost (cents): 549
    [104]   Running total cost (cents): 549
    [104] Processing item: Chicken noodle soup
    [104]   Unit price (cents): 179
    [104]   Quantity: 1
    [104]   Discount multiplier: 1000
    [104]   Discounted item cost (cents): 179
    [104]   Running total cost (cents): 728
    [104] Total cost set to: 728 cents
    items being added to order set to pending
    [105] Starting cost calculation...
    [105] Processing item: Banana
    [105]   Unit price (cents): 100
    [105]   Quantity: 8
    [105]   Discount multiplier: 650
    [105]   Discounted item cost (cents): 520
    [105]   Running total cost (cents): 520
    [105] Total cost set to: 520 cents
    items being added to order set to pending
    [106] Starting cost calculation...
    [106] Processing item: Grain of rice
    [106]   Unit price (cents): 1
    [106]   Quantity: 1
    [106]   Discount multiplier: 1000
    [106]   Discounted item cost (cents): 1
    [106]   Running total cost (cents): 1
    [106] Total cost set to: 1 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 1        |
        | bananas | Banana              | 8        |
        | smol    | Grain of rice       | 1        |
    [106] Starting cost calculation...
    [106] Processing item: Grain of rice
    [106]   Unit price (cents): 1
    [106]   Quantity: 1
    [106]   Discount multiplier: 1000
    [106]   Discounted item cost (cents): 1
    [106]   Running total cost (cents): 1
    [106] Total cost set to: 0 cents
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"smol"[0m[32m [0m[32m[1m"using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe final cost of the order, after considering points, shall be [0m[32m[1m0[0m[32m cents[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_final_cost_of_the_order_after_considering_points_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
    expected 2025-04-06 actual 2025-04-06
      [32mAnd [0m[32mthe order's date placed shall be today[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_date_placed_shall_be_today()[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m99[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.8 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.9 STANDARD_OUT

    Scenario Outline: Successfully pay for an order                                              [90m# ProcessGroceryOrder.feature:159[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline | customer | assignee | state   |
        | eggsoup | NULL       | SameDay  | alice    | NULL     | pending |
        | bananas | NULL       | SameDay  | alice    | NULL     | pending |
        | smol    | NULL       | SameDay  | alice    | NULL     | pending |
    items being added to order set to pending
    [107] Starting cost calculation...
    [107] Same-day delivery selected. Adding fee of 500 cents.
    [107] Processing item: Eggs
    [107]   Unit price (cents): 549
    [107]   Quantity: 1
    [107]   Discount multiplier: 1000
    [107]   Discounted item cost (cents): 549
    [107]   Running total cost (cents): 1049
    [107] Total cost set to: 1049 cents
    items being added to order set to pending
    [107] Starting cost calculation...
    [107] Same-day delivery selected. Adding fee of 500 cents.
    [107] Processing item: Eggs
    [107]   Unit price (cents): 549
    [107]   Quantity: 1
    [107]   Discount multiplier: 1000
    [107]   Discounted item cost (cents): 549
    [107]   Running total cost (cents): 1049
    [107] Processing item: Chicken noodle soup
    [107]   Unit price (cents): 179
    [107]   Quantity: 1
    [107]   Discount multiplier: 1000
    [107]   Discounted item cost (cents): 179
    [107]   Running total cost (cents): 1228
    [107] Total cost set to: 1228 cents
    items being added to order set to pending
    [108] Starting cost calculation...
    [108] Same-day delivery selected. Adding fee of 500 cents.
    [108] Processing item: Banana
    [108]   Unit price (cents): 100
    [108]   Quantity: 8
    [108]   Discount multiplier: 650
    [108]   Discounted item cost (cents): 520
    [108]   Running total cost (cents): 1020
    [108] Total cost set to: 1020 cents
    items being added to order set to pending
    [109] Starting cost calculation...
    [109] Same-day delivery selected. Adding fee of 500 cents.
    [109] Processing item: Grain of rice
    [109]   Unit price (cents): 1
    [109]   Quantity: 1
    [109]   Discount multiplier: 1000
    [109]   Discounted item cost (cents): 1
    [109]   Running total cost (cents): 501
    [109] Total cost set to: 501 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 1        |
        | bananas | Banana              | 8        |
        | smol    | Grain of rice       | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"eggsoup"[0m[32m [0m[32m[1m"without using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe final cost of the order, after considering points, shall be [0m[32m[1m1228[0m[32m cents[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_final_cost_of_the_order_after_considering_points_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
    expected 2025-04-06 actual 2025-04-06
      [32mAnd [0m[32mthe order's date placed shall be today[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_date_placed_shall_be_today()[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m9[0m[32m points[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m19[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m1[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.9 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.10 STANDARD_OUT

    Scenario Outline: Successfully pay for an order                                      [90m# ProcessGroceryOrder.feature:160[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline | customer | assignee | state   |
        | eggsoup | NULL       | SameDay  | alice    | NULL     | pending |
        | bananas | NULL       | SameDay  | alice    | NULL     | pending |
        | smol    | NULL       | SameDay  | alice    | NULL     | pending |
    items being added to order set to pending
    [110] Starting cost calculation...
    [110] Same-day delivery selected. Adding fee of 500 cents.
    [110] Processing item: Eggs
    [110]   Unit price (cents): 549
    [110]   Quantity: 1
    [110]   Discount multiplier: 1000
    [110]   Discounted item cost (cents): 549
    [110]   Running total cost (cents): 1049
    [110] Total cost set to: 1049 cents
    items being added to order set to pending
    [110] Starting cost calculation...
    [110] Same-day delivery selected. Adding fee of 500 cents.
    [110] Processing item: Eggs
    [110]   Unit price (cents): 549
    [110]   Quantity: 1
    [110]   Discount multiplier: 1000
    [110]   Discounted item cost (cents): 549
    [110]   Running total cost (cents): 1049
    [110] Processing item: Chicken noodle soup
    [110]   Unit price (cents): 179
    [110]   Quantity: 1
    [110]   Discount multiplier: 1000
    [110]   Discounted item cost (cents): 179
    [110]   Running total cost (cents): 1228
    [110] Total cost set to: 1228 cents
    items being added to order set to pending
    [111] Starting cost calculation...
    [111] Same-day delivery selected. Adding fee of 500 cents.
    [111] Processing item: Banana
    [111]   Unit price (cents): 100
    [111]   Quantity: 8
    [111]   Discount multiplier: 650
    [111]   Discounted item cost (cents): 520
    [111]   Running total cost (cents): 1020
    [111] Total cost set to: 1020 cents
    items being added to order set to pending
    [112] Starting cost calculation...
    [112] Same-day delivery selected. Adding fee of 500 cents.
    [112] Processing item: Grain of rice
    [112]   Unit price (cents): 1
    [112]   Quantity: 1
    [112]   Discount multiplier: 1000
    [112]   Discounted item cost (cents): 1
    [112]   Running total cost (cents): 501
    [112] Total cost set to: 501 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 1        |
        | bananas | Banana              | 8        |
        | smol    | Grain of rice       | 1        |
    [110] Starting cost calculation...
    [110] Same-day delivery selected. Adding fee of 500 cents.
    [110] Processing item: Eggs
    [110]   Unit price (cents): 549
    [110]   Quantity: 1
    [110]   Discount multiplier: 1000
    [110]   Discounted item cost (cents): 549
    [110]   Running total cost (cents): 1049
    [110] Processing item: Chicken noodle soup
    [110]   Unit price (cents): 179
    [110]   Quantity: 1
    [110]   Discount multiplier: 1000
    [110]   Discounted item cost (cents): 179
    [110]   Running total cost (cents): 1228
    [110] Total cost set to: 1226 cents
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"eggsoup"[0m[32m [0m[32m[1m"using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe final cost of the order, after considering points, shall be [0m[32m[1m1226[0m[32m cents[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_final_cost_of_the_order_after_considering_points_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
    expected 2025-04-06 actual 2025-04-06
      [32mAnd [0m[32mthe order's date placed shall be today[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_date_placed_shall_be_today()[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m7[0m[32m points[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m19[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m1[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.10 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.11 STANDARD_OUT

    Scenario Outline: Successfully pay for an order                                              [90m# ProcessGroceryOrder.feature:161[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline | customer  | assignee | state   |
        | eggsoup | NULL       | SameDay  | obiwan212 | NULL     | pending |
        | bananas | NULL       | SameDay  | obiwan212 | NULL     | pending |
        | smol    | NULL       | SameDay  | obiwan212 | NULL     | pending |
    items being added to order set to pending
    [113] Starting cost calculation...
    [113] Same-day delivery selected. Adding fee of 500 cents.
    [113] Processing item: Eggs
    [113]   Unit price (cents): 549
    [113]   Quantity: 1
    [113]   Discount multiplier: 1000
    [113]   Discounted item cost (cents): 549
    [113]   Running total cost (cents): 1049
    [113] Total cost set to: 1049 cents
    items being added to order set to pending
    [113] Starting cost calculation...
    [113] Same-day delivery selected. Adding fee of 500 cents.
    [113] Processing item: Eggs
    [113]   Unit price (cents): 549
    [113]   Quantity: 1
    [113]   Discount multiplier: 1000
    [113]   Discounted item cost (cents): 549
    [113]   Running total cost (cents): 1049
    [113] Processing item: Chicken noodle soup
    [113]   Unit price (cents): 179
    [113]   Quantity: 1
    [113]   Discount multiplier: 1000
    [113]   Discounted item cost (cents): 179
    [113]   Running total cost (cents): 1228
    [113] Total cost set to: 1228 cents
    items being added to order set to pending
    [114] Starting cost calculation...
    [114] Same-day delivery selected. Adding fee of 500 cents.
    [114] Processing item: Banana
    [114]   Unit price (cents): 100
    [114]   Quantity: 8
    [114]   Discount multiplier: 650
    [114]   Discounted item cost (cents): 520
    [114]   Running total cost (cents): 1020
    [114] Total cost set to: 1020 cents
    items being added to order set to pending
    [115] Starting cost calculation...
    [115] Same-day delivery selected. Adding fee of 500 cents.
    [115] Processing item: Grain of rice
    [115]   Unit price (cents): 1
    [115]   Quantity: 1
    [115]   Discount multiplier: 1000
    [115]   Discounted item cost (cents): 1
    [115]   Running total cost (cents): 501
    [115] Total cost set to: 501 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 1        |
        | bananas | Banana              | 8        |
        | smol    | Grain of rice       | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"bananas"[0m[32m [0m[32m[1m"without using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe final cost of the order, after considering points, shall be [0m[32m[1m1020[0m[32m cents[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_final_cost_of_the_order_after_considering_points_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
    expected 2025-04-06 actual 2025-04-06
      [32mAnd [0m[32mthe order's date placed shall be today[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_date_placed_shall_be_today()[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"obiwan212"[0m[32m shall have [0m[32m[1m220[0m[32m points[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m0[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.11 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.12 STANDARD_OUT

    Scenario Outline: Successfully pay for an order                                      [90m# ProcessGroceryOrder.feature:162[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline | customer  | assignee | state   |
        | eggsoup | NULL       | SameDay  | obiwan212 | NULL     | pending |
        | bananas | NULL       | SameDay  | obiwan212 | NULL     | pending |
        | smol    | NULL       | SameDay  | obiwan212 | NULL     | pending |
    items being added to order set to pending
    [116] Starting cost calculation...
    [116] Same-day delivery selected. Adding fee of 500 cents.
    [116] Processing item: Eggs
    [116]   Unit price (cents): 549
    [116]   Quantity: 1
    [116]   Discount multiplier: 1000
    [116]   Discounted item cost (cents): 549
    [116]   Running total cost (cents): 1049
    [116] Total cost set to: 1049 cents
    items being added to order set to pending
    [116] Starting cost calculation...
    [116] Same-day delivery selected. Adding fee of 500 cents.
    [116] Processing item: Eggs
    [116]   Unit price (cents): 549
    [116]   Quantity: 1
    [116]   Discount multiplier: 1000
    [116]   Discounted item cost (cents): 549
    [116]   Running total cost (cents): 1049
    [116] Processing item: Chicken noodle soup
    [116]   Unit price (cents): 179
    [116]   Quantity: 1
    [116]   Discount multiplier: 1000
    [116]   Discounted item cost (cents): 179
    [116]   Running total cost (cents): 1228
    [116] Total cost set to: 1228 cents
    items being added to order set to pending
    [117] Starting cost calculation...
    [117] Same-day delivery selected. Adding fee of 500 cents.
    [117] Processing item: Banana
    [117]   Unit price (cents): 100
    [117]   Quantity: 8
    [117]   Discount multiplier: 650
    [117]   Discounted item cost (cents): 520
    [117]   Running total cost (cents): 1020
    [117] Total cost set to: 1020 cents
    items being added to order set to pending
    [118] Starting cost calculation...
    [118] Same-day delivery selected. Adding fee of 500 cents.
    [118] Processing item: Grain of rice
    [118]   Unit price (cents): 1
    [118]   Quantity: 1
    [118]   Discount multiplier: 1000
    [118]   Discounted item cost (cents): 1
    [118]   Running total cost (cents): 501
    [118] Total cost set to: 501 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 1        |
        | bananas | Banana              | 8        |
        | smol    | Grain of rice       | 1        |
    [117] Starting cost calculation...
    [117] Same-day delivery selected. Adding fee of 500 cents.
    [117] Processing item: Banana
    [117]   Unit price (cents): 100
    [117]   Quantity: 8
    [117]   Discount multiplier: 650
    [117]   Discounted item cost (cents): 520
    [117]   Running total cost (cents): 1020
    [117] Total cost set to: 808 cents
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"bananas"[0m[32m [0m[32m[1m"using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe final cost of the order, after considering points, shall be [0m[32m[1m808[0m[32m cents[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_final_cost_of_the_order_after_considering_points_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
    expected 2025-04-06 actual 2025-04-06
      [32mAnd [0m[32mthe order's date placed shall be today[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_date_placed_shall_be_today()[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"obiwan212"[0m[32m shall have [0m[32m[1m8[0m[32m points[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m0[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.12 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.13 STANDARD_OUT

    Scenario Outline: Successfully pay for an order                                           [90m# ProcessGroceryOrder.feature:163[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline | customer | assignee | state   |
        | eggsoup | NULL       | SameDay  | alice    | NULL     | pending |
        | bananas | NULL       | SameDay  | alice    | NULL     | pending |
        | smol    | NULL       | SameDay  | alice    | NULL     | pending |
    items being added to order set to pending
    [119] Starting cost calculation...
    [119] Same-day delivery selected. Adding fee of 500 cents.
    [119] Processing item: Eggs
    [119]   Unit price (cents): 549
    [119]   Quantity: 1
    [119]   Discount multiplier: 1000
    [119]   Discounted item cost (cents): 549
    [119]   Running total cost (cents): 1049
    [119] Total cost set to: 1049 cents
    items being added to order set to pending
    [119] Starting cost calculation...
    [119] Same-day delivery selected. Adding fee of 500 cents.
    [119] Processing item: Eggs
    [119]   Unit price (cents): 549
    [119]   Quantity: 1
    [119]   Discount multiplier: 1000
    [119]   Discounted item cost (cents): 549
    [119]   Running total cost (cents): 1049
    [119] Processing item: Chicken noodle soup
    [119]   Unit price (cents): 179
    [119]   Quantity: 1
    [119]   Discount multiplier: 1000
    [119]   Discounted item cost (cents): 179
    [119]   Running total cost (cents): 1228
    [119] Total cost set to: 1228 cents
    items being added to order set to pending
    [120] Starting cost calculation...
    [120] Same-day delivery selected. Adding fee of 500 cents.
    [120] Processing item: Banana
    [120]   Unit price (cents): 100
    [120]   Quantity: 8
    [120]   Discount multiplier: 650
    [120]   Discounted item cost (cents): 520
    [120]   Running total cost (cents): 1020
    [120] Total cost set to: 1020 cents
    items being added to order set to pending
    [121] Starting cost calculation...
    [121] Same-day delivery selected. Adding fee of 500 cents.
    [121] Processing item: Grain of rice
    [121]   Unit price (cents): 1
    [121]   Quantity: 1
    [121]   Discount multiplier: 1000
    [121]   Discounted item cost (cents): 1
    [121]   Running total cost (cents): 501
    [121] Total cost set to: 501 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 1        |
        | bananas | Banana              | 8        |
        | smol    | Grain of rice       | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"smol"[0m[32m [0m[32m[1m"without using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe final cost of the order, after considering points, shall be [0m[32m[1m501[0m[32m cents[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_final_cost_of_the_order_after_considering_points_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
    expected 2025-04-06 actual 2025-04-06
      [32mAnd [0m[32mthe order's date placed shall be today[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_date_placed_shall_be_today()[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m3[0m[32m points[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m99[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.13 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.14 STANDARD_OUT

    Scenario Outline: Successfully pay for an order                                   [90m# ProcessGroceryOrder.feature:164[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline | customer | assignee | state   |
        | eggsoup | NULL       | SameDay  | alice    | NULL     | pending |
        | bananas | NULL       | SameDay  | alice    | NULL     | pending |
        | smol    | NULL       | SameDay  | alice    | NULL     | pending |
    items being added to order set to pending
    [122] Starting cost calculation...
    [122] Same-day delivery selected. Adding fee of 500 cents.
    [122] Processing item: Eggs
    [122]   Unit price (cents): 549
    [122]   Quantity: 1
    [122]   Discount multiplier: 1000
    [122]   Discounted item cost (cents): 549
    [122]   Running total cost (cents): 1049
    [122] Total cost set to: 1049 cents
    items being added to order set to pending
    [122] Starting cost calculation...
    [122] Same-day delivery selected. Adding fee of 500 cents.
    [122] Processing item: Eggs
    [122]   Unit price (cents): 549
    [122]   Quantity: 1
    [122]   Discount multiplier: 1000
    [122]   Discounted item cost (cents): 549
    [122]   Running total cost (cents): 1049
    [122] Processing item: Chicken noodle soup
    [122]   Unit price (cents): 179
    [122]   Quantity: 1
    [122]   Discount multiplier: 1000
    [122]   Discounted item cost (cents): 179
    [122]   Running total cost (cents): 1228
    [122] Total cost set to: 1228 cents
    items being added to order set to pending
    [123] Starting cost calculation...
    [123] Same-day delivery selected. Adding fee of 500 cents.
    [123] Processing item: Banana
    [123]   Unit price (cents): 100
    [123]   Quantity: 8
    [123]   Discount multiplier: 650
    [123]   Discounted item cost (cents): 520
    [123]   Running total cost (cents): 1020
    [123] Total cost set to: 1020 cents
    items being added to order set to pending
    [124] Starting cost calculation...
    [124] Same-day delivery selected. Adding fee of 500 cents.
    [124] Processing item: Grain of rice
    [124]   Unit price (cents): 1
    [124]   Quantity: 1
    [124]   Discount multiplier: 1000
    [124]   Discounted item cost (cents): 1
    [124]   Running total cost (cents): 501
    [124] Total cost set to: 501 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 1        |
        | bananas | Banana              | 8        |
        | smol    | Grain of rice       | 1        |
    [124] Starting cost calculation...
    [124] Same-day delivery selected. Adding fee of 500 cents.
    [124] Processing item: Grain of rice
    [124]   Unit price (cents): 1
    [124]   Quantity: 1
    [124]   Discount multiplier: 1000
    [124]   Discounted item cost (cents): 1
    [124]   Running total cost (cents): 501
    [124] Total cost set to: 499 cents
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"smol"[0m[32m [0m[32m[1m"using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe final cost of the order, after considering points, shall be [0m[32m[1m499[0m[32m cents[0m   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_final_cost_of_the_order_after_considering_points_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
    expected 2025-04-06 actual 2025-04-06
      [32mAnd [0m[32mthe order's date placed shall be today[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_date_placed_shall_be_today()[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m1[0m[32m points[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m99[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.14 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.15 STANDARD_OUT

    Scenario Outline: Successfully pay for an order                                           [90m# ProcessGroceryOrder.feature:165[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline | customer  | assignee | state   |
        | eggsoup | NULL       | SameDay  | anakin501 | NULL     | pending |
        | bananas | NULL       | SameDay  | anakin501 | NULL     | pending |
        | smol    | NULL       | SameDay  | anakin501 | NULL     | pending |
    items being added to order set to pending
    [125] Starting cost calculation...
    [125] Same-day delivery selected. Adding fee of 500 cents.
    [125] Processing item: Eggs
    [125]   Unit price (cents): 549
    [125]   Quantity: 1
    [125]   Discount multiplier: 1000
    [125]   Discounted item cost (cents): 549
    [125]   Running total cost (cents): 1049
    [125] Total cost set to: 1049 cents
    items being added to order set to pending
    [125] Starting cost calculation...
    [125] Same-day delivery selected. Adding fee of 500 cents.
    [125] Processing item: Eggs
    [125]   Unit price (cents): 549
    [125]   Quantity: 1
    [125]   Discount multiplier: 1000
    [125]   Discounted item cost (cents): 549
    [125]   Running total cost (cents): 1049
    [125] Processing item: Chicken noodle soup
    [125]   Unit price (cents): 179
    [125]   Quantity: 1
    [125]   Discount multiplier: 1000
    [125]   Discounted item cost (cents): 179
    [125]   Running total cost (cents): 1228
    [125] Total cost set to: 1228 cents
    items being added to order set to pending
    [126] Starting cost calculation...
    [126] Same-day delivery selected. Adding fee of 500 cents.
    [126] Processing item: Banana
    [126]   Unit price (cents): 100
    [126]   Quantity: 8
    [126]   Discount multiplier: 650
    [126]   Discounted item cost (cents): 520
    [126]   Running total cost (cents): 1020
    [126] Total cost set to: 1020 cents
    items being added to order set to pending
    [127] Starting cost calculation...
    [127] Same-day delivery selected. Adding fee of 500 cents.
    [127] Processing item: Grain of rice
    [127]   Unit price (cents): 1
    [127]   Quantity: 1
    [127]   Discount multiplier: 1000
    [127]   Discounted item cost (cents): 1
    [127]   Running total cost (cents): 501
    [127] Total cost set to: 501 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 1        |
        | bananas | Banana              | 8        |
        | smol    | Grain of rice       | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"smol"[0m[32m [0m[32m[1m"without using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe final cost of the order, after considering points, shall be [0m[32m[1m501[0m[32m cents[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_final_cost_of_the_order_after_considering_points_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
    expected 2025-04-06 actual 2025-04-06
      [32mAnd [0m[32mthe order's date placed shall be today[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_date_placed_shall_be_today()[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have [0m[32m[1m502[0m[32m points[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m99[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.15 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.16 STANDARD_OUT

    Scenario Outline: Successfully pay for an order                                   [90m# ProcessGroceryOrder.feature:166[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline | customer  | assignee | state   |
        | eggsoup | NULL       | SameDay  | anakin501 | NULL     | pending |
        | bananas | NULL       | SameDay  | anakin501 | NULL     | pending |
        | smol    | NULL       | SameDay  | anakin501 | NULL     | pending |
    items being added to order set to pending
    [128] Starting cost calculation...
    [128] Same-day delivery selected. Adding fee of 500 cents.
    [128] Processing item: Eggs
    [128]   Unit price (cents): 549
    [128]   Quantity: 1
    [128]   Discount multiplier: 1000
    [128]   Discounted item cost (cents): 549
    [128]   Running total cost (cents): 1049
    [128] Total cost set to: 1049 cents
    items being added to order set to pending
    [128] Starting cost calculation...
    [128] Same-day delivery selected. Adding fee of 500 cents.
    [128] Processing item: Eggs
    [128]   Unit price (cents): 549
    [128]   Quantity: 1
    [128]   Discount multiplier: 1000
    [128]   Discounted item cost (cents): 549
    [128]   Running total cost (cents): 1049
    [128] Processing item: Chicken noodle soup
    [128]   Unit price (cents): 179
    [128]   Quantity: 1
    [128]   Discount multiplier: 1000
    [128]   Discounted item cost (cents): 179
    [128]   Running total cost (cents): 1228
    [128] Total cost set to: 1228 cents
    items being added to order set to pending
    [129] Starting cost calculation...
    [129] Same-day delivery selected. Adding fee of 500 cents.
    [129] Processing item: Banana
    [129]   Unit price (cents): 100
    [129]   Quantity: 8
    [129]   Discount multiplier: 650
    [129]   Discounted item cost (cents): 520
    [129]   Running total cost (cents): 1020
    [129] Total cost set to: 1020 cents
    items being added to order set to pending
    [130] Starting cost calculation...
    [130] Same-day delivery selected. Adding fee of 500 cents.
    [130] Processing item: Grain of rice
    [130]   Unit price (cents): 1
    [130]   Quantity: 1
    [130]   Discount multiplier: 1000
    [130]   Discounted item cost (cents): 1
    [130]   Running total cost (cents): 501
    [130] Total cost set to: 501 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 1        |
        | bananas | Banana              | 8        |
        | smol    | Grain of rice       | 1        |
    [130] Starting cost calculation...
    [130] Same-day delivery selected. Adding fee of 500 cents.
    [130] Processing item: Grain of rice
    [130]   Unit price (cents): 1
    [130]   Quantity: 1
    [130]   Discount multiplier: 1000
    [130]   Discounted item cost (cents): 1
    [130]   Running total cost (cents): 501
    [130] Total cost set to: 0 cents
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"smol"[0m[32m [0m[32m[1m"using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe final cost of the order, after considering points, shall be [0m[32m[1m0[0m[32m cents[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_final_cost_of_the_order_after_considering_points_shall_be_cents(java.lang.Integer)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
    expected 2025-04-06 actual 2025-04-06
      [32mAnd [0m[32mthe order's date placed shall be today[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_date_placed_shall_be_today()[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have [0m[32m[1m1[0m[32m points[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m99[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully pay for an order > Process order - Successfully pay for an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully pay for an order - Examples - Example #1.16 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to insufficient stock > Process order - Unsuccessfully pay for order due to insufficient stock - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to insufficient stock - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Unsuccessfully pay for order due to insufficient stock                     [90m# ProcessGroceryOrder.feature:190[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline    | customer  | assignee | state   |
        | eggsoup | NULL       | InThreeDays | obiwan212 | NULL     | pending |
        | bananas | NULL       | SameDay     | obiwan212 | NULL     | pending |
    items being added to order set to pending
    [131] Starting cost calculation...
    [131] Processing item: Eggs
    [131]   Unit price (cents): 549
    [131]   Quantity: 1
    [131]   Discount multiplier: 1000
    [131]   Discounted item cost (cents): 549
    [131]   Running total cost (cents): 549
    [131] Total cost set to: 549 cents
    items being added to order set to pending
    [131] Starting cost calculation...
    [131] Processing item: Eggs
    [131]   Unit price (cents): 549
    [131]   Quantity: 1
    [131]   Discount multiplier: 1000
    [131]   Discounted item cost (cents): 549
    [131]   Running total cost (cents): 549
    [131] Processing item: Chicken noodle soup
    [131]   Unit price (cents): 179
    [131]   Quantity: 5
    [131]   Discount multiplier: 800
    [131]   Discounted item cost (cents): 716
    [131]   Running total cost (cents): 1265
    [131] Total cost set to: 1265 cents
    items being added to order set to pending
    [132] Starting cost calculation...
    [132] Same-day delivery selected. Adding fee of 500 cents.
    [132] Processing item: Banana
    [132]   Unit price (cents): 100
    [132]   Quantity: 9
    [132]   Discount multiplier: 600
    [132]   Discounted item cost (cents): 540
    [132]   Running total cost (cents): 1040
    [132] Total cost set to: 1040 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 5        |
        | bananas | Banana              | 9        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"eggsoup"[0m[32m [0m[32m[1m"using"[0m[32m their points[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"insufficient stock of item \"Chicken noodle soup\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m212[0m[32m points[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to insufficient stock > Process order - Unsuccessfully pay for order due to insufficient stock - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to insufficient stock - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to insufficient stock > Process order - Unsuccessfully pay for order due to insufficient stock - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to insufficient stock - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Unsuccessfully pay for order due to insufficient stock                     [90m# ProcessGroceryOrder.feature:191[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline    | customer  | assignee | state   |
        | eggsoup | NULL       | InThreeDays | obiwan212 | NULL     | pending |
        | bananas | NULL       | SameDay     | obiwan212 | NULL     | pending |
    items being added to order set to pending
    [133] Starting cost calculation...
    [133] Processing item: Eggs
    [133]   Unit price (cents): 549
    [133]   Quantity: 1
    [133]   Discount multiplier: 1000
    [133]   Discounted item cost (cents): 549
    [133]   Running total cost (cents): 549
    [133] Total cost set to: 549 cents
    items being added to order set to pending
    [133] Starting cost calculation...
    [133] Processing item: Eggs
    [133]   Unit price (cents): 549
    [133]   Quantity: 1
    [133]   Discount multiplier: 1000
    [133]   Discounted item cost (cents): 549
    [133]   Running total cost (cents): 549
    [133] Processing item: Chicken noodle soup
    [133]   Unit price (cents): 179
    [133]   Quantity: 5
    [133]   Discount multiplier: 800
    [133]   Discounted item cost (cents): 716
    [133]   Running total cost (cents): 1265
    [133] Total cost set to: 1265 cents
    items being added to order set to pending
    [134] Starting cost calculation...
    [134] Same-day delivery selected. Adding fee of 500 cents.
    [134] Processing item: Banana
    [134]   Unit price (cents): 100
    [134]   Quantity: 9
    [134]   Discount multiplier: 600
    [134]   Discounted item cost (cents): 540
    [134]   Running total cost (cents): 1040
    [134] Total cost set to: 1040 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 5        |
        | bananas | Banana              | 9        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"eggsoup"[0m[32m [0m[32m[1m"without using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"insufficient stock of item \"Chicken noodle soup\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m212[0m[32m points[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to insufficient stock > Process order - Unsuccessfully pay for order due to insufficient stock - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to insufficient stock - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to insufficient stock > Process order - Unsuccessfully pay for order due to insufficient stock - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to insufficient stock - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Unsuccessfully pay for order due to insufficient stock             [90m# ProcessGroceryOrder.feature:192[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline    | customer  | assignee | state   |
        | eggsoup | NULL       | InThreeDays | obiwan212 | NULL     | pending |
        | bananas | NULL       | SameDay     | obiwan212 | NULL     | pending |
    items being added to order set to pending
    [135] Starting cost calculation...
    [135] Processing item: Eggs
    [135]   Unit price (cents): 549
    [135]   Quantity: 1
    [135]   Discount multiplier: 1000
    [135]   Discounted item cost (cents): 549
    [135]   Running total cost (cents): 549
    [135] Total cost set to: 549 cents
    items being added to order set to pending
    [135] Starting cost calculation...
    [135] Processing item: Eggs
    [135]   Unit price (cents): 549
    [135]   Quantity: 1
    [135]   Discount multiplier: 1000
    [135]   Discounted item cost (cents): 549
    [135]   Running total cost (cents): 549
    [135] Processing item: Chicken noodle soup
    [135]   Unit price (cents): 179
    [135]   Quantity: 5
    [135]   Discount multiplier: 800
    [135]   Discounted item cost (cents): 716
    [135]   Running total cost (cents): 1265
    [135] Total cost set to: 1265 cents
    items being added to order set to pending
    [136] Starting cost calculation...
    [136] Same-day delivery selected. Adding fee of 500 cents.
    [136] Processing item: Banana
    [136]   Unit price (cents): 100
    [136]   Quantity: 9
    [136]   Discount multiplier: 600
    [136]   Discounted item cost (cents): 540
    [136]   Running total cost (cents): 1040
    [136] Total cost set to: 1040 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 5        |
        | bananas | Banana              | 9        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"bananas"[0m[32m [0m[32m[1m"using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"insufficient stock of item \"Banana\""[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m212[0m[32m points[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to insufficient stock > Process order - Unsuccessfully pay for order due to insufficient stock - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to insufficient stock - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to insufficient stock > Process order - Unsuccessfully pay for order due to insufficient stock - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to insufficient stock - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Unsuccessfully pay for order due to insufficient stock                     [90m# ProcessGroceryOrder.feature:193[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id      | datePlaced | deadline    | customer  | assignee | state   |
        | eggsoup | NULL       | InThreeDays | obiwan212 | NULL     | pending |
        | bananas | NULL       | SameDay     | obiwan212 | NULL     | pending |
    items being added to order set to pending
    [137] Starting cost calculation...
    [137] Processing item: Eggs
    [137]   Unit price (cents): 549
    [137]   Quantity: 1
    [137]   Discount multiplier: 1000
    [137]   Discounted item cost (cents): 549
    [137]   Running total cost (cents): 549
    [137] Total cost set to: 549 cents
    items being added to order set to pending
    [137] Starting cost calculation...
    [137] Processing item: Eggs
    [137]   Unit price (cents): 549
    [137]   Quantity: 1
    [137]   Discount multiplier: 1000
    [137]   Discounted item cost (cents): 549
    [137]   Running total cost (cents): 549
    [137] Processing item: Chicken noodle soup
    [137]   Unit price (cents): 179
    [137]   Quantity: 5
    [137]   Discount multiplier: 800
    [137]   Discounted item cost (cents): 716
    [137]   Running total cost (cents): 1265
    [137] Total cost set to: 1265 cents
    items being added to order set to pending
    [138] Starting cost calculation...
    [138] Same-day delivery selected. Adding fee of 500 cents.
    [138] Processing item: Banana
    [138]   Unit price (cents): 100
    [138]   Quantity: 9
    [138]   Discount multiplier: 600
    [138]   Discounted item cost (cents): 540
    [138]   Running total cost (cents): 1040
    [138] Total cost set to: 1040 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order   | item                | quantity |
        | eggsoup | Eggs                | 1        |
        | eggsoup | Chicken noodle soup | 5        |
        | bananas | Banana              | 9        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"bananas"[0m[32m [0m[32m[1m"without using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"insufficient stock of item \"Banana\""[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m212[0m[32m points[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to insufficient stock > Process order - Unsuccessfully pay for order due to insufficient stock - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to insufficient stock - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Unsuccessfully pay for order due to wrong state                                [90m# ProcessGroceryOrder.feature:214[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline    | customer | assignee | state              |
        | badstate | NULL       | InThreeDays | alice    | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item | quantity |
        | badstate | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"badstate"[0m[32m [0m[32m[1m"without using"[0m[32m their points[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot pay for an order which has not been checked out"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"under construction"[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Unsuccessfully pay for order due to wrong state                                [90m# ProcessGroceryOrder.feature:215[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline    | customer | assignee | state              |
        | badstate | NULL       | InThreeDays | alice    | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item | quantity |
        | badstate | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"badstate"[0m[32m [0m[32m[1m"using"[0m[32m their points[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot pay for an order which has not been checked out"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"under construction"[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Unsuccessfully pay for order due to wrong state                                 [90m# ProcessGroceryOrder.feature:216[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline    | customer | assignee | state  |
        | badstate | NULL       | InThreeDays | alice    | NULL     | placed |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item | quantity |
        | badstate | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"badstate"[0m[32m [0m[32m[1m"without using"[0m[32m their points[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot pay for an order which has already been paid for"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Unsuccessfully pay for order due to wrong state                                 [90m# ProcessGroceryOrder.feature:217[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline    | customer | assignee | state  |
        | badstate | NULL       | InThreeDays | alice    | NULL     | placed |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item | quantity |
        | badstate | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"badstate"[0m[32m [0m[32m[1m"using"[0m[32m their points[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot pay for an order which has already been paid for"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Unsuccessfully pay for order due to wrong state                                 [90m# ProcessGroceryOrder.feature:218[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline    | customer | assignee | state          |
        | badstate | NULL       | InThreeDays | alice    | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item | quantity |
        | badstate | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"badstate"[0m[32m [0m[32m[1m"without using"[0m[32m their points[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot pay for an order which has already been paid for"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"in preparation"[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"bob"[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.6 STANDARD_OUT

    Scenario Outline: Unsuccessfully pay for order due to wrong state                                 [90m# ProcessGroceryOrder.feature:219[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline    | customer | assignee | state          |
        | badstate | NULL       | InThreeDays | alice    | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item | quantity |
        | badstate | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"badstate"[0m[32m [0m[32m[1m"using"[0m[32m their points[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot pay for an order which has already been paid for"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"in preparation"[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"bob"[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.6 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.7 STANDARD_OUT

    Scenario Outline: Unsuccessfully pay for order due to wrong state                                 [90m# ProcessGroceryOrder.feature:220[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline    | customer | assignee | state              |
        | badstate | NULL       | InThreeDays | alice    | claire   | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item | quantity |
        | badstate | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"badstate"[0m[32m [0m[32m[1m"without using"[0m[32m their points[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot pay for an order which has already been paid for"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"claire"[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.7 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.8 STANDARD_OUT

    Scenario Outline: Unsuccessfully pay for order due to wrong state                                 [90m# ProcessGroceryOrder.feature:221[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline    | customer | assignee | state              |
        | badstate | NULL       | InThreeDays | alice    | claire   | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item | quantity |
        | badstate | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"badstate"[0m[32m [0m[32m[1m"using"[0m[32m their points[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot pay for an order which has already been paid for"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"claire"[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.8 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.9 STANDARD_OUT

    Scenario Outline: Unsuccessfully pay for order due to wrong state                                 [90m# ProcessGroceryOrder.feature:222[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline    | customer | assignee | state     |
        | badstate | NULL       | InThreeDays | alice    | alice    | delivered |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item | quantity |
        | badstate | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"badstate"[0m[32m [0m[32m[1m"without using"[0m[32m their points[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot pay for an order which has already been paid for"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"delivered"[0m                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"alice"[0m                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.9 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.10 STANDARD_OUT

    Scenario Outline: Unsuccessfully pay for order due to wrong state                                 [90m# ProcessGroceryOrder.feature:223[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline    | customer | assignee | state     |
        | badstate | NULL       | InThreeDays | alice    | alice    | delivered |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item | quantity |
        | badstate | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"badstate"[0m[32m [0m[32m[1m"using"[0m[32m their points[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot pay for an order which has already been paid for"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"delivered"[0m                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"alice"[0m                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.10 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.11 STANDARD_OUT

    Scenario Outline: Unsuccessfully pay for order due to wrong state                             [90m# ProcessGroceryOrder.feature:224[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline    | customer | assignee | state     |
        | badstate | NULL       | InThreeDays | alice    | alice    | cancelled |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item | quantity |
        | badstate | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"badstate"[0m[32m [0m[32m[1m"without using"[0m[32m their points[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot pay for an order which has been cancelled"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"cancelled"[0m                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"alice"[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.11 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.12 STANDARD_OUT

    Scenario Outline: Unsuccessfully pay for order due to wrong state                          [90m# ProcessGroceryOrder.feature:225[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id       | datePlaced | deadline    | customer | assignee | state     |
        | badstate | NULL       | InThreeDays | alice    | alice    | cancelled |
      [32mAnd [0m[32mthe following items are part of orders[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order    | item | quantity |
        | badstate | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to pay for the order with ID [0m[32m[1m"badstate"[0m[32m [0m[32m[1m"using"[0m[32m their points[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_pay_for_the_order_with_id_without_using_their_points(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot pay for an order which has been cancelled"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"cancelled"[0m                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"alice"[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully pay for order due to wrong state > Process order - Unsuccessfully pay for order due to wrong state - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully pay for order due to wrong state - Examples - Example #1.12 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully assign order to employee > Process order - Successfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully assign order to employee - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully assign order to employee                         [90m# ProcessGroceryOrder.feature:243[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id         | datePlaced | deadline    | customer  | assignee | state          |
        | unassigned | today      | InThreeDays | alice     | NULL     | placed         |
        | assigned   | yesterday  | InTwoDays   | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order      | item                | quantity |
        | unassigned | Eggs                | 1        |
        | assigned   | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe manager attempts to assign the order with ID [0m[32m[1m"unassigned"[0m[32m to [0m[32m[1m"alice"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_assign_the_order_with_id_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"in preparation"[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"alice"[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully assign order to employee > Process order - Successfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully assign order to employee - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully assign order to employee > Process order - Successfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully assign order to employee - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully assign order to employee                       [90m# ProcessGroceryOrder.feature:244[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id         | datePlaced | deadline    | customer  | assignee | state          |
        | unassigned | today      | InThreeDays | alice     | NULL     | placed         |
        | assigned   | yesterday  | InTwoDays   | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order      | item                | quantity |
        | unassigned | Eggs                | 1        |
        | assigned   | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe manager attempts to assign the order with ID [0m[32m[1m"unassigned"[0m[32m to [0m[32m[1m"bob"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_assign_the_order_with_id_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"in preparation"[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"bob"[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully assign order to employee > Process order - Successfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully assign order to employee - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully assign order to employee > Process order - Successfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully assign order to employee - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully assign order to employee                          [90m# ProcessGroceryOrder.feature:245[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id         | datePlaced | deadline    | customer  | assignee | state          |
        | unassigned | today      | InThreeDays | alice     | NULL     | placed         |
        | assigned   | yesterday  | InTwoDays   | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order      | item                | quantity |
        | unassigned | Eggs                | 1        |
        | assigned   | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe manager attempts to assign the order with ID [0m[32m[1m"unassigned"[0m[32m to [0m[32m[1m"claire"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_assign_the_order_with_id_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"in preparation"[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"claire"[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully assign order to employee > Process order - Successfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully assign order to employee - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully assign order to employee > Process order - Successfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully assign order to employee - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Successfully assign order to employee                       [90m# ProcessGroceryOrder.feature:247[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id         | datePlaced | deadline    | customer  | assignee | state          |
        | unassigned | today      | InThreeDays | alice     | NULL     | placed         |
        | assigned   | yesterday  | InTwoDays   | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order      | item                | quantity |
        | unassigned | Eggs                | 1        |
        | assigned   | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe manager attempts to assign the order with ID [0m[32m[1m"assigned"[0m[32m to [0m[32m[1m"alice"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_assign_the_order_with_id_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"in preparation"[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"alice"[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully assign order to employee > Process order - Successfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully assign order to employee - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully assign order to employee > Process order - Successfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully assign order to employee - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Successfully assign order to employee                        [90m# ProcessGroceryOrder.feature:248[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id         | datePlaced | deadline    | customer  | assignee | state          |
        | unassigned | today      | InThreeDays | alice     | NULL     | placed         |
        | assigned   | yesterday  | InTwoDays   | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order      | item                | quantity |
        | unassigned | Eggs                | 1        |
        | assigned   | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe manager attempts to assign the order with ID [0m[32m[1m"assigned"[0m[32m to [0m[32m[1m"claire"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_assign_the_order_with_id_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"in preparation"[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"claire"[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully assign order to employee > Process order - Successfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully assign order to employee - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Unsuccessfully assign order to employee                                          [90m# ProcessGroceryOrder.feature:264[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer | assignee | state              |
        | m  | today      | InThreeDays | alice    | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | m     | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to assign the order with ID [0m[32m[1m"m"[0m[32m to [0m[32m[1m"alice"[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_assign_the_order_with_id_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot assign employee to order that has not been placed"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"under construction"[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Unsuccessfully assign order to employee                                          [90m# ProcessGroceryOrder.feature:265[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer | assignee | state              |
        | m  | today      | InThreeDays | alice    | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | m     | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to assign the order with ID [0m[32m[1m"m"[0m[32m to [0m[32m[1m"bob"[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_assign_the_order_with_id_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot assign employee to order that has not been placed"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"under construction"[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Unsuccessfully assign order to employee                                          [90m# ProcessGroceryOrder.feature:266[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer | assignee | state   |
        | m  | today      | InThreeDays | alice    | NULL     | pending |
    items being added to order set to pending
    [163] Starting cost calculation...
    [163] Processing item: Eggs
    [163]   Unit price (cents): 549
    [163]   Quantity: 1
    [163]   Discount multiplier: 1000
    [163]   Discounted item cost (cents): 549
    [163]   Running total cost (cents): 549
    [163] Total cost set to: 549 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | m     | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to assign the order with ID [0m[32m[1m"m"[0m[32m to [0m[32m[1m"claire"[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_assign_the_order_with_id_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot assign employee to order that has not been placed"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Unsuccessfully assign order to employee                                                   [90m# ProcessGroceryOrder.feature:267[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer | assignee | state              |
        | m  | today      | InThreeDays | alice    | claire   | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | m     | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to assign the order with ID [0m[32m[1m"m"[0m[32m to [0m[32m[1m"alice"[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_assign_the_order_with_id_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot assign employee to an order that has already been prepared"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"claire"[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Unsuccessfully assign order to employee                                                   [90m# ProcessGroceryOrder.feature:268[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer | assignee | state     |
        | m  | today      | InThreeDays | alice    | alice    | delivered |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | m     | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to assign the order with ID [0m[32m[1m"m"[0m[32m to [0m[32m[1m"bob"[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_assign_the_order_with_id_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot assign employee to an order that has already been prepared"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"delivered"[0m                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"alice"[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.6 STANDARD_OUT

    Scenario Outline: Unsuccessfully assign order to employee                                            [90m# ProcessGroceryOrder.feature:269[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer | assignee | state     |
        | m  | today      | InThreeDays | alice    | bob      | cancelled |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | m     | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to assign the order with ID [0m[32m[1m"m"[0m[32m to [0m[32m[1m"claire"[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_assign_the_order_with_id_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot assign employee to an order that has been cancelled"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"cancelled"[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"bob"[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.6 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.7 STANDARD_OUT

    Scenario Outline: Unsuccessfully assign order to employee                                [90m# ProcessGroceryOrder.feature:270[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer | assignee | state  |
        | m  | today      | InThreeDays | alice    | NULL     | placed |
      [32mAnd [0m[32mthe following items are part of orders[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | m     | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to assign the order with ID [0m[32m[1m"m"[0m[32m to [0m[32m[1m"nonexistent"[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_assign_the_order_with_id_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no user with username \"nonexistent\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.7 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.8 STANDARD_OUT

    Scenario Outline: Unsuccessfully assign order to employee                          [90m# ProcessGroceryOrder.feature:271[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer | assignee | state  |
        | m  | today      | InThreeDays | alice    | NULL     | placed |
      [32mAnd [0m[32mthe following items are part of orders[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | m     | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to assign the order with ID [0m[32m[1m"m"[0m[32m to [0m[32m[1m"ghost"[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_assign_the_order_with_id_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no user with username \"ghost\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.8 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.9 STANDARD_OUT

    Scenario Outline: Unsuccessfully assign order to employee                  [90m# ProcessGroceryOrder.feature:272[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer | assignee | state  |
        | m  | today      | InThreeDays | alice    | NULL     | placed |
      [32mAnd [0m[32mthe following items are part of orders[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | m     | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to assign the order with ID [0m[32m[1m"m"[0m[32m to [0m[32m[1m"obiwan212"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_assign_the_order_with_id_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"\"obiwan212\" is not an employee"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.9 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.10 STANDARD_OUT

    Scenario Outline: Unsuccessfully assign order to employee                  [90m# ProcessGroceryOrder.feature:273[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer | assignee | state  |
        | m  | today      | InThreeDays | alice    | NULL     | placed |
      [32mAnd [0m[32mthe following items are part of orders[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | m     | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to assign the order with ID [0m[32m[1m"m"[0m[32m to [0m[32m[1m"anakin501"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_assign_the_order_with_id_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"\"anakin501\" is not an employee"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe order's assignee shall be [0m[32m[1m"NULL"[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_s_assignee_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully assign order to employee > Process order - Unsuccessfully assign order to employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully assign order to employee - Examples - Example #1.10 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully finish order assembly                                                  [90m# ProcessGroceryOrder.feature:298[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id                 | datePlaced | deadline | customer  | assignee | state          |
        | with_perishable    | yesterday  | InOneDay | obiwan212 | alice    | in preparation |
        | without_perishable | yesterday  | InOneDay | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order              | item                | quantity |
        | with_perishable    | Chicken noodle soup | 1        |
        | with_perishable    | Eggs                | 1        |
        | without_perishable | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"with_perishable"[0m[32m is finished[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully finish order assembly                                                  [90m# ProcessGroceryOrder.feature:299[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id                 | datePlaced | deadline | customer  | assignee | state          |
        | with_perishable    | today      | SameDay  | obiwan212 | alice    | in preparation |
        | without_perishable | today      | SameDay  | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order              | item                | quantity |
        | with_perishable    | Chicken noodle soup | 1        |
        | with_perishable    | Eggs                | 1        |
        | without_perishable | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"with_perishable"[0m[32m is finished[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully finish order assembly                                                     [90m# ProcessGroceryOrder.feature:300[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id                 | datePlaced | deadline | customer  | assignee | state          |
        | with_perishable    | yesterday  | InOneDay | obiwan212 | alice    | in preparation |
        | without_perishable | yesterday  | InOneDay | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order              | item                | quantity |
        | with_perishable    | Chicken noodle soup | 1        |
        | with_perishable    | Eggs                | 1        |
        | without_perishable | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"without_perishable"[0m[32m is finished[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Successfully finish order assembly                                                     [90m# ProcessGroceryOrder.feature:301[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id                 | datePlaced | deadline | customer  | assignee | state          |
        | with_perishable    | today      | SameDay  | obiwan212 | alice    | in preparation |
        | without_perishable | today      | SameDay  | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order              | item                | quantity |
        | with_perishable    | Chicken noodle soup | 1        |
        | with_perishable    | Eggs                | 1        |
        | without_perishable | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"without_perishable"[0m[32m is finished[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Successfully finish order assembly                                                     [90m# ProcessGroceryOrder.feature:303[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id                 | datePlaced | deadline  | customer  | assignee | state          |
        | with_perishable    | yesterday  | InTwoDays | obiwan212 | alice    | in preparation |
        | without_perishable | yesterday  | InTwoDays | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order              | item                | quantity |
        | with_perishable    | Chicken noodle soup | 1        |
        | with_perishable    | Eggs                | 1        |
        | without_perishable | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"without_perishable"[0m[32m is finished[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.6 STANDARD_OUT

    Scenario Outline: Successfully finish order assembly                                                     [90m# ProcessGroceryOrder.feature:304[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id                 | datePlaced | deadline    | customer  | assignee | state          |
        | with_perishable    | yesterday  | InThreeDays | obiwan212 | alice    | in preparation |
        | without_perishable | yesterday  | InThreeDays | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order              | item                | quantity |
        | with_perishable    | Chicken noodle soup | 1        |
        | with_perishable    | Eggs                | 1        |
        | without_perishable | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"without_perishable"[0m[32m is finished[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.6 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.7 STANDARD_OUT

    Scenario Outline: Successfully finish order assembly                                                     [90m# ProcessGroceryOrder.feature:305[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id                 | datePlaced | deadline | customer  | assignee | state          |
        | with_perishable    | today      | InOneDay | obiwan212 | alice    | in preparation |
        | without_perishable | today      | InOneDay | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order              | item                | quantity |
        | with_perishable    | Chicken noodle soup | 1        |
        | with_perishable    | Eggs                | 1        |
        | without_perishable | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"without_perishable"[0m[32m is finished[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.7 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.8 STANDARD_OUT

    Scenario Outline: Successfully finish order assembly                                                     [90m# ProcessGroceryOrder.feature:306[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id                 | datePlaced | deadline  | customer  | assignee | state          |
        | with_perishable    | today      | InTwoDays | obiwan212 | alice    | in preparation |
        | without_perishable | today      | InTwoDays | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order              | item                | quantity |
        | with_perishable    | Chicken noodle soup | 1        |
        | with_perishable    | Eggs                | 1        |
        | without_perishable | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"without_perishable"[0m[32m is finished[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.8 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.9 STANDARD_OUT

    Scenario Outline: Successfully finish order assembly                                                     [90m# ProcessGroceryOrder.feature:307[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id                 | datePlaced | deadline    | customer  | assignee | state          |
        | with_perishable    | today      | InThreeDays | obiwan212 | alice    | in preparation |
        | without_perishable | today      | InThreeDays | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order              | item                | quantity |
        | with_perishable    | Chicken noodle soup | 1        |
        | with_perishable    | Eggs                | 1        |
        | without_perishable | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"without_perishable"[0m[32m is finished[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.9 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.10 STANDARD_OUT

    Scenario Outline: Successfully finish order assembly                                                  [90m# ProcessGroceryOrder.feature:309[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id                 | datePlaced | deadline | customer  | assignee | state          |
        | with_perishable    | yesterday  | SameDay  | obiwan212 | alice    | in preparation |
        | without_perishable | yesterday  | SameDay  | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order              | item                | quantity |
        | with_perishable    | Chicken noodle soup | 1        |
        | with_perishable    | Eggs                | 1        |
        | without_perishable | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"with_perishable"[0m[32m is finished[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.10 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.11 STANDARD_OUT

    Scenario Outline: Successfully finish order assembly                                                     [90m# ProcessGroceryOrder.feature:310[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id                 | datePlaced | deadline | customer  | assignee | state          |
        | with_perishable    | yesterday  | SameDay  | obiwan212 | alice    | in preparation |
        | without_perishable | yesterday  | SameDay  | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order              | item                | quantity |
        | with_perishable    | Chicken noodle soup | 1        |
        | with_perishable    | Eggs                | 1        |
        | without_perishable | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"without_perishable"[0m[32m is finished[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully finish order assembly > Process order - Successfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully finish order assembly - Examples - Example #1.11 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Try to assemble perishable order before deadline > Process order - Try to assemble perishable order before deadline - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to assemble perishable order before deadline - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to assemble perishable order before deadline                                                    [90m# ProcessGroceryOrder.feature:326[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id         | datePlaced | deadline  | customer  | assignee | state          |
        | perishable | yesterday  | InTwoDays | obiwan212 | alice    | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order      | item                | quantity |
        | perishable | Chicken noodle soup | 2        |
        | perishable | Eggs                | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"perishable"[0m[32m is finished[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot finish assembling an order with perishable items before the deadline"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"in preparation"[0m                                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Try to assemble perishable order before deadline > Process order - Try to assemble perishable order before deadline - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to assemble perishable order before deadline - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Try to assemble perishable order before deadline > Process order - Try to assemble perishable order before deadline - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to assemble perishable order before deadline - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to assemble perishable order before deadline                                                    [90m# ProcessGroceryOrder.feature:327[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id         | datePlaced | deadline    | customer  | assignee | state          |
        | perishable | yesterday  | InThreeDays | obiwan212 | alice    | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order      | item                | quantity |
        | perishable | Chicken noodle soup | 2        |
        | perishable | Eggs                | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"perishable"[0m[32m is finished[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot finish assembling an order with perishable items before the deadline"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"in preparation"[0m                                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Try to assemble perishable order before deadline > Process order - Try to assemble perishable order before deadline - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to assemble perishable order before deadline - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Try to assemble perishable order before deadline > Process order - Try to assemble perishable order before deadline - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to assemble perishable order before deadline - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Try to assemble perishable order before deadline                                                    [90m# ProcessGroceryOrder.feature:328[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id         | datePlaced | deadline | customer  | assignee | state          |
        | perishable | today      | InOneDay | obiwan212 | alice    | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order      | item                | quantity |
        | perishable | Chicken noodle soup | 2        |
        | perishable | Eggs                | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"perishable"[0m[32m is finished[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot finish assembling an order with perishable items before the deadline"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"in preparation"[0m                                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Try to assemble perishable order before deadline > Process order - Try to assemble perishable order before deadline - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to assemble perishable order before deadline - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Try to assemble perishable order before deadline > Process order - Try to assemble perishable order before deadline - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to assemble perishable order before deadline - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Try to assemble perishable order before deadline                                                    [90m# ProcessGroceryOrder.feature:329[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id         | datePlaced | deadline  | customer  | assignee | state          |
        | perishable | today      | InTwoDays | obiwan212 | alice    | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order      | item                | quantity |
        | perishable | Chicken noodle soup | 2        |
        | perishable | Eggs                | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"perishable"[0m[32m is finished[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot finish assembling an order with perishable items before the deadline"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"in preparation"[0m                                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Try to assemble perishable order before deadline > Process order - Try to assemble perishable order before deadline - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to assemble perishable order before deadline - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Try to assemble perishable order before deadline > Process order - Try to assemble perishable order before deadline - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to assemble perishable order before deadline - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Try to assemble perishable order before deadline                                                    [90m# ProcessGroceryOrder.feature:330[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id         | datePlaced | deadline    | customer  | assignee | state          |
        | perishable | today      | InThreeDays | obiwan212 | alice    | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order      | item                | quantity |
        | perishable | Chicken noodle soup | 2        |
        | perishable | Eggs                | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"perishable"[0m[32m is finished[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot finish assembling an order with perishable items before the deadline"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"in preparation"[0m                                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Try to assemble perishable order before deadline > Process order - Try to assemble perishable order before deadline - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Try to assemble perishable order before deadline - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully finish order assembly > Process order - Unsuccessfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully finish order assembly - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Unsuccessfully finish order assembly                                                                   [90m# ProcessGroceryOrder.feature:345[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer | assignee | state              |
        | bad_state | yesterday  | InOneDay | alice    | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item                | quantity |
        | bad_state | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"bad_state"[0m[32m is finished[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot finish assembling order because it has not been assigned to an employee"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"under construction"[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully finish order assembly > Process order - Unsuccessfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully finish order assembly - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully finish order assembly > Process order - Unsuccessfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully finish order assembly - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Unsuccessfully finish order assembly                                                                   [90m# ProcessGroceryOrder.feature:346[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer | assignee | state   |
        | bad_state | yesterday  | InOneDay | alice    | NULL     | pending |
    items being added to order set to pending
    [199] Starting cost calculation...
    [199] Processing item: Chicken noodle soup
    [199]   Unit price (cents): 179
    [199]   Quantity: 1
    [199]   Discount multiplier: 1000
    [199]   Discounted item cost (cents): 179
    [199]   Running total cost (cents): 179
    [199] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item                | quantity |
        | bad_state | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"bad_state"[0m[32m is finished[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot finish assembling order because it has not been assigned to an employee"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                                                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully finish order assembly > Process order - Unsuccessfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully finish order assembly - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully finish order assembly > Process order - Unsuccessfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully finish order assembly - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Unsuccessfully finish order assembly                                                                   [90m# ProcessGroceryOrder.feature:347[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer | assignee | state  |
        | bad_state | yesterday  | InOneDay | alice    | NULL     | placed |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item                | quantity |
        | bad_state | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"bad_state"[0m[32m is finished[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot finish assembling order because it has not been assigned to an employee"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully finish order assembly > Process order - Unsuccessfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully finish order assembly - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully finish order assembly > Process order - Unsuccessfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully finish order assembly - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Unsuccessfully finish order assembly                                                   [90m# ProcessGroceryOrder.feature:348[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer | assignee | state              |
        | bad_state | yesterday  | InOneDay | alice    | bob      | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item                | quantity |
        | bad_state | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"bad_state"[0m[32m is finished[0m          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot finish assembling order that has already been assembled"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully finish order assembly > Process order - Unsuccessfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully finish order assembly - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully finish order assembly > Process order - Unsuccessfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully finish order assembly - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Unsuccessfully finish order assembly                                                   [90m# ProcessGroceryOrder.feature:349[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer | assignee | state     |
        | bad_state | yesterday  | InOneDay | alice    | bob      | delivered |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item                | quantity |
        | bad_state | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"bad_state"[0m[32m is finished[0m          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot finish assembling order that has already been assembled"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"delivered"[0m                                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully finish order assembly > Process order - Unsuccessfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully finish order assembly - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully finish order assembly > Process order - Unsuccessfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully finish order assembly - Examples - Example #1.6 STANDARD_OUT

    Scenario Outline: Unsuccessfully finish order assembly                                            [90m# ProcessGroceryOrder.feature:350[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer | assignee | state     |
        | bad_state | yesterday  | InOneDay | alice    | bob      | cancelled |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item                | quantity |
        | bad_state | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to indicate that assembly of the order with ID [0m[32m[1m"bad_state"[0m[32m is finished[0m   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_indicate_that_assembly_of_the_order_with_id_is_finished(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot finish assembling order because it was cancelled"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"cancelled"[0m                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully finish order assembly > Process order - Unsuccessfully finish order assembly - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully finish order assembly - Examples - Example #1.6 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully cancel order > Process order - Successfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully cancel order - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully cancel order                 [90m# ProcessGroceryOrder.feature:378[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id   | datePlaced | deadline | customer  | assignee | state  |
        | all  | yesterday  | InOneDay | obiwan212 | NULL     | placed |
        | some | today      | SameDay  | obiwan212 | NULL     | placed |
      [32mAnd [0m[32mthe following items are part of orders[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | all   | Eggs                | 1        |
        | all   | Chicken noodle soup | 2        |
        | all   | Banana              | 3        |
        | all   | Grain of rice       | 4        |
        | some  | Chicken noodle soup | 10       |
        | some  | Banana              | 9        |
      [32mWhen [0m[32mthe user attempts to cancel the order with ID [0m[32m[1m"all"[0m  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_cancel_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"cancelled"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m21[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m4[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m11[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m104[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32m[0m[32m[1m"obiwan212"[0m[32m shall have [0m[32m[1m212[0m[32m points[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully cancel order > Process order - Successfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully cancel order - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully cancel order > Process order - Successfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully cancel order - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully cancel order                 [90m# ProcessGroceryOrder.feature:379[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id   | datePlaced | deadline | customer | assignee | state  |
        | all  | yesterday  | InOneDay | alice    | NULL     | placed |
        | some | today      | SameDay  | alice    | NULL     | placed |
      [32mAnd [0m[32mthe following items are part of orders[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | all   | Eggs                | 1        |
        | all   | Chicken noodle soup | 2        |
        | all   | Banana              | 3        |
        | all   | Grain of rice       | 4        |
        | some  | Chicken noodle soup | 10       |
        | some  | Banana              | 9        |
      [32mWhen [0m[32mthe user attempts to cancel the order with ID [0m[32m[1m"all"[0m  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_cancel_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"cancelled"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m21[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m4[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m11[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m104[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully cancel order > Process order - Successfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully cancel order - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully cancel order > Process order - Successfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully cancel order - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully cancel order                  [90m# ProcessGroceryOrder.feature:380[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id   | datePlaced | deadline | customer  | assignee | state  |
        | all  | yesterday  | InOneDay | obiwan212 | NULL     | placed |
        | some | today      | SameDay  | obiwan212 | NULL     | placed |
      [32mAnd [0m[32mthe following items are part of orders[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | all   | Eggs                | 1        |
        | all   | Chicken noodle soup | 2        |
        | all   | Banana              | 3        |
        | all   | Grain of rice       | 4        |
        | some  | Chicken noodle soup | 10       |
        | some  | Banana              | 9        |
      [32mWhen [0m[32mthe user attempts to cancel the order with ID [0m[32m[1m"some"[0m  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_cancel_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"cancelled"[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m12[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m17[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32m[0m[32m[1m"obiwan212"[0m[32m shall have [0m[32m[1m212[0m[32m points[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully cancel order > Process order - Successfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully cancel order - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully cancel order > Process order - Successfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully cancel order - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Successfully cancel order                 [90m# ProcessGroceryOrder.feature:382[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id   | datePlaced | deadline | customer  | assignee | state              |
        | all  | yesterday  | InOneDay | obiwan212 | NULL     | under construction |
        | some | today      | SameDay  | obiwan212 | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | all   | Eggs                | 1        |
        | all   | Chicken noodle soup | 2        |
        | all   | Banana              | 3        |
        | all   | Grain of rice       | 4        |
        | some  | Chicken noodle soup | 10       |
        | some  | Banana              | 9        |
      [32mWhen [0m[32mthe user attempts to cancel the order with ID [0m[32m[1m"all"[0m  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_cancel_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"cancelled"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32m[0m[32m[1m"obiwan212"[0m[32m shall have [0m[32m[1m212[0m[32m points[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully cancel order > Process order - Successfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully cancel order - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully cancel order > Process order - Successfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully cancel order - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Successfully cancel order                 [90m# ProcessGroceryOrder.feature:383[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id   | datePlaced | deadline | customer | assignee | state   |
        | all  | yesterday  | InOneDay | alice    | NULL     | pending |
        | some | today      | SameDay  | alice    | NULL     | pending |
    items being added to order set to pending
    [212] Starting cost calculation...
    [212] Processing item: Eggs
    [212]   Unit price (cents): 549
    [212]   Quantity: 1
    [212]   Discount multiplier: 1000
    [212]   Discounted item cost (cents): 549
    [212]   Running total cost (cents): 549
    [212] Total cost set to: 549 cents
    items being added to order set to pending
    [212] Starting cost calculation...
    [212] Processing item: Eggs
    [212]   Unit price (cents): 549
    [212]   Quantity: 1
    [212]   Discount multiplier: 1000
    [212]   Discounted item cost (cents): 549
    [212]   Running total cost (cents): 549
    [212] Processing item: Chicken noodle soup
    [212]   Unit price (cents): 179
    [212]   Quantity: 2
    [212]   Discount multiplier: 950
    [212]   Discounted item cost (cents): 340
    [212]   Running total cost (cents): 889
    [212] Total cost set to: 889 cents
    items being added to order set to pending
    [212] Starting cost calculation...
    [212] Processing item: Eggs
    [212]   Unit price (cents): 549
    [212]   Quantity: 1
    [212]   Discount multiplier: 1000
    [212]   Discounted item cost (cents): 549
    [212]   Running total cost (cents): 549
    [212] Processing item: Chicken noodle soup
    [212]   Unit price (cents): 179
    [212]   Quantity: 2
    [212]   Discount multiplier: 950
    [212]   Discounted item cost (cents): 340
    [212]   Running total cost (cents): 889
    [212] Processing item: Banana
    [212]   Unit price (cents): 100
    [212]   Quantity: 3
    [212]   Discount multiplier: 900
    [212]   Discounted item cost (cents): 270
    [212]   Running total cost (cents): 1159
    [212] Total cost set to: 1159 cents
    items being added to order set to pending
    [212] Starting cost calculation...
    [212] Processing item: Eggs
    [212]   Unit price (cents): 549
    [212]   Quantity: 1
    [212]   Discount multiplier: 1000
    [212]   Discounted item cost (cents): 549
    [212]   Running total cost (cents): 549
    [212] Processing item: Chicken noodle soup
    [212]   Unit price (cents): 179
    [212]   Quantity: 2
    [212]   Discount multiplier: 950
    [212]   Discounted item cost (cents): 340
    [212]   Running total cost (cents): 889
    [212] Processing item: Banana
    [212]   Unit price (cents): 100
    [212]   Quantity: 3
    [212]   Discount multiplier: 900
    [212]   Discounted item cost (cents): 270
    [212]   Running total cost (cents): 1159
    [212] Processing item: Grain of rice
    [212]   Unit price (cents): 1
    [212]   Quantity: 4
    [212]   Discount multiplier: 850
    [212]   Discounted item cost (cents): 3
    [212]   Running total cost (cents): 1162
    [212] Total cost set to: 1162 cents
    items being added to order set to pending
    [213] Starting cost calculation...
    [213] Same-day delivery selected. Adding fee of 500 cents.
    [213] Processing item: Chicken noodle soup
    [213]   Unit price (cents): 179
    [213]   Quantity: 10
    [213]   Discount multiplier: 550
    [213]   Discounted item cost (cents): 984
    [213]   Running total cost (cents): 1484
    [213] Total cost set to: 1484 cents
    items being added to order set to pending
    [213] Starting cost calculation...
    [213] Same-day delivery selected. Adding fee of 500 cents.
    [213] Processing item: Chicken noodle soup
    [213]   Unit price (cents): 179
    [213]   Quantity: 10
    [213]   Discount multiplier: 550
    [213]   Discounted item cost (cents): 984
    [213]   Running total cost (cents): 1484
    [213] Processing item: Banana
    [213]   Unit price (cents): 100
    [213]   Quantity: 9
    [213]   Discount multiplier: 600
    [213]   Discounted item cost (cents): 540
    [213]   Running total cost (cents): 2024
    [213] Total cost set to: 2024 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | all   | Eggs                | 1        |
        | all   | Chicken noodle soup | 2        |
        | all   | Banana              | 3        |
        | all   | Grain of rice       | 4        |
        | some  | Chicken noodle soup | 10       |
        | some  | Banana              | 9        |
      [32mWhen [0m[32mthe user attempts to cancel the order with ID [0m[32m[1m"some"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_cancel_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"cancelled"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32m[0m[32m[1m"alice"[0m[32m shall have [0m[32m[1m2[0m[32m points[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully cancel order > Process order - Successfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully cancel order - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully cancel order > Process order - Unsuccessfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully cancel order - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Unsuccessfully cancel order                                                                  [90m# ProcessGroceryOrder.feature:403[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer  | assignee | state          |
        | bad_state | yesterday  | InOneDay | anakin501 | alice    | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | bad_state | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to cancel the order with ID [0m[32m[1m"bad_state"[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_cancel_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot cancel an order that has already been assigned to an employee"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"in preparation"[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have [0m[32m[1m501[0m[32m points[0m                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully cancel order > Process order - Unsuccessfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully cancel order - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully cancel order > Process order - Unsuccessfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully cancel order - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Unsuccessfully cancel order                                                                  [90m# ProcessGroceryOrder.feature:404[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer  | assignee | state              |
        | bad_state | yesterday  | InOneDay | anakin501 | bob      | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | bad_state | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to cancel the order with ID [0m[32m[1m"bad_state"[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_cancel_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot cancel an order that has already been assigned to an employee"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have [0m[32m[1m501[0m[32m points[0m                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully cancel order > Process order - Unsuccessfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully cancel order - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully cancel order > Process order - Unsuccessfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully cancel order - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Unsuccessfully cancel order                                                                  [90m# ProcessGroceryOrder.feature:405[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer  | assignee | state     |
        | bad_state | yesterday  | InOneDay | anakin501 | claire   | delivered |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | bad_state | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to cancel the order with ID [0m[32m[1m"bad_state"[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_cancel_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot cancel an order that has already been assigned to an employee"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"delivered"[0m                                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have [0m[32m[1m501[0m[32m points[0m                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully cancel order > Process order - Unsuccessfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully cancel order - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully cancel order > Process order - Unsuccessfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully cancel order - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Unsuccessfully cancel order                         [90m# ProcessGroceryOrder.feature:406[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer  | assignee | state     |
        | bad_state | yesterday  | InOneDay | anakin501 | NULL     | cancelled |
      [32mAnd [0m[32mthe following items are part of orders[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | bad_state | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to cancel the order with ID [0m[32m[1m"bad_state"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_cancel_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"order was already cancelled"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"cancelled"[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have [0m[32m[1m501[0m[32m points[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully cancel order > Process order - Unsuccessfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully cancel order - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully cancel order > Process order - Unsuccessfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully cancel order - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Unsuccessfully cancel order                         [90m# ProcessGroceryOrder.feature:407[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer  | assignee | state     |
        | bad_state | yesterday  | InOneDay | anakin501 | alice    | cancelled |
      [32mAnd [0m[32mthe following items are part of orders[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | bad_state | Eggs | 1        |
      [32mWhen [0m[32mthe user attempts to cancel the order with ID [0m[32m[1m"bad_state"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_user_attempts_to_cancel_the_order_with_id(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"order was already cancelled"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"cancelled"[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Eggs"[0m[32m shall be [0m[32m[1m20[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m shall be [0m[32m[1m2[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Banana"[0m[32m shall be [0m[32m[1m8[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32mthe quantity of item [0m[32m[1m"Grain of rice"[0m[32m shall be [0m[32m[1m100[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_quantity_of_item_shall_be(java.lang.String,java.lang.Integer)[0m
      [32mAnd [0m[32m[0m[32m[1m"anakin501"[0m[32m shall have [0m[32m[1m501[0m[32m points[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.shall_have_points(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully cancel order > Process order - Unsuccessfully cancel order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully cancel order - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully deliver order > Process order - Successfully deliver order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully deliver order - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully deliver order                               [90m# ProcessGroceryOrder.feature:424[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id    | datePlaced | deadline | customer  | assignee | state              |
        | ready | today      | SameDay  | obiwan212 | claire   | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"ready"[0m[32m as delivered[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"delivered"[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully deliver order > Process order - Successfully deliver order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully deliver order - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully deliver order > Process order - Successfully deliver order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully deliver order - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully deliver order                               [90m# ProcessGroceryOrder.feature:425[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id    | datePlaced | deadline | customer  | assignee | state              |
        | ready | yesterday  | InOneDay | obiwan212 | claire   | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"ready"[0m[32m as delivered[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"delivered"[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully deliver order > Process order - Successfully deliver order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully deliver order - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully deliver order > Process order - Successfully deliver order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully deliver order - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully deliver order                               [90m# ProcessGroceryOrder.feature:426[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id    | datePlaced   | deadline  | customer  | assignee | state              |
        | ready | two days ago | InTwoDays | obiwan212 | claire   | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"ready"[0m[32m as delivered[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"delivered"[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully deliver order > Process order - Successfully deliver order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully deliver order - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully deliver order > Process order - Successfully deliver order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully deliver order - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Successfully deliver order                               [90m# ProcessGroceryOrder.feature:427[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id    | datePlaced     | deadline    | customer  | assignee | state              |
        | ready | three days ago | InThreeDays | obiwan212 | claire   | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"ready"[0m[32m as delivered[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"delivered"[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully deliver order > Process order - Successfully deliver order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully deliver order - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully deliver order > Process order - Successfully deliver order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully deliver order - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Successfully deliver order                               [90m# ProcessGroceryOrder.feature:429[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id    | datePlaced | deadline | customer  | assignee | state              |
        | ready | yesterday  | SameDay  | obiwan212 | claire   | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"ready"[0m[32m as delivered[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"delivered"[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully deliver order > Process order - Successfully deliver order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully deliver order - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully deliver order > Process order - Successfully deliver order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully deliver order - Examples - Example #1.6 STANDARD_OUT

    Scenario Outline: Successfully deliver order                               [90m# ProcessGroceryOrder.feature:430[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id    | datePlaced   | deadline | customer  | assignee | state              |
        | ready | two days ago | SameDay  | obiwan212 | claire   | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"ready"[0m[32m as delivered[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"delivered"[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully deliver order > Process order - Successfully deliver order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully deliver order - Examples - Example #1.6 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Successfully deliver order > Process order - Successfully deliver order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully deliver order - Examples - Example #1.7 STANDARD_OUT

    Scenario Outline: Successfully deliver order                               [90m# ProcessGroceryOrder.feature:431[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id    | datePlaced   | deadline | customer  | assignee | state              |
        | ready | two days ago | InOneDay | obiwan212 | claire   | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item | quantity |
        | ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"ready"[0m[32m as delivered[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"delivered"[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Successfully deliver order > Process order - Successfully deliver order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Successfully deliver order - Examples - Example #1.7 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Unsuccessfully mark order as delivered                                          [90m# ProcessGroceryOrder.feature:446[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer  | assignee | state              |
        | not_ready | today      | InOneDay | anakin501 | alice    | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | not_ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"not_ready"[0m[32m as delivered[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot mark order as delivered before the delivery date"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Unsuccessfully mark order as delivered                                          [90m# ProcessGroceryOrder.feature:447[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline  | customer  | assignee | state              |
        | not_ready | today      | InTwoDays | anakin501 | bob      | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | not_ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"not_ready"[0m[32m as delivered[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot mark order as delivered before the delivery date"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Unsuccessfully mark order as delivered                                          [90m# ProcessGroceryOrder.feature:448[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline    | customer  | assignee | state              |
        | not_ready | today      | InThreeDays | anakin501 | claire   | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | not_ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"not_ready"[0m[32m as delivered[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot mark order as delivered before the delivery date"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Unsuccessfully mark order as delivered                                          [90m# ProcessGroceryOrder.feature:449[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline  | customer  | assignee | state              |
        | not_ready | yesterday  | InTwoDays | anakin501 | claire   | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | not_ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"not_ready"[0m[32m as delivered[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot mark order as delivered before the delivery date"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Unsuccessfully mark order as delivered                                          [90m# ProcessGroceryOrder.feature:450[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline    | customer  | assignee | state              |
        | not_ready | yesterday  | InThreeDays | anakin501 | claire   | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | not_ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"not_ready"[0m[32m as delivered[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot mark order as delivered before the delivery date"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.6 STANDARD_OUT

    Scenario Outline: Unsuccessfully mark order as delivered                                          [90m# ProcessGroceryOrder.feature:451[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced   | deadline    | customer  | assignee | state              |
        | not_ready | two days ago | InThreeDays | anakin501 | claire   | ready for delivery |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | not_ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"not_ready"[0m[32m as delivered[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot mark order as delivered before the delivery date"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"ready for delivery"[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.6 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.7 STANDARD_OUT

    Scenario Outline: Unsuccessfully mark order as delivered                                                    [90m# ProcessGroceryOrder.feature:452[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer  | assignee | state              |
        | not_ready | NULL       | SameDay  | anakin501 | NULL     | under construction |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | not_ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"not_ready"[0m[32m as delivered[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot mark an order as delivered if it is not ready for delivery"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"under construction"[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.7 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.8 STANDARD_OUT

    Scenario Outline: Unsuccessfully mark order as delivered                                                    [90m# ProcessGroceryOrder.feature:453[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer  | assignee | state   |
        | not_ready | NULL       | InOneDay | anakin501 | NULL     | pending |
    items being added to order set to pending
    [233] Starting cost calculation...
    [233] Processing item: Eggs
    [233]   Unit price (cents): 549
    [233]   Quantity: 1
    [233]   Discount multiplier: 1000
    [233]   Discounted item cost (cents): 549
    [233]   Running total cost (cents): 549
    [233] Total cost set to: 549 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | not_ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"not_ready"[0m[32m as delivered[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot mark an order as delivered if it is not ready for delivery"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"pending"[0m                                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.8 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.9 STANDARD_OUT

    Scenario Outline: Unsuccessfully mark order as delivered                                                    [90m# ProcessGroceryOrder.feature:454[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer  | assignee | state  |
        | not_ready | today      | SameDay  | anakin501 | NULL     | placed |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | not_ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"not_ready"[0m[32m as delivered[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot mark an order as delivered if it is not ready for delivery"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"placed"[0m                                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.9 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.10 STANDARD_OUT

    Scenario Outline: Unsuccessfully mark order as delivered                                                    [90m# ProcessGroceryOrder.feature:455[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer  | assignee | state          |
        | not_ready | yesterday  | InOneDay | anakin501 | bob      | in preparation |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | not_ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"not_ready"[0m[32m as delivered[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot mark an order as delivered if it is not ready for delivery"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"in preparation"[0m                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.10 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.11 STANDARD_OUT

    Scenario Outline: Unsuccessfully mark order as delivered                                                    [90m# ProcessGroceryOrder.feature:456[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer  | assignee | state     |
        | not_ready | NULL       | InOneDay | anakin501 | NULL     | cancelled |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | not_ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"not_ready"[0m[32m as delivered[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot mark an order as delivered if it is not ready for delivery"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"cancelled"[0m                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.11 PASSED

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.12 STANDARD_OUT

    Scenario Outline: Unsuccessfully mark order as delivered                                                    [90m# ProcessGroceryOrder.feature:457[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 2        | 2      |
        | Banana              | 100   | perishable      | 8        | 1      |
        | Grain of rice       | 1     | perishable      | 100      | 1      |
      [32mGiven [0m[32mthe following orders exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id        | datePlaced | deadline | customer  | assignee | state     |
        | not_ready | yesterday  | InOneDay | anakin501 | NULL     | cancelled |
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order     | item | quantity |
        | not_ready | Eggs | 1        |
      [32mWhen [0m[32mthe manager attempts to mark the order with ID [0m[32m[1m"not_ready"[0m[32m as delivered[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_manager_attempts_to_mark_the_order_with_id_as_delivered(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"cannot mark an order as delivered if it is not ready for delivery"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order shall be [0m[32m[1m"cancelled"[0m                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderProcessingStepDefinitions.the_order_shall_be(java.lang.String)[0m

CucumberTestRunner > Cucumber > Process order > Process order - Unsuccessfully mark order as delivered > Process order - Unsuccessfully mark order as delivered - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Process order - Unsuccessfully mark order as delivered - Examples - Example #1.12 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Successfully register customer who does not already exist > Register, update, and delete customers - Successfully register customer who does not already exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Successfully register customer who does not already exist - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully register customer who does not already exist                                        [90m# RegisterUpdateDeleteCustomer.feature:34[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32ma customer attempts to register with username [0m[32m[1m"David"[0m[32m, password [0m[32m[1m"groC3ry5store"[0m[32m, and address [0m[32m[1m"123 Main St."[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_attempts_to_register_with_username_password_and_address(java.lang.String,java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is David
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"David"[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"groC3ry5store"[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"123 Main St."[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m""[0m                                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m""[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m0[0m[32m points[0m                                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m7[0m                                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m4[0m                                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Successfully register customer who does not already exist > Register, update, and delete customers - Successfully register customer who does not already exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Successfully register customer who does not already exist - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Successfully register customer who does not already exist > Register, update, and delete customers - Successfully register customer who does not already exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Successfully register customer who does not already exist - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully register customer who does not already exist                                           [90m# RegisterUpdateDeleteCustomer.feature:35[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32ma customer attempts to register with username [0m[32m[1m"Eve987"[0m[32m, password [0m[32m[1m"pumpkinsmiam"[0m[32m, and address [0m[32m[1m"2781 Sherbrooke"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_attempts_to_register_with_username_password_and_address(java.lang.String,java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is Eve987
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"Eve987"[0m                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"pumpkinsmiam"[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"2781 Sherbrooke"[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m""[0m                                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m""[0m                                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m0[0m[32m points[0m                                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m7[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m4[0m                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Successfully register customer who does not already exist > Register, update, and delete customers - Successfully register customer who does not already exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Successfully register customer who does not already exist - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Register customer unsuccessfully due to duplicate username > Register, update, and delete customers - Register customer unsuccessfully due to duplicate username - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Register customer unsuccessfully due to duplicate username - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Register customer unsuccessfully due to duplicate username                                    [90m# RegisterUpdateDeleteCustomer.feature:47[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32ma customer attempts to register with username [0m[32m[1m"manager"[0m[32m, password [0m[32m[1m"password"[0m[32m, and address [0m[32m[1m"124 Main St."[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_attempts_to_register_with_username_password_and_address(java.lang.String,java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"username is already in use"[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Register customer unsuccessfully due to duplicate username > Register, update, and delete customers - Register customer unsuccessfully due to duplicate username - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Register customer unsuccessfully due to duplicate username - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Register customer unsuccessfully due to duplicate username > Register, update, and delete customers - Register customer unsuccessfully due to duplicate username - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Register customer unsuccessfully due to duplicate username - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Register customer unsuccessfully due to duplicate username                                  [90m# RegisterUpdateDeleteCustomer.feature:48[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32ma customer attempts to register with username [0m[32m[1m"alice"[0m[32m, password [0m[32m[1m"password"[0m[32m, and address [0m[32m[1m"124 Main St."[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_attempts_to_register_with_username_password_and_address(java.lang.String,java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"username is already in use"[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Register customer unsuccessfully due to duplicate username > Register, update, and delete customers - Register customer unsuccessfully due to duplicate username - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Register customer unsuccessfully due to duplicate username - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Register customer unsuccessfully due to duplicate username > Register, update, and delete customers - Register customer unsuccessfully due to duplicate username - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Register customer unsuccessfully due to duplicate username - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Register customer unsuccessfully due to duplicate username                                      [90m# RegisterUpdateDeleteCustomer.feature:49[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32ma customer attempts to register with username [0m[32m[1m"obiwan212"[0m[32m, password [0m[32m[1m"password"[0m[32m, and address [0m[32m[1m"124 Main St."[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_attempts_to_register_with_username_password_and_address(java.lang.String,java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"username is already in use"[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Register customer unsuccessfully due to duplicate username > Register, update, and delete customers - Register customer unsuccessfully due to duplicate username - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Register customer unsuccessfully due to duplicate username - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Register customer unsuccessfully > Register, update, and delete customers - Register customer unsuccessfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Register customer unsuccessfully - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Register customer unsuccessfully                                                       [90m# RegisterUpdateDeleteCustomer.feature:62[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32ma customer attempts to register with username [0m[32m[1m""[0m[32m, password [0m[32m[1m"password"[0m[32m, and address [0m[32m[1m"124 Main St."[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_attempts_to_register_with_username_password_and_address(java.lang.String,java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"username is required"[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m""[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Register customer unsuccessfully > Register, update, and delete customers - Register customer unsuccessfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Register customer unsuccessfully - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Register customer unsuccessfully > Register, update, and delete customers - Register customer unsuccessfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Register customer unsuccessfully - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Register customer unsuccessfully                                                    [90m# RegisterUpdateDeleteCustomer.feature:63[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32ma customer attempts to register with username [0m[32m[1m"david"[0m[32m, password [0m[32m[1m""[0m[32m, and address [0m[32m[1m"124 Main St."[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_attempts_to_register_with_username_password_and_address(java.lang.String,java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"password is required"[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m"david"[0m                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Register customer unsuccessfully > Register, update, and delete customers - Register customer unsuccessfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Register customer unsuccessfully - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Register customer unsuccessfully > Register, update, and delete customers - Register customer unsuccessfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Register customer unsuccessfully - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Register customer unsuccessfully                                                [90m# RegisterUpdateDeleteCustomer.feature:64[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32ma customer attempts to register with username [0m[32m[1m"david"[0m[32m, password [0m[32m[1m"password"[0m[32m, and address [0m[32m[1m""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_attempts_to_register_with_username_password_and_address(java.lang.String,java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"address is required"[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m"david"[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Register customer unsuccessfully > Register, update, and delete customers - Register customer unsuccessfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Register customer unsuccessfully - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Register customer unsuccessfully > Register, update, and delete customers - Register customer unsuccessfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Register customer unsuccessfully - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Register customer unsuccessfully                                                                  [90m# RegisterUpdateDeleteCustomer.feature:65[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32ma customer attempts to register with username [0m[32m[1m"David David"[0m[32m, password [0m[32m[1m"password"[0m[32m, and address [0m[32m[1m"124 Main St."[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_attempts_to_register_with_username_password_and_address(java.lang.String,java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"username contains an invalid character ' '"[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m"David David"[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Register customer unsuccessfully > Register, update, and delete customers - Register customer unsuccessfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Register customer unsuccessfully - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Register customer unsuccessfully > Register, update, and delete customers - Register customer unsuccessfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Register customer unsuccessfully - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Register customer unsuccessfully                                                             [90m# RegisterUpdateDeleteCustomer.feature:66[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32ma customer attempts to register with username [0m[32m[1m"david!"[0m[32m, password [0m[32m[1m"password"[0m[32m, and address [0m[32m[1m"124 Main St."[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_attempts_to_register_with_username_password_and_address(java.lang.String,java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"username contains an invalid character '!'"[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m"david!"[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Register customer unsuccessfully > Register, update, and delete customers - Register customer unsuccessfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Register customer unsuccessfully - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Successfully add a customer account for someone who is already an employee > Register, update, and delete customers - Successfully add a customer account for someone who is already an employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Successfully add a customer account for someone who is already an employee - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully add a customer account for someone who is already an employee [90m# RegisterUpdateDeleteCustomer.feature:84[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"bob"[0m[32m attempts to add a customer account with address [0m[32m[1m"456 Bob Boulevard"[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_add_a_customer_account_with_address(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is bob
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"bob"[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"password"[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"456 Bob Boulevard"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Bob Robertson"[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(514) 555-2222"[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m0[0m[32m points[0m                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m4[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Successfully add a customer account for someone who is already an employee > Register, update, and delete customers - Successfully add a customer account for someone who is already an employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Successfully add a customer account for someone who is already an employee - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Successfully add a customer account for someone who is already an employee > Register, update, and delete customers - Successfully add a customer account for someone who is already an employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Successfully add a customer account for someone who is already an employee - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully add a customer account for someone who is already an employee [90m# RegisterUpdateDeleteCustomer.feature:85[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"claire"[0m[32m attempts to add a customer account with address [0m[32m[1m"789 Clearview Drive"[0m        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_add_a_customer_account_with_address(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is claire
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"claire"[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"password"[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"789 Clearview Drive"[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Claire Clark"[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(514) 555-3333"[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m0[0m[32m points[0m                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m4[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Successfully add a customer account for someone who is already an employee > Register, update, and delete customers - Successfully add a customer account for someone who is already an employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Successfully add a customer account for someone who is already an employee - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to add a customer account when the employee already has one STANDARD_OUT

    Scenario: Try to add a customer account when the employee already has one          [90m# RegisterUpdateDeleteCustomer.feature:87[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"alice"[0m[32m attempts to add a customer account with address [0m[32m[1m"222 Main St."[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_add_a_customer_account_with_address(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"\"alice\" already has a customer account"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
    the current customer is alice
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"alice"[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"alice123"[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"123 Alice Avenue"[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Alice Allisson"[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(514) 555-1111"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m2[0m[32m points[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to add a customer account when the employee already has one PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Update account information successfully        [90m# RegisterUpdateDeleteCustomer.feature:117[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"alice"[0m[32m attempts to change their password to [0m[32m[1m"mypassw0rd"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_password_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is alice
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"alice"[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"mypassw0rd"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"123 Alice Avenue"[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Alice Allisson"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(514) 555-1111"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m2[0m[32m points[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Update account information successfully             [90m# RegisterUpdateDeleteCustomer.feature:118[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"obiwan212"[0m[32m attempts to change their password to [0m[32m[1m"hello_there"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_password_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is obiwan212
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"obiwan212"[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"hello_there"[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Jedi Temple, Coruscant"[0m        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Obi-Wan Kenobi"[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(438) 555-1234"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m212[0m[32m points[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Update account information successfully          [90m# RegisterUpdateDeleteCustomer.feature:119[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"anakin501"[0m[32m attempts to change their password to [0m[32m[1m"i<3padme"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_password_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is anakin501
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"anakin501"[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"i<3padme"[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Jedi Temple, Coruscant"[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Anakin Skywalker"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(514) 555-9876"[0m        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m501[0m[32m points[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Update account information successfully     [90m# RegisterUpdateDeleteCustomer.feature:120[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"alice"[0m[32m attempts to change their name to [0m[32m[1m"Alice Alice"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_name_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is alice
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"alice"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"alice123"[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"123 Alice Avenue"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Alice Alice"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(514) 555-1111"[0m   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m2[0m[32m points[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Update account information successfully        [90m# RegisterUpdateDeleteCustomer.feature:121[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"obiwan212"[0m[32m attempts to change their name to [0m[32m[1m"Ben Kenobi"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_name_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is obiwan212
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"obiwan212"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"highground"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Jedi Temple, Coruscant"[0m   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Ben Kenobi"[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(438) 555-1234"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m212[0m[32m points[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.6 STANDARD_OUT

    Scenario Outline: Update account information successfully      [90m# RegisterUpdateDeleteCustomer.feature:122[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"obiwan212"[0m[32m attempts to change their name to [0m[32m[1m""[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_name_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is obiwan212
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"obiwan212"[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"highground"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Jedi Temple, Coruscant"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m""[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(438) 555-1234"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m212[0m[32m points[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.6 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.7 STANDARD_OUT

    Scenario Outline: Update account information successfully         [90m# RegisterUpdateDeleteCustomer.feature:123[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"anakin501"[0m[32m attempts to change their name to [0m[32m[1m"Darth Vader"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_name_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is anakin501
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"anakin501"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"i-dont-like-sand"[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Jedi Temple, Coruscant"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Darth Vader"[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(514) 555-9876"[0m       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m501[0m[32m points[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.7 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.8 STANDARD_OUT

    Scenario Outline: Update account information successfully      [90m# RegisterUpdateDeleteCustomer.feature:124[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"anakin501"[0m[32m attempts to change their name to [0m[32m[1m""[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_name_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is anakin501
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"anakin501"[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"i-dont-like-sand"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Jedi Temple, Coruscant"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m""[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(514) 555-9876"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m501[0m[32m points[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.8 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.9 STANDARD_OUT

    Scenario Outline: Update account information successfully                [90m# RegisterUpdateDeleteCustomer.feature:125[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"alice"[0m[32m attempts to change their phone number to [0m[32m[1m"(438) 555-0000"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_phone_number_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is alice
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"alice"[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"alice123"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"123 Alice Avenue"[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Alice Allisson"[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(438) 555-0000"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m2[0m[32m points[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.9 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.10 STANDARD_OUT

    Scenario Outline: Update account information successfully                    [90m# RegisterUpdateDeleteCustomer.feature:126[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"obiwan212"[0m[32m attempts to change their phone number to [0m[32m[1m"(514) 555-2345"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_phone_number_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is obiwan212
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"obiwan212"[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"highground"[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Jedi Temple, Coruscant"[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Obi-Wan Kenobi"[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(514) 555-2345"[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m212[0m[32m points[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.10 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.11 STANDARD_OUT

    Scenario Outline: Update account information successfully      [90m# RegisterUpdateDeleteCustomer.feature:127[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"obiwan212"[0m[32m attempts to change their phone number to [0m[32m[1m""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_phone_number_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is obiwan212
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"obiwan212"[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"highground"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Jedi Temple, Coruscant"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Obi-Wan Kenobi"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m""[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m212[0m[32m points[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.11 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.12 STANDARD_OUT

    Scenario Outline: Update account information successfully                    [90m# RegisterUpdateDeleteCustomer.feature:128[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"anakin501"[0m[32m attempts to change their phone number to [0m[32m[1m"(438) 555-8765"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_phone_number_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is anakin501
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"anakin501"[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"i-dont-like-sand"[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Jedi Temple, Coruscant"[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Anakin Skywalker"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(438) 555-8765"[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m501[0m[32m points[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.12 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.13 STANDARD_OUT

    Scenario Outline: Update account information successfully      [90m# RegisterUpdateDeleteCustomer.feature:129[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"anakin501"[0m[32m attempts to change their phone number to [0m[32m[1m""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_phone_number_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is anakin501
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"anakin501"[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"i-dont-like-sand"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Jedi Temple, Coruscant"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Anakin Skywalker"[0m          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m""[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m501[0m[32m points[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.13 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.14 STANDARD_OUT

    Scenario Outline: Update account information successfully          [90m# RegisterUpdateDeleteCustomer.feature:130[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"alice"[0m[32m attempts to change their address to [0m[32m[1m"2 Main Street"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_address_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is alice
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"alice"[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"alice123"[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"2 Main Street"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Alice Allisson"[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(514) 555-1111"[0m        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m2[0m[32m points[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.14 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.15 STANDARD_OUT

    Scenario Outline: Update account information successfully         [90m# RegisterUpdateDeleteCustomer.feature:131[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"obiwan212"[0m[32m attempts to change their address to [0m[32m[1m"Tatooine"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_address_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is obiwan212
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"obiwan212"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"highground"[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Tatooine"[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Obi-Wan Kenobi"[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(438) 555-1234"[0m       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m212[0m[32m points[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.15 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.16 STANDARD_OUT

    Scenario Outline: Update account information successfully           [90m# RegisterUpdateDeleteCustomer.feature:132[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"anakin501"[0m[32m attempts to change their address to [0m[32m[1m"Death Star"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_address_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    the current customer is anakin501
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"anakin501"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"i-dont-like-sand"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Death Star"[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Anakin Skywalker"[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(514) 555-9876"[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m501[0m[32m points[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Update account information successfully > Register, update, and delete customers - Update account information successfully - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Update account information successfully - Examples - Example #1.16 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update customer with invalid value > Register, update, and delete customers - Try to update customer with invalid value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update customer with invalid value - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to update customer with invalid value    [90m# RegisterUpdateDeleteCustomer.feature:150[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"obiwan212"[0m[32m attempts to change their password to [0m[32m[1m""[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_password_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"password is required"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
    the current customer is obiwan212
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"obiwan212"[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"highground"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Jedi Temple, Coruscant"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Obi-Wan Kenobi"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(438) 555-1234"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m212[0m[32m points[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update customer with invalid value > Register, update, and delete customers - Try to update customer with invalid value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update customer with invalid value - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update customer with invalid value > Register, update, and delete customers - Try to update customer with invalid value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update customer with invalid value - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to update customer with invalid value    [90m# RegisterUpdateDeleteCustomer.feature:151[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"anakin501"[0m[32m attempts to change their password to [0m[32m[1m""[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_password_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"password is required"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
    the current customer is anakin501
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"anakin501"[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"i-dont-like-sand"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Jedi Temple, Coruscant"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Anakin Skywalker"[0m          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(514) 555-9876"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m501[0m[32m points[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update customer with invalid value > Register, update, and delete customers - Try to update customer with invalid value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update customer with invalid value - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update customer with invalid value > Register, update, and delete customers - Try to update customer with invalid value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update customer with invalid value - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Try to update customer with invalid value                                              [90m# RegisterUpdateDeleteCustomer.feature:152[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"obiwan212"[0m[32m attempts to change their phone number to [0m[32m[1m"not num"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_phone_number_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"phone number does not match expected format \"(xxx) xxx-xxxx\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
    the current customer is obiwan212
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"obiwan212"[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"highground"[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Jedi Temple, Coruscant"[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Obi-Wan Kenobi"[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(438) 555-1234"[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m212[0m[32m points[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update customer with invalid value > Register, update, and delete customers - Try to update customer with invalid value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update customer with invalid value - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update customer with invalid value > Register, update, and delete customers - Try to update customer with invalid value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update customer with invalid value - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Try to update customer with invalid value                                              [90m# RegisterUpdateDeleteCustomer.feature:153[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"anakin501"[0m[32m attempts to change their phone number to [0m[32m[1m"5145559876"[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_phone_number_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"phone number does not match expected format \"(xxx) xxx-xxxx\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
    the current customer is anakin501
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"anakin501"[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"i-dont-like-sand"[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Jedi Temple, Coruscant"[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Anakin Skywalker"[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(514) 555-9876"[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m501[0m[32m points[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update customer with invalid value > Register, update, and delete customers - Try to update customer with invalid value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update customer with invalid value - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update customer with invalid value > Register, update, and delete customers - Try to update customer with invalid value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update customer with invalid value - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Try to update customer with invalid value    [90m# RegisterUpdateDeleteCustomer.feature:154[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"obiwan212"[0m[32m attempts to change their address to [0m[32m[1m""[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_address_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"address is required"[0m  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
    the current customer is obiwan212
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"obiwan212"[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"highground"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Jedi Temple, Coruscant"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Obi-Wan Kenobi"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(438) 555-1234"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m212[0m[32m points[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update customer with invalid value > Register, update, and delete customers - Try to update customer with invalid value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update customer with invalid value - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update customer with invalid value > Register, update, and delete customers - Try to update customer with invalid value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update customer with invalid value - Examples - Example #1.6 STANDARD_OUT

    Scenario Outline: Try to update customer with invalid value    [90m# RegisterUpdateDeleteCustomer.feature:155[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"anakin501"[0m[32m attempts to change their address to [0m[32m[1m""[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_address_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"address is required"[0m  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
    the current customer is anakin501
      [32mAnd [0m[32ma customer shall exist with username [0m[32m[1m"anakin501"[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"i-dont-like-sand"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"Jedi Temple, Coruscant"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Anakin Skywalker"[0m          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(514) 555-9876"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m501[0m[32m points[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update customer with invalid value > Register, update, and delete customers - Try to update customer with invalid value - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update customer with invalid value - Examples - Example #1.6 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update non-existent user > Register, update, and delete customers - Try to update non-existent user - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update non-existent user - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to update non-existent user                                        [90m# RegisterUpdateDeleteCustomer.feature:168[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"nonexistent"[0m[32m attempts to change their password to [0m[32m[1m"password"[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_password_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no user with username \"nonexistent\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m"nonexistent"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update non-existent user > Register, update, and delete customers - Try to update non-existent user - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update non-existent user - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update non-existent user > Register, update, and delete customers - Try to update non-existent user - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update non-existent user - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to update non-existent user                                       [90m# RegisterUpdateDeleteCustomer.feature:169[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"idontexist"[0m[32m attempts to change their name to [0m[32m[1m"Fred"[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_name_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no user with username \"idontexist\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m"idontexist"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update non-existent user > Register, update, and delete customers - Try to update non-existent user - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update non-existent user - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update non-existent user > Register, update, and delete customers - Try to update non-existent user - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update non-existent user - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Try to update non-existent user                                  [90m# RegisterUpdateDeleteCustomer.feature:170[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"ghost"[0m[32m attempts to change their phone number to [0m[32m[1m"(438) 555-5555"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_phone_number_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no user with username \"ghost\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m"ghost"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update non-existent user > Register, update, and delete customers - Try to update non-existent user - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update non-existent user - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update non-existent user > Register, update, and delete customers - Try to update non-existent user - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update non-existent user - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Try to update non-existent user                                        [90m# RegisterUpdateDeleteCustomer.feature:171[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"nonexistent"[0m[32m attempts to change their address to [0m[32m[1m"1234 Main St."[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_address_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no user with username \"nonexistent\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m"nonexistent"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to update non-existent user > Register, update, and delete customers - Try to update non-existent user - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to update non-existent user - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Successfully delete customer who is not an employee > Register, update, and delete customers - Successfully delete customer who is not an employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Successfully delete customer who is not an employee - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully delete customer who is not an employee [90m# RegisterUpdateDeleteCustomer.feature:184[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"obiwan212"[0m[32m attempts to delete their customer account[0m          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_delete_their_customer_account(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m"obiwan212"[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m5[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m2[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Successfully delete customer who is not an employee > Register, update, and delete customers - Successfully delete customer who is not an employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Successfully delete customer who is not an employee - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Successfully delete customer who is not an employee > Register, update, and delete customers - Successfully delete customer who is not an employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Successfully delete customer who is not an employee - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully delete customer who is not an employee [90m# RegisterUpdateDeleteCustomer.feature:185[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"anakin501"[0m[32m attempts to delete their customer account[0m          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_delete_their_customer_account(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m"anakin501"[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m5[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m2[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Successfully delete customer who is not an employee > Register, update, and delete customers - Successfully delete customer who is not an employee - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Successfully delete customer who is not an employee - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Successfully delete customer account for user who is also an employee STANDARD_OUT

    Scenario Outline: Successfully delete customer account for user who is also an employee [90m# RegisterUpdateDeleteCustomer.feature:187[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"alice"[0m[32m attempts to delete their customer account[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_delete_their_customer_account(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mno customer shall exist with username [0m[32m[1m"alice"[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_customer_shall_exist_with_username(java.lang.String)[0m
      [32mBut [0m[32man employee shall exist with username [0m[32m[1m"alice"[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.an_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's password shall be [0m[32m[1m"alice123"[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's name shall be [0m[32m[1m"Alice Allisson"[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's phone number shall be [0m[32m[1m"(514) 555-1111"[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m2[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Successfully delete customer account for user who is also an employee PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to delete a customer that doesn't exist > Register, update, and delete customers - Try to delete a customer that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to delete a customer that doesn't exist - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to delete a customer that doesn't exist                            [90m# RegisterUpdateDeleteCustomer.feature:211[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"nonexistent"[0m[32m attempts to delete their customer account[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_delete_their_customer_account(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no user with username \"nonexistent\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno customer shall exist with username [0m[32m[1m"nonexistent"[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to delete a customer that doesn't exist > Register, update, and delete customers - Try to delete a customer that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to delete a customer that doesn't exist - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to delete a customer that doesn't exist > Register, update, and delete customers - Try to delete a customer that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to delete a customer that doesn't exist - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to delete a customer that doesn't exist                      [90m# RegisterUpdateDeleteCustomer.feature:212[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"ghost"[0m[32m attempts to delete their customer account[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_delete_their_customer_account(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no user with username \"ghost\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno customer shall exist with username [0m[32m[1m"ghost"[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to delete a customer that doesn't exist > Register, update, and delete customers - Try to delete a customer that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to delete a customer that doesn't exist - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to delete a customer that doesn't exist > Register, update, and delete customers - Try to delete a customer that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to delete a customer that doesn't exist - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Try to delete a customer that doesn't exist       [90m# RegisterUpdateDeleteCustomer.feature:213[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"bob"[0m[32m attempts to delete their customer account[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_delete_their_customer_account(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"\"bob\" is not a customer"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno customer shall exist with username [0m[32m[1m"bob"[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to delete a customer that doesn't exist > Register, update, and delete customers - Try to delete a customer that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to delete a customer that doesn't exist - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to delete a customer that doesn't exist > Register, update, and delete customers - Try to delete a customer that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to delete a customer that doesn't exist - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Try to delete a customer that doesn't exist          [90m# RegisterUpdateDeleteCustomer.feature:214[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"claire"[0m[32m attempts to delete their customer account[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_delete_their_customer_account(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"\"claire\" is not a customer"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno customer shall exist with username [0m[32m[1m"claire"[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete customers > Register, update, and delete customers - Try to delete a customer that doesn't exist > Register, update, and delete customers - Try to delete a customer that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete customers - Try to delete a customer that doesn't exist - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully register employee who does not already exist > Register, update, and delete employees - Successfully register employee who does not already exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully register employee who does not already exist - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully register employee who does not already exist [90m# RegisterUpdateDeleteEmployee.feature:31[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new employee with username [0m[32m[1m"doug"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_add_a_new_employee_with_username(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man employee shall exist with username [0m[32m[1m"doug"[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.an_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's password shall be [0m[32m[1m"employee"[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's name shall be [0m[32m[1m""[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's phone number shall be [0m[32m[1m""[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m7[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m4[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully register employee who does not already exist > Register, update, and delete employees - Successfully register employee who does not already exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully register employee who does not already exist - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully register employee who does not already exist > Register, update, and delete employees - Successfully register employee who does not already exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully register employee who does not already exist - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully register employee who does not already exist [90m# RegisterUpdateDeleteEmployee.feature:32[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new employee with username [0m[32m[1m"Eve000"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_add_a_new_employee_with_username(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man employee shall exist with username [0m[32m[1m"Eve000"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.an_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's password shall be [0m[32m[1m"employee"[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's name shall be [0m[32m[1m""[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's phone number shall be [0m[32m[1m""[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m7[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m4[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully register employee who does not already exist > Register, update, and delete employees - Successfully register employee who does not already exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully register employee who does not already exist - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully register employee who does not already exist > Register, update, and delete employees - Successfully register employee who does not already exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully register employee who does not already exist - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully register employee who does not already exist [90m# RegisterUpdateDeleteEmployee.feature:33[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new employee with username [0m[32m[1m"11FRED"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_add_a_new_employee_with_username(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man employee shall exist with username [0m[32m[1m"11FRED"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.an_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's password shall be [0m[32m[1m"employee"[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's name shall be [0m[32m[1m""[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's phone number shall be [0m[32m[1m""[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m7[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m4[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully register employee who does not already exist > Register, update, and delete employees - Successfully register employee who does not already exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully register employee who does not already exist - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to register new employee with duplicate username > Register, update, and delete employees - Try to register new employee with duplicate username - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to register new employee with duplicate username - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to register new employee with duplicate username  [90m# RegisterUpdateDeleteEmployee.feature:45[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new employee with username [0m[32m[1m"alice"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_add_a_new_employee_with_username(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"username is already in use"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to register new employee with duplicate username > Register, update, and delete employees - Try to register new employee with duplicate username - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to register new employee with duplicate username - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to register new employee with duplicate username > Register, update, and delete employees - Try to register new employee with duplicate username - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to register new employee with duplicate username - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to register new employee with duplicate username [90m# RegisterUpdateDeleteEmployee.feature:46[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new employee with username [0m[32m[1m"bob"[0m  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_add_a_new_employee_with_username(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"username is already in use"[0m   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to register new employee with duplicate username > Register, update, and delete employees - Try to register new employee with duplicate username - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to register new employee with duplicate username - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to register new employee with duplicate username > Register, update, and delete employees - Try to register new employee with duplicate username - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to register new employee with duplicate username - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Try to register new employee with duplicate username   [90m# RegisterUpdateDeleteEmployee.feature:47[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new employee with username [0m[32m[1m"claire"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_add_a_new_employee_with_username(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"username is already in use"[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to register new employee with duplicate username > Register, update, and delete employees - Try to register new employee with duplicate username - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to register new employee with duplicate username - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to register new employee with duplicate username > Register, update, and delete employees - Try to register new employee with duplicate username - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to register new employee with duplicate username - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Try to register new employee with duplicate username      [90m# RegisterUpdateDeleteEmployee.feature:48[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new employee with username [0m[32m[1m"obiwan212"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_add_a_new_employee_with_username(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"username is already in use"[0m        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to register new employee with duplicate username > Register, update, and delete employees - Try to register new employee with duplicate username - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to register new employee with duplicate username - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to register new employee with duplicate username > Register, update, and delete employees - Try to register new employee with duplicate username - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to register new employee with duplicate username - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Try to register new employee with duplicate username      [90m# RegisterUpdateDeleteEmployee.feature:49[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new employee with username [0m[32m[1m"anakin501"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_add_a_new_employee_with_username(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"username is already in use"[0m        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to register new employee with duplicate username > Register, update, and delete employees - Try to register new employee with duplicate username - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to register new employee with duplicate username - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to register new employee with blank username STANDARD_OUT

    Scenario: Try to register new employee with blank username         [90m# RegisterUpdateDeleteEmployee.feature:51[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to add a new employee with username [0m[32m[1m""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_add_a_new_employee_with_username(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"username is required"[0m     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m""[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to register new employee with blank username PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully add employee account for a customer > Register, update, and delete employees - Successfully add employee account for a customer - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully add employee account for a customer - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully add employee account for a customer        [90m# RegisterUpdateDeleteEmployee.feature:74[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to create an employee account for [0m[32m[1m"obiwan212"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_create_an_employee_account_for(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man employee shall exist with username [0m[32m[1m"obiwan212"[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.an_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's password shall be [0m[32m[1m"highground"[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's name shall be [0m[32m[1m"Obi-Wan Kenobi"[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's phone number shall be [0m[32m[1m"(438) 555-1234"[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m4[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully add employee account for a customer > Register, update, and delete employees - Successfully add employee account for a customer - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully add employee account for a customer - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully add employee account for a customer > Register, update, and delete employees - Successfully add employee account for a customer - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully add employee account for a customer - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully add employee account for a customer        [90m# RegisterUpdateDeleteEmployee.feature:75[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to create an employee account for [0m[32m[1m"anakin501"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_create_an_employee_account_for(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man employee shall exist with username [0m[32m[1m"anakin501"[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.an_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's password shall be [0m[32m[1m"i-dont-like-sand"[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's name shall be [0m[32m[1m"Anakin Skywalker"[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's phone number shall be [0m[32m[1m"(514) 555-9876"[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m4[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully add employee account for a customer > Register, update, and delete employees - Successfully add employee account for a customer - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully add employee account for a customer - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to add employee account when the user already has one STANDARD_OUT

    Scenario: Try to add employee account when the user already has one                 [90m# RegisterUpdateDeleteEmployee.feature:77[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to create an employee account for [0m[32m[1m"alice"[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_create_an_employee_account_for(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"\"alice\" already has an employee account"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32man employee shall exist with username [0m[32m[1m"alice"[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.an_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's password shall be [0m[32m[1m"alice123"[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's name shall be [0m[32m[1m"Alice Allisson"[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's phone number shall be [0m[32m[1m"(514) 555-1111"[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to add employee account when the user already has one PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to add employee account to user that doesn't exist > Register, update, and delete employees - Try to add employee account to user that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to add employee account to user that doesn't exist - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to add employee account to user that doesn't exist                 [90m# RegisterUpdateDeleteEmployee.feature:100[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to create an employee account for [0m[32m[1m"nonexistent"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_create_an_employee_account_for(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no user with username \"nonexistent\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m"nonexistent"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to add employee account to user that doesn't exist > Register, update, and delete employees - Try to add employee account to user that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to add employee account to user that doesn't exist - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to add employee account to user that doesn't exist > Register, update, and delete employees - Try to add employee account to user that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to add employee account to user that doesn't exist - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to add employee account to user that doesn't exist                [90m# RegisterUpdateDeleteEmployee.feature:101[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to create an employee account for [0m[32m[1m"idontexist"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_create_an_employee_account_for(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no user with username \"idontexist\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m"idontexist"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to add employee account to user that doesn't exist > Register, update, and delete employees - Try to add employee account to user that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to add employee account to user that doesn't exist - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to add employee account to user that doesn't exist > Register, update, and delete employees - Try to add employee account to user that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to add employee account to user that doesn't exist - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Try to add employee account to user that doesn't exist           [90m# RegisterUpdateDeleteEmployee.feature:102[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to create an employee account for [0m[32m[1m"ghost"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_create_an_employee_account_for(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no user with username \"ghost\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m"ghost"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to add employee account to user that doesn't exist > Register, update, and delete employees - Try to add employee account to user that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to add employee account to user that doesn't exist - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully update account info > Register, update, and delete employees - Successfully update account info - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully update account info - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully update account info               [90m# RegisterUpdateDeleteEmployee.feature:118[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"alice"[0m[32m attempts to change their password to [0m[32m[1m"mypassw0rd"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_password_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man employee shall exist with username [0m[32m[1m"alice"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.an_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's password shall be [0m[32m[1m"mypassw0rd"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's name shall be [0m[32m[1m"Alice Allisson"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's phone number shall be [0m[32m[1m"(514) 555-1111"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully update account info > Register, update, and delete employees - Successfully update account info - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully update account info - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully update account info > Register, update, and delete employees - Successfully update account info - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully update account info - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully update account info            [90m# RegisterUpdateDeleteEmployee.feature:119[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"bob"[0m[32m attempts to change their password to [0m[32m[1m"bobobobob"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_password_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man employee shall exist with username [0m[32m[1m"bob"[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.an_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's password shall be [0m[32m[1m"bobobobob"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's name shall be [0m[32m[1m"Bob Robertson"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's phone number shall be [0m[32m[1m"(514) 555-2222"[0m   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully update account info > Register, update, and delete employees - Successfully update account info - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully update account info - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully update account info > Register, update, and delete employees - Successfully update account info - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully update account info - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully update account info            [90m# RegisterUpdateDeleteEmployee.feature:120[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"alice"[0m[32m attempts to change their name to [0m[32m[1m"Alice Alice"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_name_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man employee shall exist with username [0m[32m[1m"alice"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.an_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's password shall be [0m[32m[1m"alice123"[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's name shall be [0m[32m[1m"Alice Alice"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's phone number shall be [0m[32m[1m"(514) 555-1111"[0m   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully update account info > Register, update, and delete employees - Successfully update account info - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully update account info - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully update account info > Register, update, and delete employees - Successfully update account info - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully update account info - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Successfully update account info          [90m# RegisterUpdateDeleteEmployee.feature:121[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"claire"[0m[32m attempts to change their name to [0m[32m[1m""[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_name_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man employee shall exist with username [0m[32m[1m"claire"[0m        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.an_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's password shall be [0m[32m[1m"password"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's name shall be [0m[32m[1m""[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's phone number shall be [0m[32m[1m"(514) 555-3333"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully update account info > Register, update, and delete employees - Successfully update account info - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully update account info - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully update account info > Register, update, and delete employees - Successfully update account info - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully update account info - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Successfully update account info                       [90m# RegisterUpdateDeleteEmployee.feature:122[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"alice"[0m[32m attempts to change their phone number to [0m[32m[1m"(438) 555-0000"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_phone_number_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man employee shall exist with username [0m[32m[1m"alice"[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.an_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's password shall be [0m[32m[1m"alice123"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's name shall be [0m[32m[1m"Alice Allisson"[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's phone number shall be [0m[32m[1m"(438) 555-0000"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully update account info > Register, update, and delete employees - Successfully update account info - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully update account info - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully update account info > Register, update, and delete employees - Successfully update account info - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully update account info - Examples - Example #1.6 STANDARD_OUT

    Scenario Outline: Successfully update account info                     [90m# RegisterUpdateDeleteEmployee.feature:123[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"bob"[0m[32m attempts to change their phone number to [0m[32m[1m"(438) 555-9876"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_phone_number_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32man employee shall exist with username [0m[32m[1m"bob"[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.an_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's password shall be [0m[32m[1m"password"[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's name shall be [0m[32m[1m"Bob Robertson"[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's phone number shall be [0m[32m[1m"(438) 555-9876"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully update account info > Register, update, and delete employees - Successfully update account info - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully update account info - Examples - Example #1.6 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to update employee with invalid data > Register, update, and delete employees - Try to update employee with invalid data - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to update employee with invalid data - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to update employee with invalid data     [90m# RegisterUpdateDeleteEmployee.feature:139[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"alice"[0m[32m attempts to change their password to [0m[32m[1m""[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_password_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"password is required"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32man employee shall exist with username [0m[32m[1m"alice"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.an_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's password shall be [0m[32m[1m"alice123"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's name shall be [0m[32m[1m"Alice Allisson"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's phone number shall be [0m[32m[1m"(514) 555-1111"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to update employee with invalid data > Register, update, and delete employees - Try to update employee with invalid data - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to update employee with invalid data - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to update employee with invalid data > Register, update, and delete employees - Try to update employee with invalid data - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to update employee with invalid data - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to update employee with invalid data                                               [90m# RegisterUpdateDeleteEmployee.feature:140[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32m[0m[32m[1m"alice"[0m[32m attempts to change their phone number to [0m[32m[1m"438-555-0000"[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.attempts_to_change_their_phone_number_to(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"phone number does not match expected format \"(xxx) xxx-xxxx\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32man employee shall exist with username [0m[32m[1m"alice"[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.an_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's password shall be [0m[32m[1m"alice123"[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's name shall be [0m[32m[1m"Alice Allisson"[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe employee's phone number shall be [0m[32m[1m"(514) 555-1111"[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_employee_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to update employee with invalid data > Register, update, and delete employees - Try to update employee with invalid data - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to update employee with invalid data - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully delete employee who is not a customer > Register, update, and delete employees - Successfully delete employee who is not a customer - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully delete employee who is not a customer - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully delete employee who is not a customer [90m# RegisterUpdateDeleteEmployee.feature:153[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to delete employee [0m[32m[1m"bob"[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_delete_employee(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m"bob"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m5[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m2[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully delete employee who is not a customer > Register, update, and delete employees - Successfully delete employee who is not a customer - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully delete employee who is not a customer - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully delete employee who is not a customer > Register, update, and delete employees - Successfully delete employee who is not a customer - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully delete employee who is not a customer - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully delete employee who is not a customer [90m# RegisterUpdateDeleteEmployee.feature:154[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to delete employee [0m[32m[1m"claire"[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_delete_employee(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mno user shall exist with username [0m[32m[1m"claire"[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_user_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m5[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m2[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Successfully delete employee who is not a customer > Register, update, and delete employees - Successfully delete employee who is not a customer - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully delete employee who is not a customer - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully delete employee who is also a customer STANDARD_OUT

    Scenario: Successfully delete employee who is also a customer [90m# RegisterUpdateDeleteEmployee.feature:156[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to delete employee [0m[32m[1m"alice"[0m        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_delete_employee(java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mno employee shall exist with username [0m[32m[1m"alice"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_employee_shall_exist_with_username(java.lang.String)[0m
    the current customer is alice
      [32mBut [0m[32ma customer shall exist with username [0m[32m[1m"alice"[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.a_customer_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's password shall be [0m[32m[1m"alice123"[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_password_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's address shall be [0m[32m[1m"123 Alice Avenue"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_address_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's name shall be [0m[32m[1m"Alice Allisson"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_name_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer's phone number shall be [0m[32m[1m"(514) 555-1111"[0m   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_s_phone_number_shall_be(java.lang.String)[0m
      [32mAnd [0m[32mthe customer shall have [0m[32m[1m2[0m[32m points[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_customer_shall_have_points(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m2[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Successfully delete employee who is also a customer PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to delete an employee that doesn't exist > Register, update, and delete employees - Try to delete an employee that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to delete an employee that doesn't exist - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to delete an employee that doesn't exist                           [90m# RegisterUpdateDeleteEmployee.feature:182[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to delete employee [0m[32m[1m"nonexistent"[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_delete_employee(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no user with username \"nonexistent\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno employee shall exist with username [0m[32m[1m"nonexistent"[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to delete an employee that doesn't exist > Register, update, and delete employees - Try to delete an employee that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to delete an employee that doesn't exist - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to delete an employee that doesn't exist > Register, update, and delete employees - Try to delete an employee that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to delete an employee that doesn't exist - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to delete an employee that doesn't exist                     [90m# RegisterUpdateDeleteEmployee.feature:183[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to delete employee [0m[32m[1m"ghost"[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_delete_employee(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no user with username \"ghost\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno employee shall exist with username [0m[32m[1m"ghost"[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to delete an employee that doesn't exist > Register, update, and delete employees - Try to delete an employee that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to delete an employee that doesn't exist - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to delete an employee that doesn't exist > Register, update, and delete employees - Try to delete an employee that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to delete an employee that doesn't exist - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Try to delete an employee that doesn't exist             [90m# RegisterUpdateDeleteEmployee.feature:184[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to delete employee [0m[32m[1m"obiwan212"[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_delete_employee(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"\"obiwan212\" is not an employee"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno employee shall exist with username [0m[32m[1m"obiwan212"[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to delete an employee that doesn't exist > Register, update, and delete employees - Try to delete an employee that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to delete an employee that doesn't exist - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to delete an employee that doesn't exist > Register, update, and delete employees - Try to delete an employee that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to delete an employee that doesn't exist - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Try to delete an employee that doesn't exist             [90m# RegisterUpdateDeleteEmployee.feature:185[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mWhen [0m[32mthe manager attempts to delete employee [0m[32m[1m"anakin501"[0m                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_manager_attempts_to_delete_employee(java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"\"anakin501\" is not an employee"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno employee shall exist with username [0m[32m[1m"anakin501"[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.no_employee_shall_exist_with_username(java.lang.String)[0m
      [32mAnd [0m[32mthe total number of users shall be [0m[32m[1m6[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_users_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of customers shall be [0m[32m[1m3[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_customers_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of employees shall be [0m[32m[1m3[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_total_number_of_employees_shall_be(java.lang.Integer)[0m
      [32mAnd [0m[32mthere shall be one manager[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.there_shall_be_one_manager()[0m

CucumberTestRunner > Cucumber > Register, update, and delete employees > Register, update, and delete employees - Try to delete an employee that doesn't exist > Register, update, and delete employees - Try to delete an employee that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Register, update, and delete employees - Try to delete an employee that doesn't exist - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Successfully add a new item to an order > Update order - Successfully add a new item to an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Successfully add a new item to an order - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully add a new item to an order                           [90m# UpdateOrder.feature:48[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [242] Starting cost calculation...
    [242] Processing item: Chicken noodle soup
    [242]   Unit price (cents): 179
    [242]   Quantity: 1
    [242]   Discount multiplier: 1000
    [242]   Discounted item cost (cents): 179
    [242]   Running total cost (cents): 179
    [242] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to add item [0m[32m[1m"Chicken noodle soup"[0m[32m to the order with ID [0m[32m[1m"a"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_add_item_to_the_order_with_id(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m [0m[32m[1m"Chicken noodle soup"[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m2[0m[32m distinct items[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Successfully add a new item to an order > Update order - Successfully add a new item to an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Successfully add a new item to an order - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Successfully add a new item to an order > Update order - Successfully add a new item to an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Successfully add a new item to an order - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully add a new item to an order            [90m# UpdateOrder.feature:49[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [247] Starting cost calculation...
    [247] Processing item: Chicken noodle soup
    [247]   Unit price (cents): 179
    [247]   Quantity: 1
    [247]   Discount multiplier: 1000
    [247]   Discounted item cost (cents): 179
    [247]   Running total cost (cents): 179
    [247] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to add item [0m[32m[1m"Eggs"[0m[32m to the order with ID [0m[32m[1m"c"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_add_item_to_the_order_with_id(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"c"[0m[32m shall include [0m[32m[1m1[0m[32m [0m[32m[1m"Eggs"[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"c"[0m[32m shall include [0m[32m[1m1[0m[32m distinct items[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Successfully add a new item to an order > Update order - Successfully add a new item to an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Successfully add a new item to an order - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Successfully add a new item to an order > Update order - Successfully add a new item to an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Successfully add a new item to an order - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully add a new item to an order                           [90m# UpdateOrder.feature:50[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [252] Starting cost calculation...
    [252] Processing item: Chicken noodle soup
    [252]   Unit price (cents): 179
    [252]   Quantity: 1
    [252]   Discount multiplier: 1000
    [252]   Discounted item cost (cents): 179
    [252]   Running total cost (cents): 179
    [252] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to add item [0m[32m[1m"Chicken noodle soup"[0m[32m to the order with ID [0m[32m[1m"c"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_add_item_to_the_order_with_id(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"c"[0m[32m shall include [0m[32m[1m1[0m[32m [0m[32m[1m"Chicken noodle soup"[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"c"[0m[32m shall include [0m[32m[1m1[0m[32m distinct items[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Successfully add a new item to an order > Update order - Successfully add a new item to an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Successfully add a new item to an order - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Try to add item to an order that doesn't exist > Update order - Try to add item to an order that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to add item to an order that doesn't exist - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to add item to an order that doesn't exist                                [90m# UpdateOrder.feature:60[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [257] Starting cost calculation...
    [257] Processing item: Chicken noodle soup
    [257]   Unit price (cents): 179
    [257]   Quantity: 1
    [257]   Discount multiplier: 1000
    [257]   Discounted item cost (cents): 179
    [257]   Running total cost (cents): 179
    [257] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to add item [0m[32m[1m"Eggs"[0m[32m to the non-existent order with order number [0m[32m[1m9999999[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_add_item_to_the_non_existent_order_with_order_number(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no order with number \"9999999\""[0m             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno order shall exist with order number [0m[32m[1m9999999[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.no_order_shall_exist_with_order_number(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m5[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Try to add item to an order that doesn't exist > Update order - Try to add item to an order that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to add item to an order that doesn't exist - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Try to add item to an order that doesn't exist > Update order - Try to add item to an order that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to add item to an order that doesn't exist - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to add item to an order that doesn't exist                                                 [90m# UpdateOrder.feature:61[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [262] Starting cost calculation...
    [262] Processing item: Chicken noodle soup
    [262]   Unit price (cents): 179
    [262]   Quantity: 1
    [262]   Discount multiplier: 1000
    [262]   Discounted item cost (cents): 179
    [262]   Running total cost (cents): 179
    [262] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to add item [0m[32m[1m"Chicken noodle soup"[0m[32m to the non-existent order with order number [0m[32m[1m123456789[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_add_item_to_the_non_existent_order_with_order_number(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no order with number \"123456789\""[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno order shall exist with order number [0m[32m[1m123456789[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.no_order_shall_exist_with_order_number(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m5[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Try to add item to an order that doesn't exist > Update order - Try to add item to an order that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to add item to an order that doesn't exist - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Try to add item that doesn't exist to an order > Update order - Try to add item that doesn't exist to an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to add item that doesn't exist to an order - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to add item that doesn't exist to an order                    [90m# UpdateOrder.feature:72[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [267] Starting cost calculation...
    [267] Processing item: Chicken noodle soup
    [267]   Unit price (cents): 179
    [267]   Quantity: 1
    [267]   Discount multiplier: 1000
    [267]   Discounted item cost (cents): 179
    [267]   Running total cost (cents): 179
    [267] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to add item [0m[32m[1m"Unicorn steak"[0m[32m to the order with ID [0m[32m[1m"a"[0m       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_add_item_to_the_order_with_id(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no item called \"Unicorn steak\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"Unicorn steak"[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall not include any items called [0m[32m[1m"Unicorn steak"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_not_include_any_items_called(java.lang.String,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct items[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Try to add item that doesn't exist to an order > Update order - Try to add item that doesn't exist to an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to add item that doesn't exist to an order - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Try to add item that doesn't exist to an order > Update order - Try to add item that doesn't exist to an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to add item that doesn't exist to an order - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to add item that doesn't exist to an order                  [90m# UpdateOrder.feature:73[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [272] Starting cost calculation...
    [272] Processing item: Chicken noodle soup
    [272]   Unit price (cents): 179
    [272]   Quantity: 1
    [272]   Discount multiplier: 1000
    [272]   Discounted item cost (cents): 179
    [272]   Running total cost (cents): 179
    [272] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to add item [0m[32m[1m"Dragon tail"[0m[32m to the order with ID [0m[32m[1m"c"[0m       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_add_item_to_the_order_with_id(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no item called \"Dragon tail\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"Dragon tail"[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"c"[0m[32m shall not include any items called [0m[32m[1m"Dragon tail"[0m      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_not_include_any_items_called(java.lang.String,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"c"[0m[32m shall include [0m[32m[1m0[0m[32m distinct items[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Try to add item that doesn't exist to an order > Update order - Try to add item that doesn't exist to an order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to add item that doesn't exist to an order - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Update order > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to add an item to an order that already contains that item STANDARD_OUT

    Scenario: Try to add an item to an order that already contains that item       [90m# UpdateOrder.feature:75[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [277] Starting cost calculation...
    [277] Processing item: Chicken noodle soup
    [277]   Unit price (cents): 179
    [277]   Quantity: 1
    [277]   Discount multiplier: 1000
    [277]   Discounted item cost (cents): 179
    [277]   Running total cost (cents): 179
    [277] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to add item [0m[32m[1m"Eggs"[0m[32m to the order with ID [0m[32m[1m"a"[0m           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_add_item_to_the_order_with_id(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"order already includes item \"Eggs\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m2[0m[32m [0m[32m[1m"Eggs"[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct item[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to add an item to an order that already contains that item PASSED

CucumberTestRunner > Cucumber > Update order > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to add an item to an order that's already been placed STANDARD_OUT

    Scenario: Try to add an item to an order that's already been placed     [90m# UpdateOrder.feature:81[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [282] Starting cost calculation...
    [282] Processing item: Chicken noodle soup
    [282]   Unit price (cents): 179
    [282]   Quantity: 1
    [282]   Discount multiplier: 1000
    [282]   Discounted item cost (cents): 179
    [282]   Running total cost (cents): 179
    [282] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to add item [0m[32m[1m"Eggs"[0m[32m to the order with ID [0m[32m[1m"d"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_add_item_to_the_order_with_id(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"order has already been placed"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"d"[0m[32m shall not include any items called [0m[32m[1m"Eggs"[0m   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_not_include_any_items_called(java.lang.String,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"d"[0m[32m shall include [0m[32m[1m1[0m[32m distinct item[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to add an item to an order that's already been placed PASSED

CucumberTestRunner > Cucumber > Update order > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to add an item to an order that's already been checked out STANDARD_OUT

    Scenario: Try to add an item to an order that's already been checked out     [90m# UpdateOrder.feature:87[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [287] Starting cost calculation...
    [287] Processing item: Chicken noodle soup
    [287]   Unit price (cents): 179
    [287]   Quantity: 1
    [287]   Discount multiplier: 1000
    [287]   Discounted item cost (cents): 179
    [287]   Running total cost (cents): 179
    [287] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to add item [0m[32m[1m"Eggs"[0m[32m to the order with ID [0m[32m[1m"e"[0m         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_add_item_to_the_order_with_id(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"order has already been checked out"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"e"[0m[32m shall not include any items called [0m[32m[1m"Eggs"[0m        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_not_include_any_items_called(java.lang.String,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"e"[0m[32m shall include [0m[32m[1m1[0m[32m distinct item[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to add an item to an order that's already been checked out PASSED

CucumberTestRunner > Cucumber > Update order > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to add an unavailable item to an order STANDARD_OUT

    Scenario: Try to add an unavailable item to an order                              [90m# UpdateOrder.feature:93[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [292] Starting cost calculation...
    [292] Processing item: Chicken noodle soup
    [292]   Unit price (cents): 179
    [292]   Quantity: 1
    [292]   Discount multiplier: 1000
    [292]   Discounted item cost (cents): 179
    [292]   Running total cost (cents): 179
    [292] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to add item [0m[32m[1m"Vegetable soup"[0m[32m to the order with ID [0m[32m[1m"a"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_add_item_to_the_order_with_id(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"item \"Vegetable soup\" is out of stock"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall not include any items called [0m[32m[1m"Vegetable soup"[0m   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_not_include_any_items_called(java.lang.String,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct item[0m                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to add an unavailable item to an order PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Successfully update quantity of item in order > Update order - Successfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Successfully update quantity of item in order - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully update quantity of item in order                           [90m# UpdateOrder.feature:107[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [297] Starting cost calculation...
    [297] Processing item: Chicken noodle soup
    [297]   Unit price (cents): 179
    [297]   Quantity: 1
    [297]   Discount multiplier: 1000
    [297]   Discounted item cost (cents): 179
    [297]   Running total cost (cents): 179
    [297] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the order with ID [0m[32m[1m"a"[0m[32m to [0m[32m[1m1[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_set_the_quantity_of_item_in_the_order_with_id_to(java.lang.String,java.lang.String,int)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m [0m[32m[1m"Eggs"[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct item[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Successfully update quantity of item in order > Update order - Successfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Successfully update quantity of item in order - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Successfully update quantity of item in order > Update order - Successfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Successfully update quantity of item in order - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully update quantity of item in order                           [90m# UpdateOrder.feature:108[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [302] Starting cost calculation...
    [302] Processing item: Chicken noodle soup
    [302]   Unit price (cents): 179
    [302]   Quantity: 1
    [302]   Discount multiplier: 1000
    [302]   Discounted item cost (cents): 179
    [302]   Running total cost (cents): 179
    [302] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the order with ID [0m[32m[1m"a"[0m[32m to [0m[32m[1m3[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_set_the_quantity_of_item_in_the_order_with_id_to(java.lang.String,java.lang.String,int)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m3[0m[32m [0m[32m[1m"Eggs"[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct item[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Successfully update quantity of item in order > Update order - Successfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Successfully update quantity of item in order - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Successfully update quantity of item in order > Update order - Successfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Successfully update quantity of item in order - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully update quantity of item in order                            [90m# UpdateOrder.feature:109[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [307] Starting cost calculation...
    [307] Processing item: Chicken noodle soup
    [307]   Unit price (cents): 179
    [307]   Quantity: 1
    [307]   Discount multiplier: 1000
    [307]   Discounted item cost (cents): 179
    [307]   Running total cost (cents): 179
    [307] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the order with ID [0m[32m[1m"a"[0m[32m to [0m[32m[1m10[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_set_the_quantity_of_item_in_the_order_with_id_to(java.lang.String,java.lang.String,int)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m10[0m[32m [0m[32m[1m"Eggs"[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct item[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Successfully update quantity of item in order > Update order - Successfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Successfully update quantity of item in order - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Update order > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Successfully remove item from order by setting its quantity to zero STANDARD_OUT

    Scenario: Successfully remove item from order by setting its quantity to zero             [90m# UpdateOrder.feature:111[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [312] Starting cost calculation...
    [312] Processing item: Chicken noodle soup
    [312]   Unit price (cents): 179
    [312]   Quantity: 1
    [312]   Discount multiplier: 1000
    [312]   Discounted item cost (cents): 179
    [312]   Running total cost (cents): 179
    [312] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the order with ID [0m[32m[1m"a"[0m[32m to [0m[32m[1m0[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_set_the_quantity_of_item_in_the_order_with_id_to(java.lang.String,java.lang.String,int)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall not include any items called [0m[32m[1m"Eggs"[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_not_include_any_items_called(java.lang.String,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m0[0m[32m distinct items[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Successfully remove item from order by setting its quantity to zero PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Try to update quantity of item in an order that doesn't exist > Update order - Try to update quantity of item in an order that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to update quantity of item in an order that doesn't exist - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to update quantity of item in an order that doesn't exist                    [90m# UpdateOrder.feature:125[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [317] Starting cost calculation...
    [317] Processing item: Chicken noodle soup
    [317]   Unit price (cents): 179
    [317]   Quantity: 1
    [317]   Discount multiplier: 1000
    [317]   Discounted item cost (cents): 179
    [317]   Running total cost (cents): 179
    [317] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the non-existent order [0m[32m[1m9999999[0m[32m to [0m[32m[1m2[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_set_the_quantity_of_item_in_the_nonexistent_order_to(java.lang.String,int,int)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no order with number \"9999999\""[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno order shall exist with order number [0m[32m[1m9999999[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.no_order_shall_exist_with_order_number(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m5[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Try to update quantity of item in an order that doesn't exist > Update order - Try to update quantity of item in an order that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to update quantity of item in an order that doesn't exist - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Try to update quantity of item in an order that doesn't exist > Update order - Try to update quantity of item in an order that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to update quantity of item in an order that doesn't exist - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to update quantity of item in an order that doesn't exist                                     [90m# UpdateOrder.feature:126[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [322] Starting cost calculation...
    [322] Processing item: Chicken noodle soup
    [322]   Unit price (cents): 179
    [322]   Quantity: 1
    [322]   Discount multiplier: 1000
    [322]   Discounted item cost (cents): 179
    [322]   Running total cost (cents): 179
    [322] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to set the quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m in the non-existent order [0m[32m[1m123456789[0m[32m to [0m[32m[1m3[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_set_the_quantity_of_item_in_the_nonexistent_order_to(java.lang.String,int,int)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no order with number \"123456789\""[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno order shall exist with order number [0m[32m[1m123456789[0m                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.no_order_shall_exist_with_order_number(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of orders shall be [0m[32m[1m5[0m                                                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_total_number_of_orders_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Try to update quantity of item in an order that doesn't exist > Update order - Try to update quantity of item in an order that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Try to update quantity of item in an order that doesn't exist - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Update quantity of item when order doesn't contain that item > Update order - Update quantity of item when order doesn't contain that item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Update quantity of item when order doesn't contain that item - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Update quantity of item when order doesn't contain that item                   [90m# UpdateOrder.feature:136[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [327] Starting cost calculation...
    [327] Processing item: Chicken noodle soup
    [327]   Unit price (cents): 179
    [327]   Quantity: 1
    [327]   Discount multiplier: 1000
    [327]   Discounted item cost (cents): 179
    [327]   Running total cost (cents): 179
    [327] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to set the quantity of item [0m[32m[1m"Dragon tail"[0m[32m in the order with ID [0m[32m[1m"a"[0m[32m to [0m[32m[1m2[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_set_the_quantity_of_item_in_the_order_with_id_to(java.lang.String,java.lang.String,int)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no item called \"Dragon tail\""[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall not include any items called [0m[32m[1m"Dragon tail"[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_not_include_any_items_called(java.lang.String,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct items[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Update quantity of item when order doesn't contain that item > Update order - Update quantity of item when order doesn't contain that item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Update quantity of item when order doesn't contain that item - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Update quantity of item when order doesn't contain that item > Update order - Update quantity of item when order doesn't contain that item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Update quantity of item when order doesn't contain that item - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Update quantity of item when order doesn't contain that item            [90m# UpdateOrder.feature:137[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [332] Starting cost calculation...
    [332] Processing item: Chicken noodle soup
    [332]   Unit price (cents): 179
    [332]   Quantity: 1
    [332]   Discount multiplier: 1000
    [332]   Discounted item cost (cents): 179
    [332]   Running total cost (cents): 179
    [332] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the order with ID [0m[32m[1m"c"[0m[32m to [0m[32m[1m1[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_set_the_quantity_of_item_in_the_order_with_id_to(java.lang.String,java.lang.String,int)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"order does not include item \"Eggs\""[0m            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"c"[0m[32m shall not include any items called [0m[32m[1m"Eggs"[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_not_include_any_items_called(java.lang.String,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"c"[0m[32m shall include [0m[32m[1m0[0m[32m distinct items[0m                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Update quantity of item when order doesn't contain that item > Update order - Update quantity of item when order doesn't contain that item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Update quantity of item when order doesn't contain that item - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Unsuccessfully update quantity of item in order > Update order - Unsuccessfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Unsuccessfully update quantity of item in order - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Unsuccessfully update quantity of item in order                          [90m# UpdateOrder.feature:147[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [337] Starting cost calculation...
    [337] Processing item: Chicken noodle soup
    [337]   Unit price (cents): 179
    [337]   Quantity: 1
    [337]   Discount multiplier: 1000
    [337]   Discounted item cost (cents): 179
    [337]   Running total cost (cents): 179
    [337] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the order with ID [0m[32m[1m"a"[0m[32m to [0m[32m[1m-1[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_set_the_quantity_of_item_in_the_order_with_id_to(java.lang.String,java.lang.String,int)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"quantity must be non-negative"[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m2[0m[32m [0m[32m[1m"Eggs"[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct items[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Unsuccessfully update quantity of item in order > Update order - Unsuccessfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Unsuccessfully update quantity of item in order - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Unsuccessfully update quantity of item in order > Update order - Unsuccessfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Unsuccessfully update quantity of item in order - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Unsuccessfully update quantity of item in order                          [90m# UpdateOrder.feature:148[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [342] Starting cost calculation...
    [342] Processing item: Chicken noodle soup
    [342]   Unit price (cents): 179
    [342]   Quantity: 1
    [342]   Discount multiplier: 1000
    [342]   Discounted item cost (cents): 179
    [342]   Running total cost (cents): 179
    [342] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the order with ID [0m[32m[1m"a"[0m[32m to [0m[32m[1m-2[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_set_the_quantity_of_item_in_the_order_with_id_to(java.lang.String,java.lang.String,int)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"quantity must be non-negative"[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m2[0m[32m [0m[32m[1m"Eggs"[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct items[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Unsuccessfully update quantity of item in order > Update order - Unsuccessfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Unsuccessfully update quantity of item in order - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Unsuccessfully update quantity of item in order > Update order - Unsuccessfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Unsuccessfully update quantity of item in order - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Unsuccessfully update quantity of item in order                          [90m# UpdateOrder.feature:149[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [347] Starting cost calculation...
    [347] Processing item: Chicken noodle soup
    [347]   Unit price (cents): 179
    [347]   Quantity: 1
    [347]   Discount multiplier: 1000
    [347]   Discounted item cost (cents): 179
    [347]   Running total cost (cents): 179
    [347] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the order with ID [0m[32m[1m"a"[0m[32m to [0m[32m[1m11[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_set_the_quantity_of_item_in_the_order_with_id_to(java.lang.String,java.lang.String,int)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"quantity cannot exceed 10"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m2[0m[32m [0m[32m[1m"Eggs"[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct items[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Unsuccessfully update quantity of item in order > Update order - Unsuccessfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Unsuccessfully update quantity of item in order - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Unsuccessfully update quantity of item in order > Update order - Unsuccessfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Unsuccessfully update quantity of item in order - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Unsuccessfully update quantity of item in order                          [90m# UpdateOrder.feature:150[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [352] Starting cost calculation...
    [352] Processing item: Chicken noodle soup
    [352]   Unit price (cents): 179
    [352]   Quantity: 1
    [352]   Discount multiplier: 1000
    [352]   Discounted item cost (cents): 179
    [352]   Running total cost (cents): 179
    [352] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the order with ID [0m[32m[1m"a"[0m[32m to [0m[32m[1m12[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_set_the_quantity_of_item_in_the_order_with_id_to(java.lang.String,java.lang.String,int)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"quantity cannot exceed 10"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m2[0m[32m [0m[32m[1m"Eggs"[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct items[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Unsuccessfully update quantity of item in order > Update order - Unsuccessfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Unsuccessfully update quantity of item in order - Examples - Example #1.4 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Unsuccessfully update quantity of item in order > Update order - Unsuccessfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Unsuccessfully update quantity of item in order - Examples - Example #1.5 STANDARD_OUT

    Scenario Outline: Unsuccessfully update quantity of item in order                          [90m# UpdateOrder.feature:151[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [357] Starting cost calculation...
    [357] Processing item: Chicken noodle soup
    [357]   Unit price (cents): 179
    [357]   Quantity: 1
    [357]   Discount multiplier: 1000
    [357]   Discounted item cost (cents): 179
    [357]   Running total cost (cents): 179
    [357] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the order with ID [0m[32m[1m"b"[0m[32m to [0m[32m[1m10[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_set_the_quantity_of_item_in_the_order_with_id_to(java.lang.String,java.lang.String,int)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"order has already been placed"[0m                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"b"[0m[32m shall include [0m[32m[1m1[0m[32m [0m[32m[1m"Eggs"[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"b"[0m[32m shall include [0m[32m[1m2[0m[32m distinct items[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Unsuccessfully update quantity of item in order > Update order - Unsuccessfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Unsuccessfully update quantity of item in order - Examples - Example #1.5 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Unsuccessfully update quantity of item in order > Update order - Unsuccessfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Unsuccessfully update quantity of item in order - Examples - Example #1.6 STANDARD_OUT

    Scenario Outline: Unsuccessfully update quantity of item in order                                        [90m# UpdateOrder.feature:152[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [362] Starting cost calculation...
    [362] Processing item: Chicken noodle soup
    [362]   Unit price (cents): 179
    [362]   Quantity: 1
    [362]   Discount multiplier: 1000
    [362]   Discounted item cost (cents): 179
    [362]   Running total cost (cents): 179
    [362] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to set the quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m in the order with ID [0m[32m[1m"b"[0m[32m to [0m[32m[1m7[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_set_the_quantity_of_item_in_the_order_with_id_to(java.lang.String,java.lang.String,int)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"order has already been placed"[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"b"[0m[32m shall include [0m[32m[1m3[0m[32m [0m[32m[1m"Chicken noodle soup"[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"b"[0m[32m shall include [0m[32m[1m2[0m[32m distinct items[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Unsuccessfully update quantity of item in order > Update order - Unsuccessfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Unsuccessfully update quantity of item in order - Examples - Example #1.6 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Unsuccessfully update quantity of item in order > Update order - Unsuccessfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Unsuccessfully update quantity of item in order - Examples - Example #1.7 STANDARD_OUT

    Scenario Outline: Unsuccessfully update quantity of item in order                                        [90m# UpdateOrder.feature:153[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [367] Starting cost calculation...
    [367] Processing item: Chicken noodle soup
    [367]   Unit price (cents): 179
    [367]   Quantity: 1
    [367]   Discount multiplier: 1000
    [367]   Discounted item cost (cents): 179
    [367]   Running total cost (cents): 179
    [367] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to set the quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m in the order with ID [0m[32m[1m"e"[0m[32m to [0m[32m[1m2[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_set_the_quantity_of_item_in_the_order_with_id_to(java.lang.String,java.lang.String,int)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"order has already been checked out"[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"e"[0m[32m shall include [0m[32m[1m1[0m[32m [0m[32m[1m"Chicken noodle soup"[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"e"[0m[32m shall include [0m[32m[1m1[0m[32m distinct items[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Unsuccessfully update quantity of item in order > Update order - Unsuccessfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Unsuccessfully update quantity of item in order - Examples - Example #1.7 PASSED

CucumberTestRunner > Cucumber > Update order > Update order - Unsuccessfully update quantity of item in order > Update order - Unsuccessfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Unsuccessfully update quantity of item in order - Examples - Example #1.8 STANDARD_OUT

    Scenario Outline: Unsuccessfully update quantity of item in order                                        [90m# UpdateOrder.feature:154[0m
      [32mGiven [0m[32mthe following employees exist in the system[0m                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_employees_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username | password | name           | phone          |
        | alice    | alice123 | Alice Allisson | (514) 555-1111 |
        | bob      | password | Bob Robertson  | (514) 555-2222 |
        | claire   | password | Claire Clark   | (514) 555-3333 |
      [32mAnd [0m[32mthe following customers exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.UserStepDefinitions.the_following_customers_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | username  | password         | name             | phone          | address                | points |
        | obiwan212 | highground       | Obi-Wan Kenobi   | (438) 555-1234 | Jedi Temple, Coruscant | 212    |
        | anakin501 | i-dont-like-sand | Anakin Skywalker | (514) 555-9876 | Jedi Temple, Coruscant | 501    |
        | alice     | ---              | ---              | ---            | 123 Alice Avenue       | 2      |
      [32mAnd [0m[32mthe following items exist in the system[0m                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 5        | 2      |
        | Vegetable soup      | 179   | non-perishable  | 0        | 2      |
      [32mAnd [0m[32mthe following orders exist in the system[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_orders_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced | deadline    | customer  | assignee | state              |
        | a  | NULL       | SameDay     | alice     | NULL     | under construction |
        | b  | 2025-02-24 | InOneDay    | obiwan212 | NULL     | placed             |
        | c  | NULL       | InTwoDays   | anakin501 | NULL     | under construction |
        | d  | 2025-02-24 | InThreeDays | alice     | bob      | delivered          |
        | e  | NULL       | InOneDay    | alice     | NULL     | pending            |
    items being added to order set to pending
    [372] Starting cost calculation...
    [372] Processing item: Chicken noodle soup
    [372]   Unit price (cents): 179
    [372]   Quantity: 1
    [372]   Discount multiplier: 1000
    [372]   Discounted item cost (cents): 179
    [372]   Running total cost (cents): 179
    [372] Total cost set to: 179 cents
      [32mAnd [0m[32mthe following items are part of orders[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_following_items_are_part_of_orders(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | order | item                | quantity |
        | a     | Eggs                | 2        |
        | b     | Eggs                | 1        |
        | b     | Chicken noodle soup | 3        |
        | d     | Chicken noodle soup | 5        |
        | e     | Chicken noodle soup | 1        |
      [32mWhen [0m[32mthe user attempts to set the quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m in the order with ID [0m[32m[1m"e"[0m[32m to [0m[32m[1m0[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_user_attempts_to_set_the_quantity_of_item_in_the_order_with_id_to(java.lang.String,java.lang.String,int)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"order has already been checked out"[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"e"[0m[32m shall include [0m[32m[1m1[0m[32m [0m[32m[1m"Chicken noodle soup"[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
      [32mAnd [0m[32mthe order with ID [0m[32m[1m"e"[0m[32m shall include [0m[32m[1m1[0m[32m distinct items[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.OrderStepDefinitions.the_order_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update order > Update order - Unsuccessfully update quantity of item in order > Update order - Unsuccessfully update quantity of item in order - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update order - Unsuccessfully update quantity of item in order - Examples - Example #1.8 PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Successfully add a new item to a shipment > Update shipment - Successfully add a new item to a shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Successfully add a new item to a shipment - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully add a new item to a shipment                               [90m# UpdateShipment.feature:35[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=30, Date=null
    Created shipment: ID=b, Number=31, Date=2025-02-24
    Created shipment: ID=c, Number=32, Date=null
    Created shipment: ID=d, Number=33, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to add item [0m[32m[1m"Chicken noodle soup"[0m[32m to the shipment with ID [0m[32m[1m"a"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_add_item_to_the_shipment_with_id(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    looking for number with id a
    from hash map, the ship number for id a is 30
    FOUND CORRESPONDING SHIPMENTca.mcgill.ecse.grocerymanagementsystem.model.Shipment@b91d8c4[shipmentNumber:30]
      dateOrdered=null
      groceryManagementSystem = 4b6166aa
    ca.mcgill.ecse.grocerymanagementsystem.model.Shipment@b91d8c4[shipmentNumber:30]
      dateOrdered=null
      groceryManagementSystem = 4b6166aa
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m [0m[32m[1m"Chicken noodle soup"[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
    found item Eggs
    found item Chicken noodle soup
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m2[0m[32m distinct items[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Successfully add a new item to a shipment > Update shipment - Successfully add a new item to a shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Successfully add a new item to a shipment - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Successfully add a new item to a shipment > Update shipment - Successfully add a new item to a shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Successfully add a new item to a shipment - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully add a new item to a shipment                [90m# UpdateShipment.feature:36[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=34, Date=null
    Created shipment: ID=b, Number=35, Date=2025-02-24
    Created shipment: ID=c, Number=36, Date=null
    Created shipment: ID=d, Number=37, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to add item [0m[32m[1m"Eggs"[0m[32m to the shipment with ID [0m[32m[1m"c"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_add_item_to_the_shipment_with_id(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    looking for number with id c
    from hash map, the ship number for id c is 36
    FOUND CORRESPONDING SHIPMENTca.mcgill.ecse.grocerymanagementsystem.model.Shipment@7de0c6ae[shipmentNumber:36]
      dateOrdered=null
      groceryManagementSystem = a486d78
    ca.mcgill.ecse.grocerymanagementsystem.model.Shipment@7de0c6ae[shipmentNumber:36]
      dateOrdered=null
      groceryManagementSystem = a486d78
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"c"[0m[32m shall include [0m[32m[1m1[0m[32m [0m[32m[1m"Eggs"[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
    found item Eggs
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"c"[0m[32m shall include [0m[32m[1m1[0m[32m distinct items[0m              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Successfully add a new item to a shipment > Update shipment - Successfully add a new item to a shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Successfully add a new item to a shipment - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Successfully add a new item to a shipment > Update shipment - Successfully add a new item to a shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Successfully add a new item to a shipment - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully add a new item to a shipment                               [90m# UpdateShipment.feature:37[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=38, Date=null
    Created shipment: ID=b, Number=39, Date=2025-02-24
    Created shipment: ID=c, Number=40, Date=null
    Created shipment: ID=d, Number=41, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to add item [0m[32m[1m"Chicken noodle soup"[0m[32m to the shipment with ID [0m[32m[1m"c"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_add_item_to_the_shipment_with_id(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    looking for number with id c
    from hash map, the ship number for id c is 40
    FOUND CORRESPONDING SHIPMENTca.mcgill.ecse.grocerymanagementsystem.model.Shipment@cdc3aae[shipmentNumber:40]
      dateOrdered=null
      groceryManagementSystem = 7ef2d7a6
    ca.mcgill.ecse.grocerymanagementsystem.model.Shipment@cdc3aae[shipmentNumber:40]
      dateOrdered=null
      groceryManagementSystem = 7ef2d7a6
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"c"[0m[32m shall include [0m[32m[1m1[0m[32m [0m[32m[1m"Chicken noodle soup"[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
    found item Chicken noodle soup
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"c"[0m[32m shall include [0m[32m[1m1[0m[32m distinct items[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Successfully add a new item to a shipment > Update shipment - Successfully add a new item to a shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Successfully add a new item to a shipment - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Try to add item to a shipment that doesn't exist > Update shipment - Try to add item to a shipment that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Try to add item to a shipment that doesn't exist - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to add item to a shipment that doesn't exist                           [90m# UpdateShipment.feature:47[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=42, Date=null
    Created shipment: ID=b, Number=43, Date=2025-02-24
    Created shipment: ID=c, Number=44, Date=null
    Created shipment: ID=d, Number=45, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe user attempts to add item [0m[32m[1m"Eggs"[0m[32m to the non-existent shipment with number [0m[32m[1m9999999[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_user_attempts_to_add_item_to_the_non_existent_shipment_with_number(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no shipment with number \"9999999\""[0m       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno shipment shall exist with number [0m[32m[1m9999999[0m                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.no_shipment_shall_exist_with_number(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of shipments shall be [0m[32m[1m4[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_total_number_of_shipments_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Try to add item to a shipment that doesn't exist > Update shipment - Try to add item to a shipment that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Try to add item to a shipment that doesn't exist - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Try to add item to a shipment that doesn't exist > Update shipment - Try to add item to a shipment that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Try to add item to a shipment that doesn't exist - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to add item to a shipment that doesn't exist                                            [90m# UpdateShipment.feature:48[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=46, Date=null
    Created shipment: ID=b, Number=47, Date=2025-02-24
    Created shipment: ID=c, Number=48, Date=null
    Created shipment: ID=d, Number=49, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe user attempts to add item [0m[32m[1m"Chicken noodle soup"[0m[32m to the non-existent shipment with number [0m[32m[1m123456789[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_user_attempts_to_add_item_to_the_non_existent_shipment_with_number(java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no shipment with number \"123456789\""[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno shipment shall exist with number [0m[32m[1m123456789[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.no_shipment_shall_exist_with_number(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of shipments shall be [0m[32m[1m4[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_total_number_of_shipments_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Try to add item to a shipment that doesn't exist > Update shipment - Try to add item to a shipment that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Try to add item to a shipment that doesn't exist - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Try to add item that doesn't exist to a shipment > Update shipment - Try to add item that doesn't exist to a shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Try to add item that doesn't exist to a shipment - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to add item that doesn't exist to a shipment                  [90m# UpdateShipment.feature:59[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=50, Date=null
    Created shipment: ID=b, Number=51, Date=2025-02-24
    Created shipment: ID=c, Number=52, Date=null
    Created shipment: ID=d, Number=53, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to add item [0m[32m[1m"Unicorn steak"[0m[32m to the shipment with ID [0m[32m[1m"a"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_add_item_to_the_shipment_with_id(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no item called \"Unicorn steak\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"Unicorn steak"[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall not include any items called [0m[32m[1m"Unicorn steak"[0m   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_not_include_any_items_called(java.lang.String,java.lang.String)[0m
    found item Eggs
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct items[0m                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Try to add item that doesn't exist to a shipment > Update shipment - Try to add item that doesn't exist to a shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Try to add item that doesn't exist to a shipment - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Try to add item that doesn't exist to a shipment > Update shipment - Try to add item that doesn't exist to a shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Try to add item that doesn't exist to a shipment - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to add item that doesn't exist to a shipment                [90m# UpdateShipment.feature:60[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=54, Date=null
    Created shipment: ID=b, Number=55, Date=2025-02-24
    Created shipment: ID=c, Number=56, Date=null
    Created shipment: ID=d, Number=57, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to add item [0m[32m[1m"Dragon tail"[0m[32m to the shipment with ID [0m[32m[1m"c"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_add_item_to_the_shipment_with_id(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no item called \"Dragon tail\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno item shall exist with name [0m[32m[1m"Dragon tail"[0m                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.no_item_shall_exist_with_name(java.lang.String)[0m
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"c"[0m[32m shall not include any items called [0m[32m[1m"Dragon tail"[0m   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_not_include_any_items_called(java.lang.String,java.lang.String)[0m
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"c"[0m[32m shall include [0m[32m[1m0[0m[32m distinct items[0m                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Try to add item that doesn't exist to a shipment > Update shipment - Try to add item that doesn't exist to a shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Try to add item that doesn't exist to a shipment - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Update shipment > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Try to add an item to a shipment that already contains that item STANDARD_OUT

    Scenario: Try to add an item to a shipment that already contains that item        [90m# UpdateShipment.feature:62[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=58, Date=null
    Created shipment: ID=b, Number=59, Date=2025-02-24
    Created shipment: ID=c, Number=60, Date=null
    Created shipment: ID=d, Number=61, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to add item [0m[32m[1m"Eggs"[0m[32m to the shipment with ID [0m[32m[1m"a"[0m        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_add_item_to_the_shipment_with_id(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"shipment already includes item \"Eggs\""[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
    looking for number with id a
    from hash map, the ship number for id a is 58
    FOUND CORRESPONDING SHIPMENTca.mcgill.ecse.grocerymanagementsystem.model.Shipment@5dcbb60[shipmentNumber:58]
      dateOrdered=null
      groceryManagementSystem = 4c36250e
    ca.mcgill.ecse.grocerymanagementsystem.model.Shipment@5dcbb60[shipmentNumber:58]
      dateOrdered=null
      groceryManagementSystem = 4c36250e
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m200[0m[32m [0m[32m[1m"Eggs"[0m                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
    found item Eggs
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct item[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Try to add an item to a shipment that already contains that item PASSED

CucumberTestRunner > Cucumber > Update shipment > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Try to add an item to a shipment that's already been ordered STANDARD_OUT

    Scenario: Try to add an item to a shipment that's already been ordered      [90m# UpdateShipment.feature:68[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=62, Date=null
    Created shipment: ID=b, Number=63, Date=2025-02-24
    Created shipment: ID=c, Number=64, Date=null
    Created shipment: ID=d, Number=65, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to add item [0m[32m[1m"Eggs"[0m[32m to the shipment with ID [0m[32m[1m"d"[0m  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_add_item_to_the_shipment_with_id(java.lang.String,java.lang.String)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"shipment has already been ordered"[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"d"[0m[32m shall not include any items called [0m[32m[1m"Eggs"[0m    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_not_include_any_items_called(java.lang.String,java.lang.String)[0m
    found item Chicken noodle soup
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"d"[0m[32m shall include [0m[32m[1m1[0m[32m distinct item[0m                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Try to add an item to a shipment that's already been ordered PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Successfully update quantity of item in shipment > Update shipment - Successfully update quantity of item in shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Successfully update quantity of item in shipment - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Successfully update quantity of item in shipment                              [90m# UpdateShipment.feature:82[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=66, Date=null
    Created shipment: ID=b, Number=67, Date=2025-02-24
    Created shipment: ID=c, Number=68, Date=null
    Created shipment: ID=d, Number=69, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the shipment with ID [0m[32m[1m"a"[0m[32m to [0m[32m[1m1[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_set_the_quantity_of_item_in_the_shipment_with_id_to(java.lang.String,java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    looking for number with id a
    from hash map, the ship number for id a is 66
    FOUND CORRESPONDING SHIPMENTca.mcgill.ecse.grocerymanagementsystem.model.Shipment@66ea1466[shipmentNumber:66]
      dateOrdered=null
      groceryManagementSystem = 1601e47
    ca.mcgill.ecse.grocerymanagementsystem.model.Shipment@66ea1466[shipmentNumber:66]
      dateOrdered=null
      groceryManagementSystem = 1601e47
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m [0m[32m[1m"Eggs"[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
    found item Eggs
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct item[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Successfully update quantity of item in shipment > Update shipment - Successfully update quantity of item in shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Successfully update quantity of item in shipment - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Successfully update quantity of item in shipment > Update shipment - Successfully update quantity of item in shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Successfully update quantity of item in shipment - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Successfully update quantity of item in shipment                              [90m# UpdateShipment.feature:83[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=70, Date=null
    Created shipment: ID=b, Number=71, Date=2025-02-24
    Created shipment: ID=c, Number=72, Date=null
    Created shipment: ID=d, Number=73, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the shipment with ID [0m[32m[1m"a"[0m[32m to [0m[32m[1m3[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_set_the_quantity_of_item_in_the_shipment_with_id_to(java.lang.String,java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    looking for number with id a
    from hash map, the ship number for id a is 70
    FOUND CORRESPONDING SHIPMENTca.mcgill.ecse.grocerymanagementsystem.model.Shipment@3bffddff[shipmentNumber:70]
      dateOrdered=null
      groceryManagementSystem = 66971f6b
    ca.mcgill.ecse.grocerymanagementsystem.model.Shipment@3bffddff[shipmentNumber:70]
      dateOrdered=null
      groceryManagementSystem = 66971f6b
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m3[0m[32m [0m[32m[1m"Eggs"[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
    found item Eggs
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct item[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Successfully update quantity of item in shipment > Update shipment - Successfully update quantity of item in shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Successfully update quantity of item in shipment - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Successfully update quantity of item in shipment > Update shipment - Successfully update quantity of item in shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Successfully update quantity of item in shipment - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Successfully update quantity of item in shipment                               [90m# UpdateShipment.feature:84[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=74, Date=null
    Created shipment: ID=b, Number=75, Date=2025-02-24
    Created shipment: ID=c, Number=76, Date=null
    Created shipment: ID=d, Number=77, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the shipment with ID [0m[32m[1m"a"[0m[32m to [0m[32m[1m42[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_set_the_quantity_of_item_in_the_shipment_with_id_to(java.lang.String,java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
    looking for number with id a
    from hash map, the ship number for id a is 74
    FOUND CORRESPONDING SHIPMENTca.mcgill.ecse.grocerymanagementsystem.model.Shipment@517bd097[shipmentNumber:74]
      dateOrdered=null
      groceryManagementSystem = 142eef62
    ca.mcgill.ecse.grocerymanagementsystem.model.Shipment@517bd097[shipmentNumber:74]
      dateOrdered=null
      groceryManagementSystem = 142eef62
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m42[0m[32m [0m[32m[1m"Eggs"[0m                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
    found item Eggs
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct item[0m                                     [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Successfully update quantity of item in shipment > Update shipment - Successfully update quantity of item in shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Successfully update quantity of item in shipment - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Update shipment > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Successfully remove item from shipment by setting its quantity to zero STANDARD_OUT

    Scenario: Successfully remove item from shipment by setting its quantity to zero                [90m# UpdateShipment.feature:86[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=78, Date=null
    Created shipment: ID=b, Number=79, Date=2025-02-24
    Created shipment: ID=c, Number=80, Date=null
    Created shipment: ID=d, Number=81, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the shipment with ID [0m[32m[1m"a"[0m[32m to [0m[32m[1m0[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_set_the_quantity_of_item_in_the_shipment_with_id_to(java.lang.String,java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall not raise any errors[0m                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_not_raise_any_errors()[0m
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall not include any items called [0m[32m[1m"Eggs"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_not_include_any_items_called(java.lang.String,java.lang.String)[0m
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m0[0m[32m distinct items[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Successfully remove item from shipment by setting its quantity to zero PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Try to update quantity of item in a shipment that doesn't exist > Update shipment - Try to update quantity of item in a shipment that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Try to update quantity of item in a shipment that doesn't exist - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Try to update quantity of item in a shipment that doesn't exist                        [90m# UpdateShipment.feature:100[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=82, Date=null
    Created shipment: ID=b, Number=83, Date=2025-02-24
    Created shipment: ID=c, Number=84, Date=null
    Created shipment: ID=d, Number=85, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the non-existent shipment [0m[32m[1m9999999[0m[32m to [0m[32m[1m2[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_set_the_quantity_of_item_in_the_non_existent_shipment_to(java.lang.String,java.lang.Integer,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no shipment with number \"9999999\""[0m                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno shipment shall exist with number [0m[32m[1m9999999[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.no_shipment_shall_exist_with_number(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of shipments shall be [0m[32m[1m4[0m                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_total_number_of_shipments_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Try to update quantity of item in a shipment that doesn't exist > Update shipment - Try to update quantity of item in a shipment that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Try to update quantity of item in a shipment that doesn't exist - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Try to update quantity of item in a shipment that doesn't exist > Update shipment - Try to update quantity of item in a shipment that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Try to update quantity of item in a shipment that doesn't exist - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Try to update quantity of item in a shipment that doesn't exist                                         [90m# UpdateShipment.feature:101[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=86, Date=null
    Created shipment: ID=b, Number=87, Date=2025-02-24
    Created shipment: ID=c, Number=88, Date=null
    Created shipment: ID=d, Number=89, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                                                           [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to set the quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m in the non-existent shipment [0m[32m[1m123456789[0m[32m to [0m[32m[1m3[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_set_the_quantity_of_item_in_the_non_existent_shipment_to(java.lang.String,java.lang.Integer,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no shipment with number \"123456789\""[0m                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mno shipment shall exist with number [0m[32m[1m123456789[0m                                                                       [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.no_shipment_shall_exist_with_number(java.lang.Integer)[0m
      [32mAnd [0m[32mthe total number of shipments shall be [0m[32m[1m4[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_total_number_of_shipments_shall_be(java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Try to update quantity of item in a shipment that doesn't exist > Update shipment - Try to update quantity of item in a shipment that doesn't exist - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Try to update quantity of item in a shipment that doesn't exist - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Update quantity of item when shipment doesn't contain that item > Update shipment - Update quantity of item when shipment doesn't contain that item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Update quantity of item when shipment doesn't contain that item - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Update quantity of item when shipment doesn't contain that item                      [90m# UpdateShipment.feature:111[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=90, Date=null
    Created shipment: ID=b, Number=91, Date=2025-02-24
    Created shipment: ID=c, Number=92, Date=null
    Created shipment: ID=d, Number=93, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to set the quantity of item [0m[32m[1m"Dragon tail"[0m[32m in the shipment with ID [0m[32m[1m"a"[0m[32m to [0m[32m[1m2[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_set_the_quantity_of_item_in_the_shipment_with_id_to(java.lang.String,java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"there is no item called \"Dragon tail\""[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall not include any items called [0m[32m[1m"Dragon tail"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_not_include_any_items_called(java.lang.String,java.lang.String)[0m
    found item Eggs
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct items[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Update quantity of item when shipment doesn't contain that item > Update shipment - Update quantity of item when shipment doesn't contain that item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Update quantity of item when shipment doesn't contain that item - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Update quantity of item when shipment doesn't contain that item > Update shipment - Update quantity of item when shipment doesn't contain that item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Update quantity of item when shipment doesn't contain that item - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Update quantity of item when shipment doesn't contain that item               [90m# UpdateShipment.feature:112[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=94, Date=null
    Created shipment: ID=b, Number=95, Date=2025-02-24
    Created shipment: ID=c, Number=96, Date=null
    Created shipment: ID=d, Number=97, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                             [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                                 [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the shipment with ID [0m[32m[1m"c"[0m[32m to [0m[32m[1m1[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_set_the_quantity_of_item_in_the_shipment_with_id_to(java.lang.String,java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"shipment does not include item \"Eggs\""[0m               [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"c"[0m[32m shall not include any items called [0m[32m[1m"Eggs"[0m                        [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_not_include_any_items_called(java.lang.String,java.lang.String)[0m
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"c"[0m[32m shall include [0m[32m[1m0[0m[32m distinct items[0m                                   [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Update quantity of item when shipment doesn't contain that item > Update shipment - Update quantity of item when shipment doesn't contain that item - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Update quantity of item when shipment doesn't contain that item - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Unsuccessfully update quantity of item in shipment > Update shipment - Unsuccessfully update quantity of item in shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Unsuccessfully update quantity of item in shipment - Examples - Example #1.1 STANDARD_OUT

    Scenario Outline: Unsuccessfully update quantity of item in shipment                             [90m# UpdateShipment.feature:122[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=98, Date=null
    Created shipment: ID=b, Number=99, Date=2025-02-24
    Created shipment: ID=c, Number=100, Date=null
    Created shipment: ID=d, Number=101, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the shipment with ID [0m[32m[1m"a"[0m[32m to [0m[32m[1m-1[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_set_the_quantity_of_item_in_the_shipment_with_id_to(java.lang.String,java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"quantity must be non-negative"[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
    looking for number with id a
    from hash map, the ship number for id a is 98
    FOUND CORRESPONDING SHIPMENTca.mcgill.ecse.grocerymanagementsystem.model.Shipment@1950e8a6[shipmentNumber:98]
      dateOrdered=null
      groceryManagementSystem = 47289387
    ca.mcgill.ecse.grocerymanagementsystem.model.Shipment@1950e8a6[shipmentNumber:98]
      dateOrdered=null
      groceryManagementSystem = 47289387
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m200[0m[32m [0m[32m[1m"Eggs"[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
    found item Eggs
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct items[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Unsuccessfully update quantity of item in shipment > Update shipment - Unsuccessfully update quantity of item in shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Unsuccessfully update quantity of item in shipment - Examples - Example #1.1 PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Unsuccessfully update quantity of item in shipment > Update shipment - Unsuccessfully update quantity of item in shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Unsuccessfully update quantity of item in shipment - Examples - Example #1.2 STANDARD_OUT

    Scenario Outline: Unsuccessfully update quantity of item in shipment                             [90m# UpdateShipment.feature:123[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=102, Date=null
    Created shipment: ID=b, Number=103, Date=2025-02-24
    Created shipment: ID=c, Number=104, Date=null
    Created shipment: ID=d, Number=105, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the shipment with ID [0m[32m[1m"a"[0m[32m to [0m[32m[1m-2[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_set_the_quantity_of_item_in_the_shipment_with_id_to(java.lang.String,java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"quantity must be non-negative"[0m                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
    looking for number with id a
    from hash map, the ship number for id a is 102
    FOUND CORRESPONDING SHIPMENTca.mcgill.ecse.grocerymanagementsystem.model.Shipment@12cd9150[shipmentNumber:102]
      dateOrdered=null
      groceryManagementSystem = 114a85c2
    ca.mcgill.ecse.grocerymanagementsystem.model.Shipment@12cd9150[shipmentNumber:102]
      dateOrdered=null
      groceryManagementSystem = 114a85c2
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m200[0m[32m [0m[32m[1m"Eggs"[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
    found item Eggs
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"a"[0m[32m shall include [0m[32m[1m1[0m[32m distinct items[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Unsuccessfully update quantity of item in shipment > Update shipment - Unsuccessfully update quantity of item in shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Unsuccessfully update quantity of item in shipment - Examples - Example #1.2 PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Unsuccessfully update quantity of item in shipment > Update shipment - Unsuccessfully update quantity of item in shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Unsuccessfully update quantity of item in shipment - Examples - Example #1.3 STANDARD_OUT

    Scenario Outline: Unsuccessfully update quantity of item in shipment                             [90m# UpdateShipment.feature:124[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=106, Date=null
    Created shipment: ID=b, Number=107, Date=2025-02-24
    Created shipment: ID=c, Number=108, Date=null
    Created shipment: ID=d, Number=109, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                              [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to set the quantity of item [0m[32m[1m"Eggs"[0m[32m in the shipment with ID [0m[32m[1m"b"[0m[32m to [0m[32m[1m10[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_set_the_quantity_of_item_in_the_shipment_with_id_to(java.lang.String,java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"shipment has already been ordered"[0m                      [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
    looking for number with id b
    from hash map, the ship number for id b is 107
    FOUND CORRESPONDING SHIPMENTca.mcgill.ecse.grocerymanagementsystem.model.Shipment@f415a95[shipmentNumber:107]
      dateOrdered=2025-02-24
      groceryManagementSystem = cf65451
    ca.mcgill.ecse.grocerymanagementsystem.model.Shipment@f415a95[shipmentNumber:107]
      dateOrdered=2025-02-24
      groceryManagementSystem = cf65451
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"b"[0m[32m shall include [0m[32m[1m100[0m[32m [0m[32m[1m"Eggs"[0m                                          [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
    found item Eggs
    found item Chicken noodle soup
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"b"[0m[32m shall include [0m[32m[1m2[0m[32m distinct items[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Unsuccessfully update quantity of item in shipment > Update shipment - Unsuccessfully update quantity of item in shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Unsuccessfully update quantity of item in shipment - Examples - Example #1.3 PASSED

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Unsuccessfully update quantity of item in shipment > Update shipment - Unsuccessfully update quantity of item in shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Unsuccessfully update quantity of item in shipment - Examples - Example #1.4 STANDARD_OUT

    Scenario Outline: Unsuccessfully update quantity of item in shipment                                           [90m# UpdateShipment.feature:125[0m
      [32mGiven [0m[32mthe following items exist in the system[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ItemStepDefinitions.the_following_items_exist_in_the_system(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | name                | price | perishableOrNot | quantity | points |
        | Eggs                | 549   | perishable      | 20       | 5      |
        | Chicken noodle soup | 179   | non-perishable  | 0        | 2      |
    Created shipment: ID=a, Number=110, Date=null
    Created shipment: ID=b, Number=111, Date=2025-02-24
    Created shipment: ID=c, Number=112, Date=null
    Created shipment: ID=d, Number=113, Date=2025-02-24
      [32mAnd [0m[32mthe following shipments exist[0m                                                                            [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_shipments_exist(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | id | datePlaced |
        | a  | NULL       |
        | b  | 2025-02-24 |
        | c  | NULL       |
        | d  | 2025-02-24 |
      [32mAnd [0m[32mthe following items are part of shipments[0m                                                                [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_following_items_are_part_of_shipments(java.util.List<java.util.Map<java.lang.String, java.lang.String>>)[0m
        | shipment | item                | quantity |
        | a        | Eggs                | 200      |
        | b        | Eggs                | 100      |
        | b        | Chicken noodle soup | 150      |
        | d        | Chicken noodle soup | 50       |
      [32mWhen [0m[32mthe manager attempts to set the quantity of item [0m[32m[1m"Chicken noodle soup"[0m[32m in the shipment with ID [0m[32m[1m"b"[0m[32m to [0m[32m[1m7[0m [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_manager_attempts_to_set_the_quantity_of_item_in_the_shipment_with_id_to(java.lang.String,java.lang.String,java.lang.Integer)[0m
      [32mThen [0m[32mthe system shall raise the error [0m[32m[1m"shipment has already been ordered"[0m                                    [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ErrorStepDefinitions.the_system_shall_raise_the_error(java.lang.String)[0m
    looking for number with id b
    from hash map, the ship number for id b is 111
    FOUND CORRESPONDING SHIPMENTca.mcgill.ecse.grocerymanagementsystem.model.Shipment@724f138e[shipmentNumber:111]
      dateOrdered=2025-02-24
      groceryManagementSystem = 37eeec90
    ca.mcgill.ecse.grocerymanagementsystem.model.Shipment@724f138e[shipmentNumber:111]
      dateOrdered=2025-02-24
      groceryManagementSystem = 37eeec90
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"b"[0m[32m shall include [0m[32m[1m150[0m[32m [0m[32m[1m"Chicken noodle soup"[0m                                         [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include(java.lang.String,java.lang.Integer,java.lang.String)[0m
    found item Eggs
    found item Chicken noodle soup
      [32mAnd [0m[32mthe shipment with ID [0m[32m[1m"b"[0m[32m shall include [0m[32m[1m2[0m[32m distinct items[0m                                                  [90m# ca.mcgill.ecse.grocerymanagementsystem.feature.ShipmentStepDefinitions.the_shipment_with_id_shall_include_distinct_items(java.lang.String,java.lang.Integer)[0m

CucumberTestRunner > Cucumber > Update shipment > Update shipment - Unsuccessfully update quantity of item in shipment > Update shipment - Unsuccessfully update quantity of item in shipment - Examples > ca.mcgill.ecse.grocerymanagementsystem.feature.CucumberTestRunner.Update shipment - Unsuccessfully update quantity of item in shipment - Examples - Example #1.4 PASSED

BUILD SUCCESSFUL in 2s
5 actionable tasks: 2 executed, 3 up-to-date
Configuration cache entry reused.
